ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"GBCL_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.GBCL_RXISR,"ax",%progbits
  20              		.align	2
  21              		.global	GBCL_RXISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	GBCL_RXISR, %function
  25              	GBCL_RXISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\GBCL_INT.c"
   1:Generated_Source\PSoC5/GBCL_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/GBCL_INT.c **** * File Name: GBCLINT.c
   3:Generated_Source\PSoC5/GBCL_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/GBCL_INT.c **** *
   5:Generated_Source\PSoC5/GBCL_INT.c **** * Description:
   6:Generated_Source\PSoC5/GBCL_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/GBCL_INT.c **** *
   8:Generated_Source\PSoC5/GBCL_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/GBCL_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/GBCL_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/GBCL_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/GBCL_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/GBCL_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/GBCL_INT.c **** 
  15:Generated_Source\PSoC5/GBCL_INT.c **** #include "GBCL.h"
  16:Generated_Source\PSoC5/GBCL_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC5/GBCL_INT.c **** 
  18:Generated_Source\PSoC5/GBCL_INT.c **** 
  19:Generated_Source\PSoC5/GBCL_INT.c **** /***************************************
  20:Generated_Source\PSoC5/GBCL_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/GBCL_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/GBCL_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/GBCL_INT.c **** 
  24:Generated_Source\PSoC5/GBCL_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/GBCL_INT.c **** 
  26:Generated_Source\PSoC5/GBCL_INT.c **** #if (GBCL_RX_INTERRUPT_ENABLED && (GBCL_RX_ENABLED || GBCL_HD_ENABLED))
  27:Generated_Source\PSoC5/GBCL_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/GBCL_INT.c ****     * Function Name: GBCL_RXISR
  29:Generated_Source\PSoC5/GBCL_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/GBCL_INT.c ****     *
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 2


  31:Generated_Source\PSoC5/GBCL_INT.c ****     * Summary:
  32:Generated_Source\PSoC5/GBCL_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/GBCL_INT.c ****     *
  34:Generated_Source\PSoC5/GBCL_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/GBCL_INT.c ****     *  None.
  36:Generated_Source\PSoC5/GBCL_INT.c ****     *
  37:Generated_Source\PSoC5/GBCL_INT.c ****     * Return:
  38:Generated_Source\PSoC5/GBCL_INT.c ****     *  None.
  39:Generated_Source\PSoC5/GBCL_INT.c ****     *
  40:Generated_Source\PSoC5/GBCL_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/GBCL_INT.c ****     *  GBCL_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/GBCL_INT.c ****     *  GBCL_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/GBCL_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/GBCL_INT.c ****     *  GBCL_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/GBCL_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/GBCL_INT.c ****     *  GBCL_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/GBCL_INT.c ****     *     when GBCL_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/GBCL_INT.c ****     *     GBCL_rxBufferRead index.
  49:Generated_Source\PSoC5/GBCL_INT.c ****     *  GBCL_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/GBCL_INT.c ****     *     Set to one when GBCL_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/GBCL_INT.c ****     *    GBCL_rxBufferRead
  52:Generated_Source\PSoC5/GBCL_INT.c ****     *  GBCL_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/GBCL_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/GBCL_INT.c ****     *  GBCL_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/GBCL_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/GBCL_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/GBCL_INT.c ****     *
  58:Generated_Source\PSoC5/GBCL_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/GBCL_INT.c ****     CY_ISR(GBCL_RXISR)
  60:Generated_Source\PSoC5/GBCL_INT.c ****     {
  28              		.loc 1 60 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  61:Generated_Source\PSoC5/GBCL_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/GBCL_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/GBCL_INT.c ****         uint8 increment_pointer = 0u;
  40              		.loc 1 63 0
  41 0006 0023     		movs	r3, #0
  42 0008 FB71     		strb	r3, [r7, #7]
  43              	.L6:
  64:Generated_Source\PSoC5/GBCL_INT.c **** 
  65:Generated_Source\PSoC5/GBCL_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/GBCL_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/GBCL_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/GBCL_INT.c **** 
  69:Generated_Source\PSoC5/GBCL_INT.c ****     #ifdef GBCL_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/GBCL_INT.c ****         GBCL_RXISR_EntryCallback();
  71:Generated_Source\PSoC5/GBCL_INT.c ****     #endif /* GBCL_RXISR_ENTRY_CALLBACK */
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 3


  72:Generated_Source\PSoC5/GBCL_INT.c **** 
  73:Generated_Source\PSoC5/GBCL_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC5/GBCL_INT.c ****         /* `#START GBCL_RXISR_START` */
  75:Generated_Source\PSoC5/GBCL_INT.c **** 
  76:Generated_Source\PSoC5/GBCL_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/GBCL_INT.c **** 
  78:Generated_Source\PSoC5/GBCL_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/GBCL_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/GBCL_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/GBCL_INT.c ****     #endif /* (CY_PSOC3) */
  82:Generated_Source\PSoC5/GBCL_INT.c **** 
  83:Generated_Source\PSoC5/GBCL_INT.c ****         do
  84:Generated_Source\PSoC5/GBCL_INT.c ****         {
  85:Generated_Source\PSoC5/GBCL_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/GBCL_INT.c ****             readStatus = GBCL_RXSTATUS_REG;
  44              		.loc 1 86 0
  45 000a 2C4B     		ldr	r3, .L7
  46 000c 1B78     		ldrb	r3, [r3]
  47 000e BB71     		strb	r3, [r7, #6]
  87:Generated_Source\PSoC5/GBCL_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  88:Generated_Source\PSoC5/GBCL_INT.c ****             *  of the user code in GBCL_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/GBCL_INT.c ****             */
  90:Generated_Source\PSoC5/GBCL_INT.c ****             readData = readStatus;
  48              		.loc 1 90 0
  49 0010 BB79     		ldrb	r3, [r7, #6]
  50 0012 7B71     		strb	r3, [r7, #5]
  91:Generated_Source\PSoC5/GBCL_INT.c **** 
  92:Generated_Source\PSoC5/GBCL_INT.c ****             if((readStatus & (GBCL_RX_STS_BREAK | 
  93:Generated_Source\PSoC5/GBCL_INT.c ****                             GBCL_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/GBCL_INT.c ****                             GBCL_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/GBCL_INT.c ****                             GBCL_RX_STS_OVERRUN)) != 0u)
  51              		.loc 1 95 0
  52 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  53 0016 03F01E03 		and	r3, r3, #30
  92:Generated_Source\PSoC5/GBCL_INT.c ****                             GBCL_RX_STS_PAR_ERROR |
  54              		.loc 1 92 0
  55 001a 002B     		cmp	r3, #0
  56 001c 0CD0     		beq	.L2
  96:Generated_Source\PSoC5/GBCL_INT.c ****             {
  97:Generated_Source\PSoC5/GBCL_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/GBCL_INT.c ****                 GBCL_errorStatus |= readStatus & ( GBCL_RX_STS_BREAK | 
  57              		.loc 1 98 0
  58 001e 97F90630 		ldrsb	r3, [r7, #6]
  59 0022 03F01E03 		and	r3, r3, #30
  60 0026 5AB2     		sxtb	r2, r3
  61 0028 254B     		ldr	r3, .L7+4
  62 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  63 002c 5BB2     		sxtb	r3, r3
  64 002e 1343     		orrs	r3, r3, r2
  65 0030 5BB2     		sxtb	r3, r3
  66 0032 DAB2     		uxtb	r2, r3
  67 0034 224B     		ldr	r3, .L7+4
  68 0036 1A70     		strb	r2, [r3]
  69              	.L2:
  99:Generated_Source\PSoC5/GBCL_INT.c ****                                                             GBCL_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/GBCL_INT.c ****                                                             GBCL_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC5/GBCL_INT.c ****                                                             GBCL_RX_STS_OVERRUN);
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 4


 102:Generated_Source\PSoC5/GBCL_INT.c ****                 /* `#START GBCL_RXISR_ERROR` */
 103:Generated_Source\PSoC5/GBCL_INT.c **** 
 104:Generated_Source\PSoC5/GBCL_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/GBCL_INT.c ****                 
 106:Generated_Source\PSoC5/GBCL_INT.c ****             #ifdef GBCL_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/GBCL_INT.c ****                 GBCL_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/GBCL_INT.c ****             #endif /* GBCL_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/GBCL_INT.c ****             }
 110:Generated_Source\PSoC5/GBCL_INT.c ****             
 111:Generated_Source\PSoC5/GBCL_INT.c ****             if((readStatus & GBCL_RX_STS_FIFO_NOTEMPTY) != 0u)
  70              		.loc 1 111 0
  71 0038 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  72 003a 03F02003 		and	r3, r3, #32
  73 003e 002B     		cmp	r3, #0
  74 0040 31D0     		beq	.L3
 112:Generated_Source\PSoC5/GBCL_INT.c ****             {
 113:Generated_Source\PSoC5/GBCL_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/GBCL_INT.c ****                 readData = GBCL_RXDATA_REG;
  75              		.loc 1 114 0
  76 0042 204B     		ldr	r3, .L7+8
  77 0044 1B78     		ldrb	r3, [r3]
  78 0046 7B71     		strb	r3, [r7, #5]
 115:Generated_Source\PSoC5/GBCL_INT.c ****             #if (GBCL_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/GBCL_INT.c ****                 if(GBCL_rxAddressMode == (uint8)GBCL__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/GBCL_INT.c ****                 {
 118:Generated_Source\PSoC5/GBCL_INT.c ****                     if((readStatus & GBCL_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/GBCL_INT.c ****                     {
 120:Generated_Source\PSoC5/GBCL_INT.c ****                         if ((readStatus & GBCL_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/GBCL_INT.c ****                         {
 122:Generated_Source\PSoC5/GBCL_INT.c ****                             GBCL_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/GBCL_INT.c ****                         }
 124:Generated_Source\PSoC5/GBCL_INT.c ****                         else
 125:Generated_Source\PSoC5/GBCL_INT.c ****                         {
 126:Generated_Source\PSoC5/GBCL_INT.c ****                             GBCL_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/GBCL_INT.c ****                         }
 128:Generated_Source\PSoC5/GBCL_INT.c ****                     }
 129:Generated_Source\PSoC5/GBCL_INT.c ****                     if(GBCL_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/GBCL_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC5/GBCL_INT.c ****                         GBCL_rxBuffer[GBCL_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/GBCL_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/GBCL_INT.c ****                     }
 134:Generated_Source\PSoC5/GBCL_INT.c ****                 }
 135:Generated_Source\PSoC5/GBCL_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/GBCL_INT.c ****                 {
 137:Generated_Source\PSoC5/GBCL_INT.c ****                     GBCL_rxBuffer[GBCL_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/GBCL_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/GBCL_INT.c ****                 }
 140:Generated_Source\PSoC5/GBCL_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/GBCL_INT.c ****                 GBCL_rxBuffer[GBCL_rxBufferWrite] = readData;
  79              		.loc 1 141 0
  80 0048 1F4B     		ldr	r3, .L7+12
  81 004a 1B78     		ldrb	r3, [r3]
  82 004c DBB2     		uxtb	r3, r3
  83 004e 1946     		mov	r1, r3
  84 0050 1E4A     		ldr	r2, .L7+16
  85 0052 7B79     		ldrb	r3, [r7, #5]
  86 0054 5354     		strb	r3, [r2, r1]
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 5


 142:Generated_Source\PSoC5/GBCL_INT.c ****                 increment_pointer = 1u;
  87              		.loc 1 142 0
  88 0056 0123     		movs	r3, #1
  89 0058 FB71     		strb	r3, [r7, #7]
 143:Generated_Source\PSoC5/GBCL_INT.c ****             #endif /* (GBCL_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/GBCL_INT.c **** 
 145:Generated_Source\PSoC5/GBCL_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/GBCL_INT.c ****                 if(increment_pointer != 0u)
  90              		.loc 1 146 0
  91 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  92 005c 002B     		cmp	r3, #0
  93 005e 22D0     		beq	.L3
 147:Generated_Source\PSoC5/GBCL_INT.c ****                 {
 148:Generated_Source\PSoC5/GBCL_INT.c ****                     if(GBCL_rxBufferLoopDetect != 0u)
  94              		.loc 1 148 0
  95 0060 1B4B     		ldr	r3, .L7+20
  96 0062 1B78     		ldrb	r3, [r3]
  97 0064 DBB2     		uxtb	r3, r3
  98 0066 002B     		cmp	r3, #0
  99 0068 02D0     		beq	.L4
 149:Generated_Source\PSoC5/GBCL_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/GBCL_INT.c ****                         GBCL_rxBufferOverflow = 1u;
 100              		.loc 1 150 0
 101 006a 1A4B     		ldr	r3, .L7+24
 102 006c 0122     		movs	r2, #1
 103 006e 1A70     		strb	r2, [r3]
 104              	.L4:
 151:Generated_Source\PSoC5/GBCL_INT.c ****                     }
 152:Generated_Source\PSoC5/GBCL_INT.c ****                     /* Set next pointer. */
 153:Generated_Source\PSoC5/GBCL_INT.c ****                     GBCL_rxBufferWrite++;
 105              		.loc 1 153 0
 106 0070 154B     		ldr	r3, .L7+12
 107 0072 1B78     		ldrb	r3, [r3]
 108 0074 DBB2     		uxtb	r3, r3
 109 0076 0133     		adds	r3, r3, #1
 110 0078 DAB2     		uxtb	r2, r3
 111 007a 134B     		ldr	r3, .L7+12
 112 007c 1A70     		strb	r2, [r3]
 154:Generated_Source\PSoC5/GBCL_INT.c **** 
 155:Generated_Source\PSoC5/GBCL_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/GBCL_INT.c ****                     if(GBCL_rxBufferWrite >= GBCL_RX_BUFFER_SIZE)
 113              		.loc 1 156 0
 114 007e 124B     		ldr	r3, .L7+12
 115 0080 1B78     		ldrb	r3, [r3]
 116 0082 DBB2     		uxtb	r3, r3
 117 0084 5BB2     		sxtb	r3, r3
 118 0086 002B     		cmp	r3, #0
 119 0088 02DA     		bge	.L5
 157:Generated_Source\PSoC5/GBCL_INT.c ****                     {
 158:Generated_Source\PSoC5/GBCL_INT.c ****                         GBCL_rxBufferWrite = 0u;
 120              		.loc 1 158 0
 121 008a 0F4B     		ldr	r3, .L7+12
 122 008c 0022     		movs	r2, #0
 123 008e 1A70     		strb	r2, [r3]
 124              	.L5:
 159:Generated_Source\PSoC5/GBCL_INT.c ****                     }
 160:Generated_Source\PSoC5/GBCL_INT.c **** 
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 6


 161:Generated_Source\PSoC5/GBCL_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC5/GBCL_INT.c ****                     if(GBCL_rxBufferWrite == GBCL_rxBufferRead)
 125              		.loc 1 162 0
 126 0090 0D4B     		ldr	r3, .L7+12
 127 0092 1B78     		ldrb	r3, [r3]
 128 0094 DAB2     		uxtb	r2, r3
 129 0096 104B     		ldr	r3, .L7+28
 130 0098 1B78     		ldrb	r3, [r3]
 131 009a DBB2     		uxtb	r3, r3
 132 009c 9A42     		cmp	r2, r3
 133 009e 02D1     		bne	.L3
 163:Generated_Source\PSoC5/GBCL_INT.c ****                     {
 164:Generated_Source\PSoC5/GBCL_INT.c ****                         GBCL_rxBufferLoopDetect = 1u;
 134              		.loc 1 164 0
 135 00a0 0B4B     		ldr	r3, .L7+20
 136 00a2 0122     		movs	r2, #1
 137 00a4 1A70     		strb	r2, [r3]
 138              	.L3:
 165:Generated_Source\PSoC5/GBCL_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/GBCL_INT.c ****                         #if (GBCL_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/GBCL_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/GBCL_INT.c ****                             GBCL_RXSTATUS_MASK_REG  &= (uint8)~GBCL_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC5/GBCL_INT.c ****                             CyIntClearPending(GBCL_RX_VECT_NUM);
 170:Generated_Source\PSoC5/GBCL_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/GBCL_INT.c ****                         #endif /* (GBCL_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/GBCL_INT.c ****                     }
 173:Generated_Source\PSoC5/GBCL_INT.c ****                 }
 174:Generated_Source\PSoC5/GBCL_INT.c ****             }
 175:Generated_Source\PSoC5/GBCL_INT.c ****         }while((readStatus & GBCL_RX_STS_FIFO_NOTEMPTY) != 0u);
 139              		.loc 1 175 0
 140 00a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 141 00a8 03F02003 		and	r3, r3, #32
 142 00ac 002B     		cmp	r3, #0
 143 00ae ACD1     		bne	.L6
 176:Generated_Source\PSoC5/GBCL_INT.c **** 
 177:Generated_Source\PSoC5/GBCL_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/GBCL_INT.c ****         /* `#START GBCL_RXISR_END` */
 179:Generated_Source\PSoC5/GBCL_INT.c **** 
 180:Generated_Source\PSoC5/GBCL_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/GBCL_INT.c **** 
 182:Generated_Source\PSoC5/GBCL_INT.c ****     #ifdef GBCL_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/GBCL_INT.c ****         GBCL_RXISR_ExitCallback();
 184:Generated_Source\PSoC5/GBCL_INT.c ****     #endif /* GBCL_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/GBCL_INT.c **** 
 186:Generated_Source\PSoC5/GBCL_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/GBCL_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/GBCL_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/GBCL_INT.c ****     }
 144              		.loc 1 189 0
 145 00b0 00BF     		nop
 146 00b2 0C37     		adds	r7, r7, #12
 147              		.cfi_def_cfa_offset 4
 148 00b4 BD46     		mov	sp, r7
 149              		.cfi_def_cfa_register 13
 150              		@ sp needed
 151 00b6 80BC     		pop	{r7}
 152              		.cfi_restore 7
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 7


 153              		.cfi_def_cfa_offset 0
 154 00b8 7047     		bx	lr
 155              	.L8:
 156 00ba 00BF     		.align	2
 157              	.L7:
 158 00bc 69650040 		.word	1073767785
 159 00c0 00000000 		.word	GBCL_errorStatus
 160 00c4 49650040 		.word	1073767753
 161 00c8 00000000 		.word	GBCL_rxBufferWrite
 162 00cc 00000000 		.word	GBCL_rxBuffer
 163 00d0 00000000 		.word	GBCL_rxBufferLoopDetect
 164 00d4 00000000 		.word	GBCL_rxBufferOverflow
 165 00d8 00000000 		.word	GBCL_rxBufferRead
 166              		.cfi_endproc
 167              	.LFE0:
 168              		.size	GBCL_RXISR, .-GBCL_RXISR
 169              		.text
 170              	.Letext0:
 171              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 172              		.file 3 "Generated_Source\\PSoC5\\GBCL.h"
 173              		.section	.debug_info,"",%progbits
 174              	.Ldebug_info0:
 175 0000 45010000 		.4byte	0x145
 176 0004 0400     		.2byte	0x4
 177 0006 00000000 		.4byte	.Ldebug_abbrev0
 178 000a 04       		.byte	0x4
 179 000b 01       		.uleb128 0x1
 180 000c DD000000 		.4byte	.LASF25
 181 0010 0C       		.byte	0xc
 182 0011 9E000000 		.4byte	.LASF26
 183 0015 21000000 		.4byte	.LASF27
 184 0019 00000000 		.4byte	.Ldebug_ranges0+0
 185 001d 00000000 		.4byte	0
 186 0021 00000000 		.4byte	.Ldebug_line0
 187 0025 02       		.uleb128 0x2
 188 0026 01       		.byte	0x1
 189 0027 06       		.byte	0x6
 190 0028 CD010000 		.4byte	.LASF0
 191 002c 02       		.uleb128 0x2
 192 002d 01       		.byte	0x1
 193 002e 08       		.byte	0x8
 194 002f 6B010000 		.4byte	.LASF1
 195 0033 02       		.uleb128 0x2
 196 0034 02       		.byte	0x2
 197 0035 05       		.byte	0x5
 198 0036 98010000 		.4byte	.LASF2
 199 003a 02       		.uleb128 0x2
 200 003b 02       		.byte	0x2
 201 003c 07       		.byte	0x7
 202 003d 0E000000 		.4byte	.LASF3
 203 0041 02       		.uleb128 0x2
 204 0042 04       		.byte	0x4
 205 0043 05       		.byte	0x5
 206 0044 7E010000 		.4byte	.LASF4
 207 0048 02       		.uleb128 0x2
 208 0049 04       		.byte	0x4
 209 004a 07       		.byte	0x7
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 8


 210 004b 8C000000 		.4byte	.LASF5
 211 004f 02       		.uleb128 0x2
 212 0050 08       		.byte	0x8
 213 0051 05       		.byte	0x5
 214 0052 00000000 		.4byte	.LASF6
 215 0056 02       		.uleb128 0x2
 216 0057 08       		.byte	0x8
 217 0058 07       		.byte	0x7
 218 0059 C0000000 		.4byte	.LASF7
 219 005d 03       		.uleb128 0x3
 220 005e 04       		.byte	0x4
 221 005f 05       		.byte	0x5
 222 0060 696E7400 		.ascii	"int\000"
 223 0064 02       		.uleb128 0x2
 224 0065 04       		.byte	0x4
 225 0066 07       		.byte	0x7
 226 0067 55000000 		.4byte	.LASF8
 227 006b 04       		.uleb128 0x4
 228 006c 86000000 		.4byte	.LASF12
 229 0070 02       		.byte	0x2
 230 0071 E401     		.2byte	0x1e4
 231 0073 2C000000 		.4byte	0x2c
 232 0077 02       		.uleb128 0x2
 233 0078 04       		.byte	0x4
 234 0079 04       		.byte	0x4
 235 007a D7000000 		.4byte	.LASF9
 236 007e 02       		.uleb128 0x2
 237 007f 08       		.byte	0x8
 238 0080 04       		.byte	0x4
 239 0081 B0010000 		.4byte	.LASF10
 240 0085 02       		.uleb128 0x2
 241 0086 01       		.byte	0x1
 242 0087 08       		.byte	0x8
 243 0088 79010000 		.4byte	.LASF11
 244 008c 04       		.uleb128 0x4
 245 008d 26020000 		.4byte	.LASF13
 246 0091 02       		.byte	0x2
 247 0092 8E02     		.2byte	0x28e
 248 0094 98000000 		.4byte	0x98
 249 0098 05       		.uleb128 0x5
 250 0099 6B000000 		.4byte	0x6b
 251 009d 02       		.uleb128 0x2
 252 009e 08       		.byte	0x8
 253 009f 04       		.byte	0x4
 254 00a0 FC010000 		.4byte	.LASF14
 255 00a4 02       		.uleb128 0x2
 256 00a5 04       		.byte	0x4
 257 00a6 07       		.byte	0x7
 258 00a7 34020000 		.4byte	.LASF15
 259 00ab 06       		.uleb128 0x6
 260 00ac 08020000 		.4byte	.LASF28
 261 00b0 01       		.byte	0x1
 262 00b1 3B       		.byte	0x3b
 263 00b2 00000000 		.4byte	.LFB0
 264 00b6 DC000000 		.4byte	.LFE0-.LFB0
 265 00ba 01       		.uleb128 0x1
 266 00bb 9C       		.byte	0x9c
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 9


 267 00bc EB000000 		.4byte	0xeb
 268 00c0 07       		.uleb128 0x7
 269 00c1 2B020000 		.4byte	.LASF16
 270 00c5 01       		.byte	0x1
 271 00c6 3D       		.byte	0x3d
 272 00c7 6B000000 		.4byte	0x6b
 273 00cb 02       		.uleb128 0x2
 274 00cc 91       		.byte	0x91
 275 00cd 75       		.sleb128 -11
 276 00ce 07       		.uleb128 0x7
 277 00cf F1010000 		.4byte	.LASF17
 278 00d3 01       		.byte	0x1
 279 00d4 3E       		.byte	0x3e
 280 00d5 6B000000 		.4byte	0x6b
 281 00d9 02       		.uleb128 0x2
 282 00da 91       		.byte	0x91
 283 00db 76       		.sleb128 -10
 284 00dc 07       		.uleb128 0x7
 285 00dd 62000000 		.4byte	.LASF18
 286 00e1 01       		.byte	0x1
 287 00e2 3F       		.byte	0x3f
 288 00e3 6B000000 		.4byte	0x6b
 289 00e7 02       		.uleb128 0x2
 290 00e8 91       		.byte	0x91
 291 00e9 77       		.sleb128 -9
 292 00ea 00       		.byte	0
 293 00eb 08       		.uleb128 0x8
 294 00ec 87010000 		.4byte	.LASF19
 295 00f0 03       		.byte	0x3
 296 00f1 3D01     		.2byte	0x13d
 297 00f3 6B000000 		.4byte	0x6b
 298 00f7 09       		.uleb128 0x9
 299 00f8 98000000 		.4byte	0x98
 300 00fc 07010000 		.4byte	0x107
 301 0100 0A       		.uleb128 0xa
 302 0101 A4000000 		.4byte	0xa4
 303 0105 7F       		.byte	0x7f
 304 0106 00       		.byte	0
 305 0107 08       		.uleb128 0x8
 306 0108 A2010000 		.4byte	.LASF20
 307 010c 03       		.byte	0x3
 308 010d 3E01     		.2byte	0x13e
 309 010f 13010000 		.4byte	0x113
 310 0113 05       		.uleb128 0x5
 311 0114 F7000000 		.4byte	0xf7
 312 0118 08       		.uleb128 0x8
 313 0119 74000000 		.4byte	.LASF21
 314 011d 03       		.byte	0x3
 315 011e 3F01     		.2byte	0x13f
 316 0120 98000000 		.4byte	0x98
 317 0124 08       		.uleb128 0x8
 318 0125 13020000 		.4byte	.LASF22
 319 0129 03       		.byte	0x3
 320 012a 4001     		.2byte	0x140
 321 012c 98000000 		.4byte	0x98
 322 0130 08       		.uleb128 0x8
 323 0131 D9010000 		.4byte	.LASF23
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 10


 324 0135 03       		.byte	0x3
 325 0136 4101     		.2byte	0x141
 326 0138 98000000 		.4byte	0x98
 327 013c 08       		.uleb128 0x8
 328 013d B7010000 		.4byte	.LASF24
 329 0141 03       		.byte	0x3
 330 0142 4201     		.2byte	0x142
 331 0144 98000000 		.4byte	0x98
 332 0148 00       		.byte	0
 333              		.section	.debug_abbrev,"",%progbits
 334              	.Ldebug_abbrev0:
 335 0000 01       		.uleb128 0x1
 336 0001 11       		.uleb128 0x11
 337 0002 01       		.byte	0x1
 338 0003 25       		.uleb128 0x25
 339 0004 0E       		.uleb128 0xe
 340 0005 13       		.uleb128 0x13
 341 0006 0B       		.uleb128 0xb
 342 0007 03       		.uleb128 0x3
 343 0008 0E       		.uleb128 0xe
 344 0009 1B       		.uleb128 0x1b
 345 000a 0E       		.uleb128 0xe
 346 000b 55       		.uleb128 0x55
 347 000c 17       		.uleb128 0x17
 348 000d 11       		.uleb128 0x11
 349 000e 01       		.uleb128 0x1
 350 000f 10       		.uleb128 0x10
 351 0010 17       		.uleb128 0x17
 352 0011 00       		.byte	0
 353 0012 00       		.byte	0
 354 0013 02       		.uleb128 0x2
 355 0014 24       		.uleb128 0x24
 356 0015 00       		.byte	0
 357 0016 0B       		.uleb128 0xb
 358 0017 0B       		.uleb128 0xb
 359 0018 3E       		.uleb128 0x3e
 360 0019 0B       		.uleb128 0xb
 361 001a 03       		.uleb128 0x3
 362 001b 0E       		.uleb128 0xe
 363 001c 00       		.byte	0
 364 001d 00       		.byte	0
 365 001e 03       		.uleb128 0x3
 366 001f 24       		.uleb128 0x24
 367 0020 00       		.byte	0
 368 0021 0B       		.uleb128 0xb
 369 0022 0B       		.uleb128 0xb
 370 0023 3E       		.uleb128 0x3e
 371 0024 0B       		.uleb128 0xb
 372 0025 03       		.uleb128 0x3
 373 0026 08       		.uleb128 0x8
 374 0027 00       		.byte	0
 375 0028 00       		.byte	0
 376 0029 04       		.uleb128 0x4
 377 002a 16       		.uleb128 0x16
 378 002b 00       		.byte	0
 379 002c 03       		.uleb128 0x3
 380 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 11


 381 002e 3A       		.uleb128 0x3a
 382 002f 0B       		.uleb128 0xb
 383 0030 3B       		.uleb128 0x3b
 384 0031 05       		.uleb128 0x5
 385 0032 49       		.uleb128 0x49
 386 0033 13       		.uleb128 0x13
 387 0034 00       		.byte	0
 388 0035 00       		.byte	0
 389 0036 05       		.uleb128 0x5
 390 0037 35       		.uleb128 0x35
 391 0038 00       		.byte	0
 392 0039 49       		.uleb128 0x49
 393 003a 13       		.uleb128 0x13
 394 003b 00       		.byte	0
 395 003c 00       		.byte	0
 396 003d 06       		.uleb128 0x6
 397 003e 2E       		.uleb128 0x2e
 398 003f 01       		.byte	0x1
 399 0040 3F       		.uleb128 0x3f
 400 0041 19       		.uleb128 0x19
 401 0042 03       		.uleb128 0x3
 402 0043 0E       		.uleb128 0xe
 403 0044 3A       		.uleb128 0x3a
 404 0045 0B       		.uleb128 0xb
 405 0046 3B       		.uleb128 0x3b
 406 0047 0B       		.uleb128 0xb
 407 0048 27       		.uleb128 0x27
 408 0049 19       		.uleb128 0x19
 409 004a 11       		.uleb128 0x11
 410 004b 01       		.uleb128 0x1
 411 004c 12       		.uleb128 0x12
 412 004d 06       		.uleb128 0x6
 413 004e 40       		.uleb128 0x40
 414 004f 18       		.uleb128 0x18
 415 0050 9742     		.uleb128 0x2117
 416 0052 19       		.uleb128 0x19
 417 0053 01       		.uleb128 0x1
 418 0054 13       		.uleb128 0x13
 419 0055 00       		.byte	0
 420 0056 00       		.byte	0
 421 0057 07       		.uleb128 0x7
 422 0058 34       		.uleb128 0x34
 423 0059 00       		.byte	0
 424 005a 03       		.uleb128 0x3
 425 005b 0E       		.uleb128 0xe
 426 005c 3A       		.uleb128 0x3a
 427 005d 0B       		.uleb128 0xb
 428 005e 3B       		.uleb128 0x3b
 429 005f 0B       		.uleb128 0xb
 430 0060 49       		.uleb128 0x49
 431 0061 13       		.uleb128 0x13
 432 0062 02       		.uleb128 0x2
 433 0063 18       		.uleb128 0x18
 434 0064 00       		.byte	0
 435 0065 00       		.byte	0
 436 0066 08       		.uleb128 0x8
 437 0067 34       		.uleb128 0x34
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 12


 438 0068 00       		.byte	0
 439 0069 03       		.uleb128 0x3
 440 006a 0E       		.uleb128 0xe
 441 006b 3A       		.uleb128 0x3a
 442 006c 0B       		.uleb128 0xb
 443 006d 3B       		.uleb128 0x3b
 444 006e 05       		.uleb128 0x5
 445 006f 49       		.uleb128 0x49
 446 0070 13       		.uleb128 0x13
 447 0071 3F       		.uleb128 0x3f
 448 0072 19       		.uleb128 0x19
 449 0073 3C       		.uleb128 0x3c
 450 0074 19       		.uleb128 0x19
 451 0075 00       		.byte	0
 452 0076 00       		.byte	0
 453 0077 09       		.uleb128 0x9
 454 0078 01       		.uleb128 0x1
 455 0079 01       		.byte	0x1
 456 007a 49       		.uleb128 0x49
 457 007b 13       		.uleb128 0x13
 458 007c 01       		.uleb128 0x1
 459 007d 13       		.uleb128 0x13
 460 007e 00       		.byte	0
 461 007f 00       		.byte	0
 462 0080 0A       		.uleb128 0xa
 463 0081 21       		.uleb128 0x21
 464 0082 00       		.byte	0
 465 0083 49       		.uleb128 0x49
 466 0084 13       		.uleb128 0x13
 467 0085 2F       		.uleb128 0x2f
 468 0086 0B       		.uleb128 0xb
 469 0087 00       		.byte	0
 470 0088 00       		.byte	0
 471 0089 00       		.byte	0
 472              		.section	.debug_aranges,"",%progbits
 473 0000 1C000000 		.4byte	0x1c
 474 0004 0200     		.2byte	0x2
 475 0006 00000000 		.4byte	.Ldebug_info0
 476 000a 04       		.byte	0x4
 477 000b 00       		.byte	0
 478 000c 0000     		.2byte	0
 479 000e 0000     		.2byte	0
 480 0010 00000000 		.4byte	.LFB0
 481 0014 DC000000 		.4byte	.LFE0-.LFB0
 482 0018 00000000 		.4byte	0
 483 001c 00000000 		.4byte	0
 484              		.section	.debug_ranges,"",%progbits
 485              	.Ldebug_ranges0:
 486 0000 00000000 		.4byte	.LFB0
 487 0004 DC000000 		.4byte	.LFE0
 488 0008 00000000 		.4byte	0
 489 000c 00000000 		.4byte	0
 490              		.section	.debug_line,"",%progbits
 491              	.Ldebug_line0:
 492 0000 82000000 		.section	.debug_str,"MS",%progbits,1
 492      02004F00 
 492      00000201 
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 13


 492      FB0E0D00 
 492      01010101 
 493              	.LASF6:
 494 0000 6C6F6E67 		.ascii	"long long int\000"
 494      206C6F6E 
 494      6720696E 
 494      7400
 495              	.LASF3:
 496 000e 73686F72 		.ascii	"short unsigned int\000"
 496      7420756E 
 496      7369676E 
 496      65642069 
 496      6E7400
 497              	.LASF27:
 498 0021 433A5C55 		.ascii	"C:\\Users\\Diego\\Documents\\GitHub\\Mepsan\\Mepsan"
 498      73657273 
 498      5C446965 
 498      676F5C44 
 498      6F63756D 
 499 004e 2E637964 		.ascii	".cydsn\000"
 499      736E00
 500              	.LASF8:
 501 0055 756E7369 		.ascii	"unsigned int\000"
 501      676E6564 
 501      20696E74 
 501      00
 502              	.LASF18:
 503 0062 696E6372 		.ascii	"increment_pointer\000"
 503      656D656E 
 503      745F706F 
 503      696E7465 
 503      7200
 504              	.LASF21:
 505 0074 4742434C 		.ascii	"GBCL_rxBufferRead\000"
 505      5F727842 
 505      75666665 
 505      72526561 
 505      6400
 506              	.LASF12:
 507 0086 75696E74 		.ascii	"uint8\000"
 507      3800
 508              	.LASF5:
 509 008c 6C6F6E67 		.ascii	"long unsigned int\000"
 509      20756E73 
 509      69676E65 
 509      6420696E 
 509      7400
 510              	.LASF26:
 511 009e 47656E65 		.ascii	"Generated_Source\\PSoC5\\GBCL_INT.c\000"
 511      72617465 
 511      645F536F 
 511      75726365 
 511      5C50536F 
 512              	.LASF7:
 513 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 513      206C6F6E 
 513      6720756E 
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 14


 513      7369676E 
 513      65642069 
 514              	.LASF9:
 515 00d7 666C6F61 		.ascii	"float\000"
 515      7400
 516              	.LASF25:
 517 00dd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 517      43313120 
 517      352E342E 
 517      31203230 
 517      31363036 
 518 0110 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 518      20726576 
 518      6973696F 
 518      6E203233 
 518      37373135 
 519 0143 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 519      66756E63 
 519      74696F6E 
 519      2D736563 
 519      74696F6E 
 520              	.LASF1:
 521 016b 756E7369 		.ascii	"unsigned char\000"
 521      676E6564 
 521      20636861 
 521      7200
 522              	.LASF11:
 523 0179 63686172 		.ascii	"char\000"
 523      00
 524              	.LASF4:
 525 017e 6C6F6E67 		.ascii	"long int\000"
 525      20696E74 
 525      00
 526              	.LASF19:
 527 0187 4742434C 		.ascii	"GBCL_errorStatus\000"
 527      5F657272 
 527      6F725374 
 527      61747573 
 527      00
 528              	.LASF2:
 529 0198 73686F72 		.ascii	"short int\000"
 529      7420696E 
 529      7400
 530              	.LASF20:
 531 01a2 4742434C 		.ascii	"GBCL_rxBuffer\000"
 531      5F727842 
 531      75666665 
 531      7200
 532              	.LASF10:
 533 01b0 646F7562 		.ascii	"double\000"
 533      6C6500
 534              	.LASF24:
 535 01b7 4742434C 		.ascii	"GBCL_rxBufferOverflow\000"
 535      5F727842 
 535      75666665 
 535      724F7665 
 535      72666C6F 
ARM GAS  C:\Users\Diego\AppData\Local\Temp\ccEgJxdT.s 			page 15


 536              	.LASF0:
 537 01cd 7369676E 		.ascii	"signed char\000"
 537      65642063 
 537      68617200 
 538              	.LASF23:
 539 01d9 4742434C 		.ascii	"GBCL_rxBufferLoopDetect\000"
 539      5F727842 
 539      75666665 
 539      724C6F6F 
 539      70446574 
 540              	.LASF17:
 541 01f1 72656164 		.ascii	"readStatus\000"
 541      53746174 
 541      757300
 542              	.LASF14:
 543 01fc 6C6F6E67 		.ascii	"long double\000"
 543      20646F75 
 543      626C6500 
 544              	.LASF28:
 545 0208 4742434C 		.ascii	"GBCL_RXISR\000"
 545      5F525849 
 545      535200
 546              	.LASF22:
 547 0213 4742434C 		.ascii	"GBCL_rxBufferWrite\000"
 547      5F727842 
 547      75666665 
 547      72577269 
 547      746500
 548              	.LASF13:
 549 0226 72656738 		.ascii	"reg8\000"
 549      00
 550              	.LASF16:
 551 022b 72656164 		.ascii	"readData\000"
 551      44617461 
 551      00
 552              	.LASF15:
 553 0234 73697A65 		.ascii	"sizetype\000"
 553      74797065 
 553      00
 554              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
