ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PRINTER_A_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PRINTER_A_TXISR,"ax",%progbits
  20              		.align	2
  21              		.global	PRINTER_A_TXISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	PRINTER_A_TXISR, %function
  25              	PRINTER_A_TXISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\PRINTER_A_INT.c"
   1:Generated_Source\PSoC5/PRINTER_A_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PRINTER_A_INT.c **** * File Name: PRINTER_AINT.c
   3:Generated_Source\PSoC5/PRINTER_A_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/PRINTER_A_INT.c **** *
   5:Generated_Source\PSoC5/PRINTER_A_INT.c **** * Description:
   6:Generated_Source\PSoC5/PRINTER_A_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/PRINTER_A_INT.c **** *
   8:Generated_Source\PSoC5/PRINTER_A_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/PRINTER_A_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/PRINTER_A_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/PRINTER_A_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/PRINTER_A_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/PRINTER_A_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  15:Generated_Source\PSoC5/PRINTER_A_INT.c **** #include "PRINTER_A.h"
  16:Generated_Source\PSoC5/PRINTER_A_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  18:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  19:Generated_Source\PSoC5/PRINTER_A_INT.c **** /***************************************
  20:Generated_Source\PSoC5/PRINTER_A_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/PRINTER_A_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/PRINTER_A_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  24:Generated_Source\PSoC5/PRINTER_A_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  26:Generated_Source\PSoC5/PRINTER_A_INT.c **** #if (PRINTER_A_RX_INTERRUPT_ENABLED && (PRINTER_A_RX_ENABLED || PRINTER_A_HD_ENABLED))
  27:Generated_Source\PSoC5/PRINTER_A_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Function Name: PRINTER_A_RXISR
  29:Generated_Source\PSoC5/PRINTER_A_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 2


  31:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Summary:
  32:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *
  34:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  None.
  36:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *
  37:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Return:
  38:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  None.
  39:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *
  40:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  PRINTER_A_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  PRINTER_A_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  PRINTER_A_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  PRINTER_A_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *     when PRINTER_A_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *     PRINTER_A_rxBufferRead index.
  49:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  PRINTER_A_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *     Set to one when PRINTER_A_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *    PRINTER_A_rxBufferRead
  52:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  PRINTER_A_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  PRINTER_A_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *
  58:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/PRINTER_A_INT.c ****     CY_ISR(PRINTER_A_RXISR)
  60:Generated_Source\PSoC5/PRINTER_A_INT.c ****     {
  61:Generated_Source\PSoC5/PRINTER_A_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/PRINTER_A_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/PRINTER_A_INT.c ****         uint8 increment_pointer = 0u;
  64:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  65:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/PRINTER_A_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  69:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #ifdef PRINTER_A_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/PRINTER_A_INT.c ****         PRINTER_A_RXISR_EntryCallback();
  71:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #endif /* PRINTER_A_RXISR_ENTRY_CALLBACK */
  72:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  73:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* `#START PRINTER_A_RXISR_START` */
  75:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  76:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  78:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/PRINTER_A_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/PRINTER_A_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #endif /* (CY_PSOC3) */
  82:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  83:Generated_Source\PSoC5/PRINTER_A_INT.c ****         do
  84:Generated_Source\PSoC5/PRINTER_A_INT.c ****         {
  85:Generated_Source\PSoC5/PRINTER_A_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/PRINTER_A_INT.c ****             readStatus = PRINTER_A_RXSTATUS_REG;
  87:Generated_Source\PSoC5/PRINTER_A_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 3


  88:Generated_Source\PSoC5/PRINTER_A_INT.c ****             *  of the user code in PRINTER_A_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/PRINTER_A_INT.c ****             */
  90:Generated_Source\PSoC5/PRINTER_A_INT.c ****             readData = readStatus;
  91:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
  92:Generated_Source\PSoC5/PRINTER_A_INT.c ****             if((readStatus & (PRINTER_A_RX_STS_BREAK | 
  93:Generated_Source\PSoC5/PRINTER_A_INT.c ****                             PRINTER_A_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/PRINTER_A_INT.c ****                             PRINTER_A_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/PRINTER_A_INT.c ****                             PRINTER_A_RX_STS_OVERRUN)) != 0u)
  96:Generated_Source\PSoC5/PRINTER_A_INT.c ****             {
  97:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 PRINTER_A_errorStatus |= readStatus & ( PRINTER_A_RX_STS_BREAK | 
  99:Generated_Source\PSoC5/PRINTER_A_INT.c ****                                                             PRINTER_A_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/PRINTER_A_INT.c ****                                                             PRINTER_A_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC5/PRINTER_A_INT.c ****                                                             PRINTER_A_RX_STS_OVERRUN);
 102:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 /* `#START PRINTER_A_RXISR_ERROR` */
 103:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 104:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 
 106:Generated_Source\PSoC5/PRINTER_A_INT.c ****             #ifdef PRINTER_A_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 PRINTER_A_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/PRINTER_A_INT.c ****             #endif /* PRINTER_A_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/PRINTER_A_INT.c ****             }
 110:Generated_Source\PSoC5/PRINTER_A_INT.c ****             
 111:Generated_Source\PSoC5/PRINTER_A_INT.c ****             if((readStatus & PRINTER_A_RX_STS_FIFO_NOTEMPTY) != 0u)
 112:Generated_Source\PSoC5/PRINTER_A_INT.c ****             {
 113:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 readData = PRINTER_A_RXDATA_REG;
 115:Generated_Source\PSoC5/PRINTER_A_INT.c ****             #if (PRINTER_A_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 if(PRINTER_A_rxAddressMode == (uint8)PRINTER_A__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 {
 118:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     if((readStatus & PRINTER_A_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     {
 120:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         if ((readStatus & PRINTER_A_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         {
 122:Generated_Source\PSoC5/PRINTER_A_INT.c ****                             PRINTER_A_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         }
 124:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         else
 125:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         {
 126:Generated_Source\PSoC5/PRINTER_A_INT.c ****                             PRINTER_A_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         }
 128:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     }
 129:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     if(PRINTER_A_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         PRINTER_A_rxBuffer[PRINTER_A_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     }
 134:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 }
 135:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 {
 137:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     PRINTER_A_rxBuffer[PRINTER_A_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 }
 140:Generated_Source\PSoC5/PRINTER_A_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 PRINTER_A_rxBuffer[PRINTER_A_rxBufferWrite] = readData;
 142:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 increment_pointer = 1u;
 143:Generated_Source\PSoC5/PRINTER_A_INT.c ****             #endif /* (PRINTER_A_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 4


 145:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 if(increment_pointer != 0u)
 147:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 {
 148:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     if(PRINTER_A_rxBufferLoopDetect != 0u)
 149:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         PRINTER_A_rxBufferOverflow = 1u;
 151:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     }
 152:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     /* Set next pointer. */
 153:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     PRINTER_A_rxBufferWrite++;
 154:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 155:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     if(PRINTER_A_rxBufferWrite >= PRINTER_A_RX_BUFFER_SIZE)
 157:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     {
 158:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         PRINTER_A_rxBufferWrite = 0u;
 159:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     }
 160:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 161:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     if(PRINTER_A_rxBufferWrite == PRINTER_A_rxBufferRead)
 163:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     {
 164:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         PRINTER_A_rxBufferLoopDetect = 1u;
 165:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         #if (PRINTER_A_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/PRINTER_A_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/PRINTER_A_INT.c ****                             PRINTER_A_RXSTATUS_MASK_REG  &= (uint8)~PRINTER_A_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC5/PRINTER_A_INT.c ****                             CyIntClearPending(PRINTER_A_RX_VECT_NUM);
 170:Generated_Source\PSoC5/PRINTER_A_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/PRINTER_A_INT.c ****                         #endif /* (PRINTER_A_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/PRINTER_A_INT.c ****                     }
 173:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 }
 174:Generated_Source\PSoC5/PRINTER_A_INT.c ****             }
 175:Generated_Source\PSoC5/PRINTER_A_INT.c ****         }while((readStatus & PRINTER_A_RX_STS_FIFO_NOTEMPTY) != 0u);
 176:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 177:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* `#START PRINTER_A_RXISR_END` */
 179:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 180:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 182:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #ifdef PRINTER_A_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/PRINTER_A_INT.c ****         PRINTER_A_RXISR_ExitCallback();
 184:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #endif /* PRINTER_A_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 186:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/PRINTER_A_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/PRINTER_A_INT.c ****     }
 190:Generated_Source\PSoC5/PRINTER_A_INT.c ****     
 191:Generated_Source\PSoC5/PRINTER_A_INT.c **** #endif /* (PRINTER_A_RX_INTERRUPT_ENABLED && (PRINTER_A_RX_ENABLED || PRINTER_A_HD_ENABLED)) */
 192:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 193:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 194:Generated_Source\PSoC5/PRINTER_A_INT.c **** #if (PRINTER_A_TX_INTERRUPT_ENABLED && PRINTER_A_TX_ENABLED)
 195:Generated_Source\PSoC5/PRINTER_A_INT.c ****     /*******************************************************************************
 196:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Function Name: PRINTER_A_TXISR
 197:Generated_Source\PSoC5/PRINTER_A_INT.c ****     ********************************************************************************
 198:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *
 199:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Summary:
 200:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 5


 202:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Parameters:
 203:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  None.
 204:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *
 205:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Return:
 206:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  None.
 207:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *
 208:Generated_Source\PSoC5/PRINTER_A_INT.c ****     * Global Variables:
 209:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  PRINTER_A_txBuffer - RAM buffer pointer for transmit data from.
 210:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  PRINTER_A_txBufferRead - cyclic index for read and transmit data
 211:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *  PRINTER_A_rxBufferWrite - cyclic index for write to txBuffer,
 213:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *     checked to detect available for transmission bytes.
 214:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *
 215:Generated_Source\PSoC5/PRINTER_A_INT.c ****     *******************************************************************************/
 216:Generated_Source\PSoC5/PRINTER_A_INT.c ****     CY_ISR(PRINTER_A_TXISR)
 217:Generated_Source\PSoC5/PRINTER_A_INT.c ****     {
  28              		.loc 1 217 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #if(CY_PSOC3)
 219:Generated_Source\PSoC5/PRINTER_A_INT.c ****         uint8 int_en;
 220:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #endif /* (CY_PSOC3) */
 221:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 222:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #ifdef PRINTER_A_TXISR_ENTRY_CALLBACK
 223:Generated_Source\PSoC5/PRINTER_A_INT.c ****         PRINTER_A_TXISR_EntryCallback();
 224:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #endif /* PRINTER_A_TXISR_ENTRY_CALLBACK */
 225:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 226:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* User code required at start of ISR */
 227:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* `#START PRINTER_A_TXISR_START` */
 228:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 229:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* `#END` */
 230:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 231:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:Generated_Source\PSoC5/PRINTER_A_INT.c ****         int_en = EA;
 233:Generated_Source\PSoC5/PRINTER_A_INT.c ****         CyGlobalIntEnable;
 234:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #endif /* (CY_PSOC3) */
 235:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 236:Generated_Source\PSoC5/PRINTER_A_INT.c ****         while((PRINTER_A_txBufferRead != PRINTER_A_txBufferWrite) &&
  38              		.loc 1 236 0
  39 0004 17E0     		b	.L2
  40              	.L5:
 237:Generated_Source\PSoC5/PRINTER_A_INT.c ****              ((PRINTER_A_TXSTATUS_REG & PRINTER_A_TX_STS_FIFO_FULL) == 0u))
 238:Generated_Source\PSoC5/PRINTER_A_INT.c ****         {
 239:Generated_Source\PSoC5/PRINTER_A_INT.c ****             /* Check pointer wrap around */
 240:Generated_Source\PSoC5/PRINTER_A_INT.c ****             if(PRINTER_A_txBufferRead >= PRINTER_A_TX_BUFFER_SIZE)
  41              		.loc 1 240 0
  42 0006 154B     		ldr	r3, .L7
  43 0008 1B78     		ldrb	r3, [r3]
  44 000a DBB2     		uxtb	r3, r3
  45 000c 042B     		cmp	r3, #4
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 6


  46 000e 02D9     		bls	.L3
 241:Generated_Source\PSoC5/PRINTER_A_INT.c ****             {
 242:Generated_Source\PSoC5/PRINTER_A_INT.c ****                 PRINTER_A_txBufferRead = 0u;
  47              		.loc 1 242 0
  48 0010 124B     		ldr	r3, .L7
  49 0012 0022     		movs	r2, #0
  50 0014 1A70     		strb	r2, [r3]
  51              	.L3:
 243:Generated_Source\PSoC5/PRINTER_A_INT.c ****             }
 244:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 245:Generated_Source\PSoC5/PRINTER_A_INT.c ****             PRINTER_A_TXDATA_REG = PRINTER_A_txBuffer[PRINTER_A_txBufferRead];
  52              		.loc 1 245 0
  53 0016 124B     		ldr	r3, .L7+4
  54 0018 104A     		ldr	r2, .L7
  55 001a 1278     		ldrb	r2, [r2]
  56 001c D2B2     		uxtb	r2, r2
  57 001e 1146     		mov	r1, r2
  58 0020 104A     		ldr	r2, .L7+8
  59 0022 525C     		ldrb	r2, [r2, r1]
  60 0024 D2B2     		uxtb	r2, r2
  61 0026 1A70     		strb	r2, [r3]
 246:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 247:Generated_Source\PSoC5/PRINTER_A_INT.c ****             /* Set next pointer */
 248:Generated_Source\PSoC5/PRINTER_A_INT.c ****             PRINTER_A_txBufferRead++;
  62              		.loc 1 248 0
  63 0028 0C4B     		ldr	r3, .L7
  64 002a 1B78     		ldrb	r3, [r3]
  65 002c DBB2     		uxtb	r3, r3
  66 002e 0133     		adds	r3, r3, #1
  67 0030 DAB2     		uxtb	r2, r3
  68 0032 0A4B     		ldr	r3, .L7
  69 0034 1A70     		strb	r2, [r3]
  70              	.L2:
 236:Generated_Source\PSoC5/PRINTER_A_INT.c ****              ((PRINTER_A_TXSTATUS_REG & PRINTER_A_TX_STS_FIFO_FULL) == 0u))
  71              		.loc 1 236 0
  72 0036 094B     		ldr	r3, .L7
  73 0038 1B78     		ldrb	r3, [r3]
  74 003a DAB2     		uxtb	r2, r3
  75 003c 0A4B     		ldr	r3, .L7+12
  76 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  77 0040 9A42     		cmp	r2, r3
  78 0042 06D0     		beq	.L6
 237:Generated_Source\PSoC5/PRINTER_A_INT.c ****         {
  79              		.loc 1 237 0 discriminator 1
  80 0044 094B     		ldr	r3, .L7+16
  81 0046 1B78     		ldrb	r3, [r3]
  82 0048 DBB2     		uxtb	r3, r3
  83 004a 03F00403 		and	r3, r3, #4
 236:Generated_Source\PSoC5/PRINTER_A_INT.c ****              ((PRINTER_A_TXSTATUS_REG & PRINTER_A_TX_STS_FIFO_FULL) == 0u))
  84              		.loc 1 236 0 discriminator 1
  85 004e 002B     		cmp	r3, #0
  86 0050 D9D0     		beq	.L5
  87              	.L6:
 249:Generated_Source\PSoC5/PRINTER_A_INT.c ****         }
 250:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 251:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* User code required at end of ISR (Optional) */
 252:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* `#START PRINTER_A_TXISR_END` */
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 7


 253:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 254:Generated_Source\PSoC5/PRINTER_A_INT.c ****         /* `#END` */
 255:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 256:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #ifdef PRINTER_A_TXISR_EXIT_CALLBACK
 257:Generated_Source\PSoC5/PRINTER_A_INT.c ****         PRINTER_A_TXISR_ExitCallback();
 258:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #endif /* PRINTER_A_TXISR_EXIT_CALLBACK */
 259:Generated_Source\PSoC5/PRINTER_A_INT.c **** 
 260:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #if(CY_PSOC3)
 261:Generated_Source\PSoC5/PRINTER_A_INT.c ****         EA = int_en;
 262:Generated_Source\PSoC5/PRINTER_A_INT.c ****     #endif /* (CY_PSOC3) */
 263:Generated_Source\PSoC5/PRINTER_A_INT.c ****    }
  88              		.loc 1 263 0
  89 0052 00BF     		nop
  90 0054 BD46     		mov	sp, r7
  91              		.cfi_def_cfa_register 13
  92              		@ sp needed
  93 0056 80BC     		pop	{r7}
  94              		.cfi_restore 7
  95              		.cfi_def_cfa_offset 0
  96 0058 7047     		bx	lr
  97              	.L8:
  98 005a 00BF     		.align	2
  99              	.L7:
 100 005c 00000000 		.word	PRINTER_A_txBufferRead
 101 0060 46640040 		.word	1073767494
 102 0064 00000000 		.word	PRINTER_A_txBuffer
 103 0068 00000000 		.word	PRINTER_A_txBufferWrite
 104 006c 66640040 		.word	1073767526
 105              		.cfi_endproc
 106              	.LFE0:
 107              		.size	PRINTER_A_TXISR, .-PRINTER_A_TXISR
 108              		.text
 109              	.Letext0:
 110              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 111              		.file 3 "Generated_Source\\PSoC5\\PRINTER_A.h"
 112              		.section	.debug_info,"",%progbits
 113              	.Ldebug_info0:
 114 0000 F2000000 		.4byte	0xf2
 115 0004 0400     		.2byte	0x4
 116 0006 00000000 		.4byte	.Ldebug_abbrev0
 117 000a 04       		.byte	0x4
 118 000b 01       		.uleb128 0x1
 119 000c A2000000 		.4byte	.LASF19
 120 0010 0C       		.byte	0xc
 121 0011 85010000 		.4byte	.LASF20
 122 0015 1B000000 		.4byte	.LASF21
 123 0019 00000000 		.4byte	.Ldebug_ranges0+0
 124 001d 00000000 		.4byte	0
 125 0021 00000000 		.4byte	.Ldebug_line0
 126 0025 02       		.uleb128 0x2
 127 0026 01       		.byte	0x1
 128 0027 06       		.byte	0x6
 129 0028 79010000 		.4byte	.LASF0
 130 002c 02       		.uleb128 0x2
 131 002d 01       		.byte	0x1
 132 002e 08       		.byte	0x8
 133 002f 30010000 		.4byte	.LASF1
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 8


 134 0033 02       		.uleb128 0x2
 135 0034 02       		.byte	0x2
 136 0035 05       		.byte	0x5
 137 0036 CF010000 		.4byte	.LASF2
 138 003a 02       		.uleb128 0x2
 139 003b 02       		.byte	0x2
 140 003c 07       		.byte	0x7
 141 003d 66010000 		.4byte	.LASF3
 142 0041 02       		.uleb128 0x2
 143 0042 04       		.byte	0x4
 144 0043 05       		.byte	0x5
 145 0044 56010000 		.4byte	.LASF4
 146 0048 02       		.uleb128 0x2
 147 0049 04       		.byte	0x4
 148 004a 07       		.byte	0x7
 149 004b 5B000000 		.4byte	.LASF5
 150 004f 02       		.uleb128 0x2
 151 0050 08       		.byte	0x8
 152 0051 05       		.byte	0x5
 153 0052 00000000 		.4byte	.LASF6
 154 0056 02       		.uleb128 0x2
 155 0057 08       		.byte	0x8
 156 0058 07       		.byte	0x7
 157 0059 6D000000 		.4byte	.LASF7
 158 005d 03       		.uleb128 0x3
 159 005e 04       		.byte	0x4
 160 005f 05       		.byte	0x5
 161 0060 696E7400 		.ascii	"int\000"
 162 0064 02       		.uleb128 0x2
 163 0065 04       		.byte	0x4
 164 0066 07       		.byte	0x7
 165 0067 0E000000 		.4byte	.LASF8
 166 006b 04       		.uleb128 0x4
 167 006c 55000000 		.4byte	.LASF12
 168 0070 02       		.byte	0x2
 169 0071 E401     		.2byte	0x1e4
 170 0073 2C000000 		.4byte	0x2c
 171 0077 02       		.uleb128 0x2
 172 0078 04       		.byte	0x4
 173 0079 04       		.byte	0x4
 174 007a 97000000 		.4byte	.LASF9
 175 007e 02       		.uleb128 0x2
 176 007f 08       		.byte	0x8
 177 0080 04       		.byte	0x4
 178 0081 5F010000 		.4byte	.LASF10
 179 0085 02       		.uleb128 0x2
 180 0086 01       		.byte	0x1
 181 0087 08       		.byte	0x8
 182 0088 9D000000 		.4byte	.LASF11
 183 008c 04       		.uleb128 0x4
 184 008d D9010000 		.4byte	.LASF13
 185 0091 02       		.byte	0x2
 186 0092 8E02     		.2byte	0x28e
 187 0094 98000000 		.4byte	0x98
 188 0098 05       		.uleb128 0x5
 189 0099 6B000000 		.4byte	0x6b
 190 009d 02       		.uleb128 0x2
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 9


 191 009e 08       		.byte	0x8
 192 009f 04       		.byte	0x4
 193 00a0 AC010000 		.4byte	.LASF14
 194 00a4 02       		.uleb128 0x2
 195 00a5 04       		.byte	0x4
 196 00a6 07       		.byte	0x7
 197 00a7 EE010000 		.4byte	.LASF15
 198 00ab 06       		.uleb128 0x6
 199 00ac DE010000 		.4byte	.LASF22
 200 00b0 01       		.byte	0x1
 201 00b1 D8       		.byte	0xd8
 202 00b2 00000000 		.4byte	.LFB0
 203 00b6 70000000 		.4byte	.LFE0-.LFB0
 204 00ba 01       		.uleb128 0x1
 205 00bb 9C       		.byte	0x9c
 206 00bc 07       		.uleb128 0x7
 207 00bd 98000000 		.4byte	0x98
 208 00c1 CC000000 		.4byte	0xcc
 209 00c5 08       		.uleb128 0x8
 210 00c6 A4000000 		.4byte	0xa4
 211 00ca 04       		.byte	0x4
 212 00cb 00       		.byte	0
 213 00cc 09       		.uleb128 0x9
 214 00cd 84000000 		.4byte	.LASF16
 215 00d1 03       		.byte	0x3
 216 00d2 3801     		.2byte	0x138
 217 00d4 D8000000 		.4byte	0xd8
 218 00d8 05       		.uleb128 0x5
 219 00d9 BC000000 		.4byte	0xbc
 220 00dd 09       		.uleb128 0x9
 221 00de B8010000 		.4byte	.LASF17
 222 00e2 03       		.byte	0x3
 223 00e3 3901     		.2byte	0x139
 224 00e5 98000000 		.4byte	0x98
 225 00e9 09       		.uleb128 0x9
 226 00ea 3E010000 		.4byte	.LASF18
 227 00ee 03       		.byte	0x3
 228 00ef 3A01     		.2byte	0x13a
 229 00f1 6B000000 		.4byte	0x6b
 230 00f5 00       		.byte	0
 231              		.section	.debug_abbrev,"",%progbits
 232              	.Ldebug_abbrev0:
 233 0000 01       		.uleb128 0x1
 234 0001 11       		.uleb128 0x11
 235 0002 01       		.byte	0x1
 236 0003 25       		.uleb128 0x25
 237 0004 0E       		.uleb128 0xe
 238 0005 13       		.uleb128 0x13
 239 0006 0B       		.uleb128 0xb
 240 0007 03       		.uleb128 0x3
 241 0008 0E       		.uleb128 0xe
 242 0009 1B       		.uleb128 0x1b
 243 000a 0E       		.uleb128 0xe
 244 000b 55       		.uleb128 0x55
 245 000c 17       		.uleb128 0x17
 246 000d 11       		.uleb128 0x11
 247 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 10


 248 000f 10       		.uleb128 0x10
 249 0010 17       		.uleb128 0x17
 250 0011 00       		.byte	0
 251 0012 00       		.byte	0
 252 0013 02       		.uleb128 0x2
 253 0014 24       		.uleb128 0x24
 254 0015 00       		.byte	0
 255 0016 0B       		.uleb128 0xb
 256 0017 0B       		.uleb128 0xb
 257 0018 3E       		.uleb128 0x3e
 258 0019 0B       		.uleb128 0xb
 259 001a 03       		.uleb128 0x3
 260 001b 0E       		.uleb128 0xe
 261 001c 00       		.byte	0
 262 001d 00       		.byte	0
 263 001e 03       		.uleb128 0x3
 264 001f 24       		.uleb128 0x24
 265 0020 00       		.byte	0
 266 0021 0B       		.uleb128 0xb
 267 0022 0B       		.uleb128 0xb
 268 0023 3E       		.uleb128 0x3e
 269 0024 0B       		.uleb128 0xb
 270 0025 03       		.uleb128 0x3
 271 0026 08       		.uleb128 0x8
 272 0027 00       		.byte	0
 273 0028 00       		.byte	0
 274 0029 04       		.uleb128 0x4
 275 002a 16       		.uleb128 0x16
 276 002b 00       		.byte	0
 277 002c 03       		.uleb128 0x3
 278 002d 0E       		.uleb128 0xe
 279 002e 3A       		.uleb128 0x3a
 280 002f 0B       		.uleb128 0xb
 281 0030 3B       		.uleb128 0x3b
 282 0031 05       		.uleb128 0x5
 283 0032 49       		.uleb128 0x49
 284 0033 13       		.uleb128 0x13
 285 0034 00       		.byte	0
 286 0035 00       		.byte	0
 287 0036 05       		.uleb128 0x5
 288 0037 35       		.uleb128 0x35
 289 0038 00       		.byte	0
 290 0039 49       		.uleb128 0x49
 291 003a 13       		.uleb128 0x13
 292 003b 00       		.byte	0
 293 003c 00       		.byte	0
 294 003d 06       		.uleb128 0x6
 295 003e 2E       		.uleb128 0x2e
 296 003f 00       		.byte	0
 297 0040 3F       		.uleb128 0x3f
 298 0041 19       		.uleb128 0x19
 299 0042 03       		.uleb128 0x3
 300 0043 0E       		.uleb128 0xe
 301 0044 3A       		.uleb128 0x3a
 302 0045 0B       		.uleb128 0xb
 303 0046 3B       		.uleb128 0x3b
 304 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 11


 305 0048 27       		.uleb128 0x27
 306 0049 19       		.uleb128 0x19
 307 004a 11       		.uleb128 0x11
 308 004b 01       		.uleb128 0x1
 309 004c 12       		.uleb128 0x12
 310 004d 06       		.uleb128 0x6
 311 004e 40       		.uleb128 0x40
 312 004f 18       		.uleb128 0x18
 313 0050 9742     		.uleb128 0x2117
 314 0052 19       		.uleb128 0x19
 315 0053 00       		.byte	0
 316 0054 00       		.byte	0
 317 0055 07       		.uleb128 0x7
 318 0056 01       		.uleb128 0x1
 319 0057 01       		.byte	0x1
 320 0058 49       		.uleb128 0x49
 321 0059 13       		.uleb128 0x13
 322 005a 01       		.uleb128 0x1
 323 005b 13       		.uleb128 0x13
 324 005c 00       		.byte	0
 325 005d 00       		.byte	0
 326 005e 08       		.uleb128 0x8
 327 005f 21       		.uleb128 0x21
 328 0060 00       		.byte	0
 329 0061 49       		.uleb128 0x49
 330 0062 13       		.uleb128 0x13
 331 0063 2F       		.uleb128 0x2f
 332 0064 0B       		.uleb128 0xb
 333 0065 00       		.byte	0
 334 0066 00       		.byte	0
 335 0067 09       		.uleb128 0x9
 336 0068 34       		.uleb128 0x34
 337 0069 00       		.byte	0
 338 006a 03       		.uleb128 0x3
 339 006b 0E       		.uleb128 0xe
 340 006c 3A       		.uleb128 0x3a
 341 006d 0B       		.uleb128 0xb
 342 006e 3B       		.uleb128 0x3b
 343 006f 05       		.uleb128 0x5
 344 0070 49       		.uleb128 0x49
 345 0071 13       		.uleb128 0x13
 346 0072 3F       		.uleb128 0x3f
 347 0073 19       		.uleb128 0x19
 348 0074 3C       		.uleb128 0x3c
 349 0075 19       		.uleb128 0x19
 350 0076 00       		.byte	0
 351 0077 00       		.byte	0
 352 0078 00       		.byte	0
 353              		.section	.debug_aranges,"",%progbits
 354 0000 1C000000 		.4byte	0x1c
 355 0004 0200     		.2byte	0x2
 356 0006 00000000 		.4byte	.Ldebug_info0
 357 000a 04       		.byte	0x4
 358 000b 00       		.byte	0
 359 000c 0000     		.2byte	0
 360 000e 0000     		.2byte	0
 361 0010 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 12


 362 0014 70000000 		.4byte	.LFE0-.LFB0
 363 0018 00000000 		.4byte	0
 364 001c 00000000 		.4byte	0
 365              		.section	.debug_ranges,"",%progbits
 366              	.Ldebug_ranges0:
 367 0000 00000000 		.4byte	.LFB0
 368 0004 70000000 		.4byte	.LFE0
 369 0008 00000000 		.4byte	0
 370 000c 00000000 		.4byte	0
 371              		.section	.debug_line,"",%progbits
 372              	.Ldebug_line0:
 373 0000 86000000 		.section	.debug_str,"MS",%progbits,1
 373      02005900 
 373      00000201 
 373      FB0E0D00 
 373      01010101 
 374              	.LASF6:
 375 0000 6C6F6E67 		.ascii	"long long int\000"
 375      206C6F6E 
 375      6720696E 
 375      7400
 376              	.LASF8:
 377 000e 756E7369 		.ascii	"unsigned int\000"
 377      676E6564 
 377      20696E74 
 377      00
 378              	.LASF21:
 379 001b 433A5C55 		.ascii	"C:\\Users\\Programador\\Documents\\GitHub\\Mepsan\\"
 379      73657273 
 379      5C50726F 
 379      6772616D 
 379      61646F72 
 380 0048 4D657073 		.ascii	"Mepsan.cydsn\000"
 380      616E2E63 
 380      7964736E 
 380      00
 381              	.LASF12:
 382 0055 75696E74 		.ascii	"uint8\000"
 382      3800
 383              	.LASF5:
 384 005b 6C6F6E67 		.ascii	"long unsigned int\000"
 384      20756E73 
 384      69676E65 
 384      6420696E 
 384      7400
 385              	.LASF7:
 386 006d 6C6F6E67 		.ascii	"long long unsigned int\000"
 386      206C6F6E 
 386      6720756E 
 386      7369676E 
 386      65642069 
 387              	.LASF16:
 388 0084 5052494E 		.ascii	"PRINTER_A_txBuffer\000"
 388      5445525F 
 388      415F7478 
 388      42756666 
 388      657200
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 13


 389              	.LASF9:
 390 0097 666C6F61 		.ascii	"float\000"
 390      7400
 391              	.LASF11:
 392 009d 63686172 		.ascii	"char\000"
 392      00
 393              	.LASF19:
 394 00a2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 394      43313120 
 394      352E342E 
 394      31203230 
 394      31363036 
 395 00d5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 395      20726576 
 395      6973696F 
 395      6E203233 
 395      37373135 
 396 0108 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 396      66756E63 
 396      74696F6E 
 396      2D736563 
 396      74696F6E 
 397              	.LASF1:
 398 0130 756E7369 		.ascii	"unsigned char\000"
 398      676E6564 
 398      20636861 
 398      7200
 399              	.LASF18:
 400 013e 5052494E 		.ascii	"PRINTER_A_txBufferWrite\000"
 400      5445525F 
 400      415F7478 
 400      42756666 
 400      65725772 
 401              	.LASF4:
 402 0156 6C6F6E67 		.ascii	"long int\000"
 402      20696E74 
 402      00
 403              	.LASF10:
 404 015f 646F7562 		.ascii	"double\000"
 404      6C6500
 405              	.LASF3:
 406 0166 73686F72 		.ascii	"short unsigned int\000"
 406      7420756E 
 406      7369676E 
 406      65642069 
 406      6E7400
 407              	.LASF0:
 408 0179 7369676E 		.ascii	"signed char\000"
 408      65642063 
 408      68617200 
 409              	.LASF20:
 410 0185 47656E65 		.ascii	"Generated_Source\\PSoC5\\PRINTER_A_INT.c\000"
 410      72617465 
 410      645F536F 
 410      75726365 
 410      5C50536F 
 411              	.LASF14:
ARM GAS  C:\Users\PROGRA~1\AppData\Local\Temp\ccqYXDqX.s 			page 14


 412 01ac 6C6F6E67 		.ascii	"long double\000"
 412      20646F75 
 412      626C6500 
 413              	.LASF17:
 414 01b8 5052494E 		.ascii	"PRINTER_A_txBufferRead\000"
 414      5445525F 
 414      415F7478 
 414      42756666 
 414      65725265 
 415              	.LASF2:
 416 01cf 73686F72 		.ascii	"short int\000"
 416      7420696E 
 416      7400
 417              	.LASF13:
 418 01d9 72656738 		.ascii	"reg8\000"
 418      00
 419              	.LASF22:
 420 01de 5052494E 		.ascii	"PRINTER_A_TXISR\000"
 420      5445525F 
 420      415F5458 
 420      49535200 
 421              	.LASF15:
 422 01ee 73697A65 		.ascii	"sizetype\000"
 422      74797065 
 422      00
 423              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
