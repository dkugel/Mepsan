ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"GBCL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	GBCL_initVar
  20              		.bss
  21              		.type	GBCL_initVar, %object
  22              		.size	GBCL_initVar, 1
  23              	GBCL_initVar:
  24 0000 00       		.space	1
  25              		.global	GBCL_errorStatus
  26              		.type	GBCL_errorStatus, %object
  27              		.size	GBCL_errorStatus, 1
  28              	GBCL_errorStatus:
  29 0001 00       		.space	1
  30              		.comm	GBCL_rxBuffer,128,4
  31              		.global	GBCL_rxBufferRead
  32              		.type	GBCL_rxBufferRead, %object
  33              		.size	GBCL_rxBufferRead, 1
  34              	GBCL_rxBufferRead:
  35 0002 00       		.space	1
  36              		.global	GBCL_rxBufferWrite
  37              		.type	GBCL_rxBufferWrite, %object
  38              		.size	GBCL_rxBufferWrite, 1
  39              	GBCL_rxBufferWrite:
  40 0003 00       		.space	1
  41              		.global	GBCL_rxBufferLoopDetect
  42              		.type	GBCL_rxBufferLoopDetect, %object
  43              		.size	GBCL_rxBufferLoopDetect, 1
  44              	GBCL_rxBufferLoopDetect:
  45 0004 00       		.space	1
  46              		.global	GBCL_rxBufferOverflow
  47              		.type	GBCL_rxBufferOverflow, %object
  48              		.size	GBCL_rxBufferOverflow, 1
  49              	GBCL_rxBufferOverflow:
  50 0005 00       		.space	1
  51              		.section	.text.GBCL_Start,"ax",%progbits
  52              		.align	2
  53              		.global	GBCL_Start
  54              		.thumb
  55              		.thumb_func
  56              		.type	GBCL_Start, %function
  57              	GBCL_Start:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 2


  58              	.LFB0:
  59              		.file 1 "Generated_Source\\PSoC5\\GBCL.c"
   1:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/GBCL.c **** * File Name: GBCL.c
   3:Generated_Source\PSoC5/GBCL.c **** * Version 2.50
   4:Generated_Source\PSoC5/GBCL.c **** *
   5:Generated_Source\PSoC5/GBCL.c **** * Description:
   6:Generated_Source\PSoC5/GBCL.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/GBCL.c **** *
   8:Generated_Source\PSoC5/GBCL.c **** * Note:
   9:Generated_Source\PSoC5/GBCL.c **** *
  10:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
  11:Generated_Source\PSoC5/GBCL.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/GBCL.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/GBCL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/GBCL.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/GBCL.c **** 
  17:Generated_Source\PSoC5/GBCL.c **** #include "GBCL.h"
  18:Generated_Source\PSoC5/GBCL.c **** #if (GBCL_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/GBCL.c ****     #include "GBCL_IntClock.h"
  20:Generated_Source\PSoC5/GBCL.c **** #endif /* End GBCL_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/GBCL.c **** 
  22:Generated_Source\PSoC5/GBCL.c **** 
  23:Generated_Source\PSoC5/GBCL.c **** /***************************************
  24:Generated_Source\PSoC5/GBCL.c **** * Global data allocation
  25:Generated_Source\PSoC5/GBCL.c **** ***************************************/
  26:Generated_Source\PSoC5/GBCL.c **** 
  27:Generated_Source\PSoC5/GBCL.c **** uint8 GBCL_initVar = 0u;
  28:Generated_Source\PSoC5/GBCL.c **** 
  29:Generated_Source\PSoC5/GBCL.c **** #if (GBCL_TX_INTERRUPT_ENABLED && GBCL_TX_ENABLED)
  30:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_txBuffer[GBCL_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_txBufferRead = 0u;
  32:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/GBCL.c **** #endif /* (GBCL_TX_INTERRUPT_ENABLED && GBCL_TX_ENABLED) */
  34:Generated_Source\PSoC5/GBCL.c **** 
  35:Generated_Source\PSoC5/GBCL.c **** #if (GBCL_RX_INTERRUPT_ENABLED && (GBCL_RX_ENABLED || GBCL_HD_ENABLED))
  36:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_errorStatus = 0u;
  37:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_rxBuffer[GBCL_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/GBCL.c ****         volatile uint8 GBCL_rxAddressMode = GBCL_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/GBCL.c ****         volatile uint8 GBCL_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/GBCL.c **** #endif /* (GBCL_RX_INTERRUPT_ENABLED && (GBCL_RX_ENABLED || GBCL_HD_ENABLED)) */
  47:Generated_Source\PSoC5/GBCL.c **** 
  48:Generated_Source\PSoC5/GBCL.c **** 
  49:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_Start
  51:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
  52:Generated_Source\PSoC5/GBCL.c **** *
  53:Generated_Source\PSoC5/GBCL.c **** * Summary:
  54:Generated_Source\PSoC5/GBCL.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/GBCL.c **** *  GBCL_Start() sets the initVar variable, calls the
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 3


  56:Generated_Source\PSoC5/GBCL.c **** *  GBCL_Init() function, and then calls the
  57:Generated_Source\PSoC5/GBCL.c **** *  GBCL_Enable() function.
  58:Generated_Source\PSoC5/GBCL.c **** *
  59:Generated_Source\PSoC5/GBCL.c **** * Parameters:
  60:Generated_Source\PSoC5/GBCL.c **** *  None.
  61:Generated_Source\PSoC5/GBCL.c **** *
  62:Generated_Source\PSoC5/GBCL.c **** * Return:
  63:Generated_Source\PSoC5/GBCL.c **** *  None.
  64:Generated_Source\PSoC5/GBCL.c **** *
  65:Generated_Source\PSoC5/GBCL.c **** * Global variables:
  66:Generated_Source\PSoC5/GBCL.c **** *  The GBCL_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/GBCL.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/GBCL.c **** *  and set to one (1u) the first time GBCL_Start() is called. This
  69:Generated_Source\PSoC5/GBCL.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/GBCL.c **** *  subsequent calls to the GBCL_Start() routine.
  71:Generated_Source\PSoC5/GBCL.c **** *
  72:Generated_Source\PSoC5/GBCL.c **** * Reentrant:
  73:Generated_Source\PSoC5/GBCL.c **** *  No.
  74:Generated_Source\PSoC5/GBCL.c **** *
  75:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/GBCL.c **** void GBCL_Start(void) 
  77:Generated_Source\PSoC5/GBCL.c **** {
  60              		.loc 1 77 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 80B5     		push	{r7, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 7, -8
  67              		.cfi_offset 14, -4
  68 0002 00AF     		add	r7, sp, #0
  69              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/GBCL.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/GBCL.c ****     if(GBCL_initVar == 0u)
  70              		.loc 1 79 0
  71 0004 064B     		ldr	r3, .L3
  72 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  73 0008 002B     		cmp	r3, #0
  74 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/GBCL.c ****     {
  81:Generated_Source\PSoC5/GBCL.c ****         GBCL_Init();
  75              		.loc 1 81 0
  76 000c FFF7FEFF 		bl	GBCL_Init
  82:Generated_Source\PSoC5/GBCL.c ****         GBCL_initVar = 1u;
  77              		.loc 1 82 0
  78 0010 034B     		ldr	r3, .L3
  79 0012 0122     		movs	r2, #1
  80 0014 1A70     		strb	r2, [r3]
  81              	.L2:
  83:Generated_Source\PSoC5/GBCL.c ****     }
  84:Generated_Source\PSoC5/GBCL.c **** 
  85:Generated_Source\PSoC5/GBCL.c ****     GBCL_Enable();
  82              		.loc 1 85 0
  83 0016 FFF7FEFF 		bl	GBCL_Enable
  86:Generated_Source\PSoC5/GBCL.c **** }
  84              		.loc 1 86 0
  85 001a 00BF     		nop
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 4


  86 001c 80BD     		pop	{r7, pc}
  87              	.L4:
  88 001e 00BF     		.align	2
  89              	.L3:
  90 0020 00000000 		.word	GBCL_initVar
  91              		.cfi_endproc
  92              	.LFE0:
  93              		.size	GBCL_Start, .-GBCL_Start
  94              		.section	.text.GBCL_Init,"ax",%progbits
  95              		.align	2
  96              		.global	GBCL_Init
  97              		.thumb
  98              		.thumb_func
  99              		.type	GBCL_Init, %function
 100              	GBCL_Init:
 101              	.LFB1:
  87:Generated_Source\PSoC5/GBCL.c **** 
  88:Generated_Source\PSoC5/GBCL.c **** 
  89:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_Init
  91:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
  92:Generated_Source\PSoC5/GBCL.c **** *
  93:Generated_Source\PSoC5/GBCL.c **** * Summary:
  94:Generated_Source\PSoC5/GBCL.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/GBCL.c **** *  dialog settings. It is not necessary to call GBCL_Init() because
  96:Generated_Source\PSoC5/GBCL.c **** *  the GBCL_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/GBCL.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/GBCL.c **** *
  99:Generated_Source\PSoC5/GBCL.c **** * Parameters:
 100:Generated_Source\PSoC5/GBCL.c **** *  None.
 101:Generated_Source\PSoC5/GBCL.c **** *
 102:Generated_Source\PSoC5/GBCL.c **** * Return:
 103:Generated_Source\PSoC5/GBCL.c **** *  None.
 104:Generated_Source\PSoC5/GBCL.c **** *
 105:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/GBCL.c **** void GBCL_Init(void) 
 107:Generated_Source\PSoC5/GBCL.c **** {
 102              		.loc 1 107 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/GBCL.c ****     #if(GBCL_RX_ENABLED || GBCL_HD_ENABLED)
 109:Generated_Source\PSoC5/GBCL.c **** 
 110:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/GBCL.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/GBCL.c ****             (void) CyIntSetVector(GBCL_RX_VECT_NUM, &GBCL_RXISR);
 112              		.loc 1 112 0
 113 0004 0D49     		ldr	r1, .L6
 114 0006 0020     		movs	r0, #0
 115 0008 FFF7FEFF 		bl	CyIntSetVector
 113:Generated_Source\PSoC5/GBCL.c ****             CyIntSetPriority(GBCL_RX_VECT_NUM, GBCL_RX_PRIOR_NUM);
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 5


 116              		.loc 1 113 0
 117 000c 0721     		movs	r1, #7
 118 000e 0020     		movs	r0, #0
 119 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:Generated_Source\PSoC5/GBCL.c ****             GBCL_errorStatus = 0u;
 120              		.loc 1 114 0
 121 0014 0A4B     		ldr	r3, .L6+4
 122 0016 0022     		movs	r2, #0
 123 0018 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/GBCL.c **** 
 117:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/GBCL.c ****             GBCL_SetRxAddressMode(GBCL_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/GBCL.c ****             GBCL_SetRxAddress1(GBCL_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/GBCL.c ****             GBCL_SetRxAddress2(GBCL_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/GBCL.c ****         #endif /* End GBCL_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/GBCL.c **** 
 123:Generated_Source\PSoC5/GBCL.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXBITCTR_PERIOD_REG = GBCL_RXBITCTR_INIT;
 124              		.loc 1 124 0
 125 001a 0A4B     		ldr	r3, .L6+8
 126 001c 7222     		movs	r2, #114
 127 001e 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/GBCL.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXSTATUS_MASK_REG  = GBCL_INIT_RX_INTERRUPTS_MASK;
 128              		.loc 1 126 0
 129 0020 094B     		ldr	r3, .L6+12
 130 0022 2022     		movs	r2, #32
 131 0024 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/GBCL.c ****     #endif /* End GBCL_RX_ENABLED || GBCL_HD_ENABLED*/
 128:Generated_Source\PSoC5/GBCL.c **** 
 129:Generated_Source\PSoC5/GBCL.c ****     #if(GBCL_TX_ENABLED)
 130:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/GBCL.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/GBCL.c ****             (void) CyIntSetVector(GBCL_TX_VECT_NUM, &GBCL_TXISR);
 133:Generated_Source\PSoC5/GBCL.c ****             CyIntSetPriority(GBCL_TX_VECT_NUM, GBCL_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/GBCL.c **** 
 136:Generated_Source\PSoC5/GBCL.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXBITCLKGEN_CTR_REG = GBCL_BIT_CENTER;
 132              		.loc 1 138 0
 133 0026 094B     		ldr	r3, .L6+16
 134 0028 0622     		movs	r2, #6
 135 002a 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXBITCLKTX_COMPLETE_REG = ((GBCL_NUMBER_OF_DATA_BITS +
 136              		.loc 1 139 0
 137 002c 084B     		ldr	r3, .L6+20
 138 002e 4722     		movs	r2, #71
 139 0030 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/GBCL.c ****                         GBCL_NUMBER_OF_START_BIT) * GBCL_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/GBCL.c ****         #else
 142:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXBITCTR_PERIOD_REG = ((GBCL_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/GBCL.c ****                         GBCL_NUMBER_OF_START_BIT) * GBCL_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/GBCL.c ****         #endif /* End GBCL_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/GBCL.c **** 
 146:Generated_Source\PSoC5/GBCL.c ****         /* Configure the Initial TX interrupt mask */
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 6


 147:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXSTATUS_MASK_REG = GBCL_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/GBCL.c ****         #else
 150:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXSTATUS_MASK_REG = GBCL_INIT_TX_INTERRUPTS_MASK;
 140              		.loc 1 150 0
 141 0032 084B     		ldr	r3, .L6+24
 142 0034 0022     		movs	r2, #0
 143 0036 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC5/GBCL.c ****         #endif /*End GBCL_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/GBCL.c **** 
 153:Generated_Source\PSoC5/GBCL.c ****     #endif /* End GBCL_TX_ENABLED */
 154:Generated_Source\PSoC5/GBCL.c **** 
 155:Generated_Source\PSoC5/GBCL.c ****     #if(GBCL_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/GBCL.c ****         GBCL_WriteControlRegister( \
 157:Generated_Source\PSoC5/GBCL.c ****             (GBCL_ReadControlRegister() & (uint8)~GBCL_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/GBCL.c ****             (uint8)(GBCL_PARITY_TYPE << GBCL_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/GBCL.c ****     #endif /* End GBCL_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/GBCL.c **** }
 144              		.loc 1 160 0
 145 0038 00BF     		nop
 146 003a 80BD     		pop	{r7, pc}
 147              	.L7:
 148              		.align	2
 149              	.L6:
 150 003c 00000000 		.word	GBCL_RXISR
 151 0040 00000000 		.word	GBCL_errorStatus
 152 0044 8A640040 		.word	1073767562
 153 0048 89650040 		.word	1073767817
 154 004c 25650040 		.word	1073767717
 155 0050 35650040 		.word	1073767733
 156 0054 84650040 		.word	1073767812
 157              		.cfi_endproc
 158              	.LFE1:
 159              		.size	GBCL_Init, .-GBCL_Init
 160              		.section	.text.GBCL_Enable,"ax",%progbits
 161              		.align	2
 162              		.global	GBCL_Enable
 163              		.thumb
 164              		.thumb_func
 165              		.type	GBCL_Enable, %function
 166              	GBCL_Enable:
 167              	.LFB2:
 161:Generated_Source\PSoC5/GBCL.c **** 
 162:Generated_Source\PSoC5/GBCL.c **** 
 163:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_Enable
 165:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
 166:Generated_Source\PSoC5/GBCL.c **** *
 167:Generated_Source\PSoC5/GBCL.c **** * Summary:
 168:Generated_Source\PSoC5/GBCL.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/GBCL.c **** *  to call GBCL_Enable() because the GBCL_Start() API
 170:Generated_Source\PSoC5/GBCL.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/GBCL.c **** *  operation.
 172:Generated_Source\PSoC5/GBCL.c **** 
 173:Generated_Source\PSoC5/GBCL.c **** * Parameters:
 174:Generated_Source\PSoC5/GBCL.c **** *  None.
 175:Generated_Source\PSoC5/GBCL.c **** *
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 7


 176:Generated_Source\PSoC5/GBCL.c **** * Return:
 177:Generated_Source\PSoC5/GBCL.c **** *  None.
 178:Generated_Source\PSoC5/GBCL.c **** *
 179:Generated_Source\PSoC5/GBCL.c **** * Global Variables:
 180:Generated_Source\PSoC5/GBCL.c **** *  GBCL_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/GBCL.c **** *
 182:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/GBCL.c **** void GBCL_Enable(void) 
 184:Generated_Source\PSoC5/GBCL.c **** {
 168              		.loc 1 184 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 8
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172 0000 80B5     		push	{r7, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 7, -8
 175              		.cfi_offset 14, -4
 176 0002 82B0     		sub	sp, sp, #8
 177              		.cfi_def_cfa_offset 16
 178 0004 00AF     		add	r7, sp, #0
 179              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/GBCL.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/GBCL.c ****     enableInterrupts = CyEnterCriticalSection();
 180              		.loc 1 186 0
 181 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 182 000a 0346     		mov	r3, r0
 183 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/GBCL.c **** 
 188:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_ENABLED || GBCL_HD_ENABLED)
 189:Generated_Source\PSoC5/GBCL.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXBITCTR_CONTROL_REG |= GBCL_CNTR_ENABLE;
 184              		.loc 1 190 0
 185 000e 114A     		ldr	r2, .L9
 186 0010 104B     		ldr	r3, .L9
 187 0012 1B78     		ldrb	r3, [r3]
 188 0014 DBB2     		uxtb	r3, r3
 189 0016 43F02003 		orr	r3, r3, #32
 190 001a DBB2     		uxtb	r3, r3
 191 001c 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/GBCL.c **** 
 192:Generated_Source\PSoC5/GBCL.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXSTATUS_ACTL_REG  |= GBCL_INT_ENABLE;
 192              		.loc 1 193 0
 193 001e 0E4A     		ldr	r2, .L9+4
 194 0020 0D4B     		ldr	r3, .L9+4
 195 0022 1B78     		ldrb	r3, [r3]
 196 0024 DBB2     		uxtb	r3, r3
 197 0026 43F01003 		orr	r3, r3, #16
 198 002a DBB2     		uxtb	r3, r3
 199 002c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/GBCL.c **** 
 195:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/GBCL.c ****             GBCL_EnableRxInt();
 200              		.loc 1 196 0
 201 002e 0B4B     		ldr	r3, .L9+8
 202 0030 0122     		movs	r2, #1
 203 0032 1A60     		str	r2, [r3]
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 8


 197:Generated_Source\PSoC5/GBCL.c **** 
 198:Generated_Source\PSoC5/GBCL.c ****             #if (GBCL_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/GBCL.c ****                 GBCL_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/GBCL.c ****             #endif /* (GBCL_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_ENABLED || GBCL_HD_ENABLED) */
 203:Generated_Source\PSoC5/GBCL.c **** 
 204:Generated_Source\PSoC5/GBCL.c ****     #if(GBCL_TX_ENABLED)
 205:Generated_Source\PSoC5/GBCL.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/GBCL.c ****         #if(!GBCL_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXBITCTR_CONTROL_REG |= GBCL_CNTR_ENABLE;
 208:Generated_Source\PSoC5/GBCL.c ****         #endif /* End GBCL_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/GBCL.c **** 
 210:Generated_Source\PSoC5/GBCL.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXSTATUS_ACTL_REG |= GBCL_INT_ENABLE;
 204              		.loc 1 211 0
 205 0034 0A4A     		ldr	r2, .L9+12
 206 0036 0A4B     		ldr	r3, .L9+12
 207 0038 1B78     		ldrb	r3, [r3]
 208 003a DBB2     		uxtb	r3, r3
 209 003c 43F01003 		orr	r3, r3, #16
 210 0040 DBB2     		uxtb	r3, r3
 211 0042 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/GBCL.c ****             GBCL_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/GBCL.c ****             GBCL_EnableTxInt();
 215:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/GBCL.c ****      #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/GBCL.c **** 
 218:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/GBCL.c ****         GBCL_IntClock_Start();  /* Enable the clock */
 220:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/GBCL.c **** 
 222:Generated_Source\PSoC5/GBCL.c ****     CyExitCriticalSection(enableInterrupts);
 212              		.loc 1 222 0
 213 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 214 0046 1846     		mov	r0, r3
 215 0048 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/GBCL.c **** }
 216              		.loc 1 223 0
 217 004c 00BF     		nop
 218 004e 0837     		adds	r7, r7, #8
 219              		.cfi_def_cfa_offset 8
 220 0050 BD46     		mov	sp, r7
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 0052 80BD     		pop	{r7, pc}
 224              	.L10:
 225              		.align	2
 226              	.L9:
 227 0054 9A640040 		.word	1073767578
 228 0058 99650040 		.word	1073767833
 229 005c 00E100E0 		.word	-536813312
 230 0060 94650040 		.word	1073767828
 231              		.cfi_endproc
 232              	.LFE2:
 233              		.size	GBCL_Enable, .-GBCL_Enable
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 9


 234              		.section	.text.GBCL_Stop,"ax",%progbits
 235              		.align	2
 236              		.global	GBCL_Stop
 237              		.thumb
 238              		.thumb_func
 239              		.type	GBCL_Stop, %function
 240              	GBCL_Stop:
 241              	.LFB3:
 224:Generated_Source\PSoC5/GBCL.c **** 
 225:Generated_Source\PSoC5/GBCL.c **** 
 226:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_Stop
 228:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
 229:Generated_Source\PSoC5/GBCL.c **** *
 230:Generated_Source\PSoC5/GBCL.c **** * Summary:
 231:Generated_Source\PSoC5/GBCL.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/GBCL.c **** *
 233:Generated_Source\PSoC5/GBCL.c **** * Parameters:
 234:Generated_Source\PSoC5/GBCL.c **** *  None.
 235:Generated_Source\PSoC5/GBCL.c **** *
 236:Generated_Source\PSoC5/GBCL.c **** * Return:
 237:Generated_Source\PSoC5/GBCL.c **** *  None.
 238:Generated_Source\PSoC5/GBCL.c **** *
 239:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/GBCL.c **** void GBCL_Stop(void) 
 241:Generated_Source\PSoC5/GBCL.c **** {
 242              		.loc 1 241 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 82B0     		sub	sp, sp, #8
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/GBCL.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/GBCL.c ****     enableInterrupts = CyEnterCriticalSection();
 254              		.loc 1 243 0
 255 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 256 000a 0346     		mov	r3, r0
 257 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/GBCL.c **** 
 245:Generated_Source\PSoC5/GBCL.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_ENABLED || GBCL_HD_ENABLED)
 247:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXBITCTR_CONTROL_REG &= (uint8) ~GBCL_CNTR_ENABLE;
 258              		.loc 1 247 0
 259 000e 114A     		ldr	r2, .L12
 260 0010 104B     		ldr	r3, .L12
 261 0012 1B78     		ldrb	r3, [r3]
 262 0014 DBB2     		uxtb	r3, r3
 263 0016 23F02003 		bic	r3, r3, #32
 264 001a DBB2     		uxtb	r3, r3
 265 001c 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_ENABLED || GBCL_HD_ENABLED) */
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 10


 249:Generated_Source\PSoC5/GBCL.c **** 
 250:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_TX_ENABLED)
 251:Generated_Source\PSoC5/GBCL.c ****         #if(!GBCL_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXBITCTR_CONTROL_REG &= (uint8) ~GBCL_CNTR_ENABLE;
 253:Generated_Source\PSoC5/GBCL.c ****         #endif /* (!GBCL_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_TX_ENABLED) */
 255:Generated_Source\PSoC5/GBCL.c **** 
 256:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/GBCL.c ****         GBCL_IntClock_Stop();   /* Disable the clock */
 258:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/GBCL.c **** 
 260:Generated_Source\PSoC5/GBCL.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_ENABLED || GBCL_HD_ENABLED)
 262:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXSTATUS_ACTL_REG  &= (uint8) ~GBCL_INT_ENABLE;
 266              		.loc 1 262 0
 267 001e 0E4A     		ldr	r2, .L12+4
 268 0020 0D4B     		ldr	r3, .L12+4
 269 0022 1B78     		ldrb	r3, [r3]
 270 0024 DBB2     		uxtb	r3, r3
 271 0026 23F01003 		bic	r3, r3, #16
 272 002a DBB2     		uxtb	r3, r3
 273 002c 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/GBCL.c **** 
 264:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/GBCL.c ****             GBCL_DisableRxInt();
 274              		.loc 1 265 0
 275 002e 0B4B     		ldr	r3, .L12+8
 276 0030 0122     		movs	r2, #1
 277 0032 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_ENABLED || GBCL_HD_ENABLED) */
 268:Generated_Source\PSoC5/GBCL.c **** 
 269:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_TX_ENABLED)
 270:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXSTATUS_ACTL_REG &= (uint8) ~GBCL_INT_ENABLE;
 278              		.loc 1 270 0
 279 0034 0A4A     		ldr	r2, .L12+12
 280 0036 0A4B     		ldr	r3, .L12+12
 281 0038 1B78     		ldrb	r3, [r3]
 282 003a DBB2     		uxtb	r3, r3
 283 003c 23F01003 		bic	r3, r3, #16
 284 0040 DBB2     		uxtb	r3, r3
 285 0042 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/GBCL.c **** 
 272:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/GBCL.c ****             GBCL_DisableTxInt();
 274:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_TX_ENABLED) */
 276:Generated_Source\PSoC5/GBCL.c **** 
 277:Generated_Source\PSoC5/GBCL.c ****     CyExitCriticalSection(enableInterrupts);
 286              		.loc 1 277 0
 287 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 288 0046 1846     		mov	r0, r3
 289 0048 FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC5/GBCL.c **** }
 290              		.loc 1 278 0
 291 004c 00BF     		nop
 292 004e 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 11


 293              		.cfi_def_cfa_offset 8
 294 0050 BD46     		mov	sp, r7
 295              		.cfi_def_cfa_register 13
 296              		@ sp needed
 297 0052 80BD     		pop	{r7, pc}
 298              	.L13:
 299              		.align	2
 300              	.L12:
 301 0054 9A640040 		.word	1073767578
 302 0058 99650040 		.word	1073767833
 303 005c 80E100E0 		.word	-536813184
 304 0060 94650040 		.word	1073767828
 305              		.cfi_endproc
 306              	.LFE3:
 307              		.size	GBCL_Stop, .-GBCL_Stop
 308              		.section	.text.GBCL_ReadControlRegister,"ax",%progbits
 309              		.align	2
 310              		.global	GBCL_ReadControlRegister
 311              		.thumb
 312              		.thumb_func
 313              		.type	GBCL_ReadControlRegister, %function
 314              	GBCL_ReadControlRegister:
 315              	.LFB4:
 279:Generated_Source\PSoC5/GBCL.c **** 
 280:Generated_Source\PSoC5/GBCL.c **** 
 281:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_ReadControlRegister
 283:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
 284:Generated_Source\PSoC5/GBCL.c **** *
 285:Generated_Source\PSoC5/GBCL.c **** * Summary:
 286:Generated_Source\PSoC5/GBCL.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/GBCL.c **** *
 288:Generated_Source\PSoC5/GBCL.c **** * Parameters:
 289:Generated_Source\PSoC5/GBCL.c **** *  None.
 290:Generated_Source\PSoC5/GBCL.c **** *
 291:Generated_Source\PSoC5/GBCL.c **** * Return:
 292:Generated_Source\PSoC5/GBCL.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/GBCL.c **** *
 294:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/GBCL.c **** uint8 GBCL_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/GBCL.c **** {
 316              		.loc 1 296 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321 0000 80B4     		push	{r7}
 322              		.cfi_def_cfa_offset 4
 323              		.cfi_offset 7, -4
 324 0002 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/GBCL.c ****         return(0u);
 326              		.loc 1 298 0
 327 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC5/GBCL.c ****     #else
 300:Generated_Source\PSoC5/GBCL.c ****         return(GBCL_CONTROL_REG);
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 12


 301:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/GBCL.c **** }
 328              		.loc 1 302 0
 329 0006 1846     		mov	r0, r3
 330 0008 BD46     		mov	sp, r7
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 000a 80BC     		pop	{r7}
 334              		.cfi_restore 7
 335              		.cfi_def_cfa_offset 0
 336 000c 7047     		bx	lr
 337              		.cfi_endproc
 338              	.LFE4:
 339              		.size	GBCL_ReadControlRegister, .-GBCL_ReadControlRegister
 340 000e 00BF     		.section	.text.GBCL_WriteControlRegister,"ax",%progbits
 341              		.align	2
 342              		.global	GBCL_WriteControlRegister
 343              		.thumb
 344              		.thumb_func
 345              		.type	GBCL_WriteControlRegister, %function
 346              	GBCL_WriteControlRegister:
 347              	.LFB5:
 303:Generated_Source\PSoC5/GBCL.c **** 
 304:Generated_Source\PSoC5/GBCL.c **** 
 305:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_WriteControlRegister
 307:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
 308:Generated_Source\PSoC5/GBCL.c **** *
 309:Generated_Source\PSoC5/GBCL.c **** * Summary:
 310:Generated_Source\PSoC5/GBCL.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/GBCL.c **** *
 312:Generated_Source\PSoC5/GBCL.c **** * Parameters:
 313:Generated_Source\PSoC5/GBCL.c **** *  control:  control register value
 314:Generated_Source\PSoC5/GBCL.c **** *
 315:Generated_Source\PSoC5/GBCL.c **** * Return:
 316:Generated_Source\PSoC5/GBCL.c **** *  None.
 317:Generated_Source\PSoC5/GBCL.c **** *
 318:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/GBCL.c **** void  GBCL_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/GBCL.c **** {
 348              		.loc 1 320 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353 0000 80B4     		push	{r7}
 354              		.cfi_def_cfa_offset 4
 355              		.cfi_offset 7, -4
 356 0002 83B0     		sub	sp, sp, #12
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 360 0006 0346     		mov	r3, r0
 361 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/GBCL.c ****         if(0u != control)
 323:Generated_Source\PSoC5/GBCL.c ****         {
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 13


 324:Generated_Source\PSoC5/GBCL.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/GBCL.c ****         }
 326:Generated_Source\PSoC5/GBCL.c ****     #else
 327:Generated_Source\PSoC5/GBCL.c ****        GBCL_CONTROL_REG = control;
 328:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/GBCL.c **** }
 362              		.loc 1 329 0
 363 000a 00BF     		nop
 364 000c 0C37     		adds	r7, r7, #12
 365              		.cfi_def_cfa_offset 4
 366 000e BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 0010 80BC     		pop	{r7}
 370              		.cfi_restore 7
 371              		.cfi_def_cfa_offset 0
 372 0012 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE5:
 375              		.size	GBCL_WriteControlRegister, .-GBCL_WriteControlRegister
 376              		.section	.text.GBCL_SetRxInterruptMode,"ax",%progbits
 377              		.align	2
 378              		.global	GBCL_SetRxInterruptMode
 379              		.thumb
 380              		.thumb_func
 381              		.type	GBCL_SetRxInterruptMode, %function
 382              	GBCL_SetRxInterruptMode:
 383              	.LFB6:
 330:Generated_Source\PSoC5/GBCL.c **** 
 331:Generated_Source\PSoC5/GBCL.c **** 
 332:Generated_Source\PSoC5/GBCL.c **** #if(GBCL_RX_ENABLED || GBCL_HD_ENABLED)
 333:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetRxInterruptMode
 335:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/GBCL.c ****     *
 337:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 338:Generated_Source\PSoC5/GBCL.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/GBCL.c ****     *
 340:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 341:Generated_Source\PSoC5/GBCL.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/GBCL.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/GBCL.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/GBCL.c ****     *
 352:Generated_Source\PSoC5/GBCL.c ****     * Return:
 353:Generated_Source\PSoC5/GBCL.c ****     *  None.
 354:Generated_Source\PSoC5/GBCL.c ****     *
 355:Generated_Source\PSoC5/GBCL.c ****     * Theory:
 356:Generated_Source\PSoC5/GBCL.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/GBCL.c ****     *
 358:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 14


 359:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/GBCL.c ****     {
 384              		.loc 1 360 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 0002 83B0     		sub	sp, sp, #12
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 396 0006 0346     		mov	r3, r0
 397 0008 FB71     		strb	r3, [r7, #7]
 361:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXSTATUS_MASK_REG  = intSrc;
 398              		.loc 1 361 0
 399 000a 044A     		ldr	r2, .L18
 400 000c FB79     		ldrb	r3, [r7, #7]
 401 000e 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC5/GBCL.c ****     }
 402              		.loc 1 362 0
 403 0010 00BF     		nop
 404 0012 0C37     		adds	r7, r7, #12
 405              		.cfi_def_cfa_offset 4
 406 0014 BD46     		mov	sp, r7
 407              		.cfi_def_cfa_register 13
 408              		@ sp needed
 409 0016 80BC     		pop	{r7}
 410              		.cfi_restore 7
 411              		.cfi_def_cfa_offset 0
 412 0018 7047     		bx	lr
 413              	.L19:
 414 001a 00BF     		.align	2
 415              	.L18:
 416 001c 89650040 		.word	1073767817
 417              		.cfi_endproc
 418              	.LFE6:
 419              		.size	GBCL_SetRxInterruptMode, .-GBCL_SetRxInterruptMode
 420              		.section	.text.GBCL_ReadRxData,"ax",%progbits
 421              		.align	2
 422              		.global	GBCL_ReadRxData
 423              		.thumb
 424              		.thumb_func
 425              		.type	GBCL_ReadRxData, %function
 426              	GBCL_ReadRxData:
 427              	.LFB7:
 363:Generated_Source\PSoC5/GBCL.c **** 
 364:Generated_Source\PSoC5/GBCL.c **** 
 365:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_ReadRxData
 367:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/GBCL.c ****     *
 369:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 370:Generated_Source\PSoC5/GBCL.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/GBCL.c ****     *  checking the status. You must check the status separately.
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 15


 372:Generated_Source\PSoC5/GBCL.c ****     *
 373:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 374:Generated_Source\PSoC5/GBCL.c ****     *  None.
 375:Generated_Source\PSoC5/GBCL.c ****     *
 376:Generated_Source\PSoC5/GBCL.c ****     * Return:
 377:Generated_Source\PSoC5/GBCL.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/GBCL.c ****     *
 379:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 380:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/GBCL.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/GBCL.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/GBCL.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/GBCL.c ****     *
 388:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 389:Generated_Source\PSoC5/GBCL.c ****     *  No.
 390:Generated_Source\PSoC5/GBCL.c ****     *
 391:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_ReadRxData(void) 
 393:Generated_Source\PSoC5/GBCL.c ****     {
 428              		.loc 1 393 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 8
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              		.cfi_def_cfa_offset 4
 435              		.cfi_offset 7, -4
 436 0002 83B0     		sub	sp, sp, #12
 437              		.cfi_def_cfa_offset 16
 438 0004 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 394:Generated_Source\PSoC5/GBCL.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/GBCL.c **** 
 396:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/GBCL.c **** 
 398:Generated_Source\PSoC5/GBCL.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/GBCL.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/GBCL.c **** 
 401:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableRxInt();
 440              		.loc 1 402 0
 441 0006 1B4B     		ldr	r3, .L27
 442 0008 0122     		movs	r2, #1
 443 000a 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/GBCL.c **** 
 404:Generated_Source\PSoC5/GBCL.c ****         locRxBufferRead  = GBCL_rxBufferRead;
 444              		.loc 1 404 0
 445 000c 1A4B     		ldr	r3, .L27+4
 446 000e 1B78     		ldrb	r3, [r3]
 447 0010 BB71     		strb	r3, [r7, #6]
 405:Generated_Source\PSoC5/GBCL.c ****         locRxBufferWrite = GBCL_rxBufferWrite;
 448              		.loc 1 405 0
 449 0012 1A4B     		ldr	r3, .L27+8
 450 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 16


 451 0016 7B71     		strb	r3, [r7, #5]
 406:Generated_Source\PSoC5/GBCL.c **** 
 407:Generated_Source\PSoC5/GBCL.c ****         if( (GBCL_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 452              		.loc 1 407 0
 453 0018 194B     		ldr	r3, .L27+12
 454 001a 1B78     		ldrb	r3, [r3]
 455 001c DBB2     		uxtb	r3, r3
 456 001e 002B     		cmp	r3, #0
 457 0020 03D1     		bne	.L21
 458              		.loc 1 407 0 is_stmt 0 discriminator 1
 459 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 460 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 461 0026 9A42     		cmp	r2, r3
 462 0028 18D0     		beq	.L22
 463              	.L21:
 408:Generated_Source\PSoC5/GBCL.c ****         {
 409:Generated_Source\PSoC5/GBCL.c ****             rxData = GBCL_rxBuffer[locRxBufferRead];
 464              		.loc 1 409 0 is_stmt 1
 465 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 466 002c 154A     		ldr	r2, .L27+16
 467 002e D35C     		ldrb	r3, [r2, r3]
 468 0030 FB71     		strb	r3, [r7, #7]
 410:Generated_Source\PSoC5/GBCL.c ****             locRxBufferRead++;
 469              		.loc 1 410 0
 470 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 471 0034 0133     		adds	r3, r3, #1
 472 0036 BB71     		strb	r3, [r7, #6]
 411:Generated_Source\PSoC5/GBCL.c **** 
 412:Generated_Source\PSoC5/GBCL.c ****             if(locRxBufferRead >= GBCL_RX_BUFFER_SIZE)
 473              		.loc 1 412 0
 474 0038 97F90630 		ldrsb	r3, [r7, #6]
 475 003c 002B     		cmp	r3, #0
 476 003e 01DA     		bge	.L23
 413:Generated_Source\PSoC5/GBCL.c ****             {
 414:Generated_Source\PSoC5/GBCL.c ****                 locRxBufferRead = 0u;
 477              		.loc 1 414 0
 478 0040 0023     		movs	r3, #0
 479 0042 BB71     		strb	r3, [r7, #6]
 480              	.L23:
 415:Generated_Source\PSoC5/GBCL.c ****             }
 416:Generated_Source\PSoC5/GBCL.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/GBCL.c ****             GBCL_rxBufferRead = locRxBufferRead;
 481              		.loc 1 417 0
 482 0044 0C4A     		ldr	r2, .L27+4
 483 0046 BB79     		ldrb	r3, [r7, #6]
 484 0048 1370     		strb	r3, [r2]
 418:Generated_Source\PSoC5/GBCL.c **** 
 419:Generated_Source\PSoC5/GBCL.c ****             if(GBCL_rxBufferLoopDetect != 0u)
 485              		.loc 1 419 0
 486 004a 0D4B     		ldr	r3, .L27+12
 487 004c 1B78     		ldrb	r3, [r3]
 488 004e DBB2     		uxtb	r3, r3
 489 0050 002B     		cmp	r3, #0
 490 0052 06D0     		beq	.L25
 420:Generated_Source\PSoC5/GBCL.c ****             {
 421:Generated_Source\PSoC5/GBCL.c ****                 GBCL_rxBufferLoopDetect = 0u;
 491              		.loc 1 421 0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 17


 492 0054 0A4B     		ldr	r3, .L27+12
 493 0056 0022     		movs	r2, #0
 494 0058 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC5/GBCL.c ****             {
 495              		.loc 1 419 0
 496 005a 02E0     		b	.L25
 497              	.L22:
 422:Generated_Source\PSoC5/GBCL.c ****                 #if ((GBCL_RX_INTERRUPT_ENABLED) && (GBCL_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/GBCL.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/GBCL.c ****                     #if( GBCL_HD_ENABLED )
 425:Generated_Source\PSoC5/GBCL.c ****                         if((GBCL_CONTROL_REG & GBCL_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/GBCL.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/GBCL.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/GBCL.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/GBCL.c ****                             */
 430:Generated_Source\PSoC5/GBCL.c ****                             GBCL_RXSTATUS_MASK_REG  |= GBCL_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/GBCL.c ****                         }
 432:Generated_Source\PSoC5/GBCL.c ****                     #else
 433:Generated_Source\PSoC5/GBCL.c ****                         GBCL_RXSTATUS_MASK_REG  |= GBCL_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/GBCL.c ****                     #endif /* end GBCL_HD_ENABLED */
 435:Generated_Source\PSoC5/GBCL.c ****                 #endif /* ((GBCL_RX_INTERRUPT_ENABLED) && (GBCL_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/GBCL.c ****             }
 437:Generated_Source\PSoC5/GBCL.c ****         }
 438:Generated_Source\PSoC5/GBCL.c ****         else
 439:Generated_Source\PSoC5/GBCL.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/GBCL.c ****             rxData = GBCL_RXDATA_REG;
 498              		.loc 1 440 0
 499 005c 0A4B     		ldr	r3, .L27+20
 500 005e 1B78     		ldrb	r3, [r3]
 501 0060 FB71     		strb	r3, [r7, #7]
 502              	.L25:
 441:Generated_Source\PSoC5/GBCL.c ****         }
 442:Generated_Source\PSoC5/GBCL.c **** 
 443:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableRxInt();
 503              		.loc 1 443 0
 504 0062 0A4B     		ldr	r3, .L27+24
 505 0064 0122     		movs	r2, #1
 506 0066 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/GBCL.c **** 
 445:Generated_Source\PSoC5/GBCL.c ****     #else
 446:Generated_Source\PSoC5/GBCL.c **** 
 447:Generated_Source\PSoC5/GBCL.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/GBCL.c ****         rxData = GBCL_RXDATA_REG;
 449:Generated_Source\PSoC5/GBCL.c **** 
 450:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/GBCL.c **** 
 452:Generated_Source\PSoC5/GBCL.c ****         return(rxData);
 507              		.loc 1 452 0
 508 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:Generated_Source\PSoC5/GBCL.c ****     }
 509              		.loc 1 453 0
 510 006a 1846     		mov	r0, r3
 511 006c 0C37     		adds	r7, r7, #12
 512              		.cfi_def_cfa_offset 4
 513 006e BD46     		mov	sp, r7
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 18


 516 0070 80BC     		pop	{r7}
 517              		.cfi_restore 7
 518              		.cfi_def_cfa_offset 0
 519 0072 7047     		bx	lr
 520              	.L28:
 521              		.align	2
 522              	.L27:
 523 0074 80E100E0 		.word	-536813184
 524 0078 00000000 		.word	GBCL_rxBufferRead
 525 007c 00000000 		.word	GBCL_rxBufferWrite
 526 0080 00000000 		.word	GBCL_rxBufferLoopDetect
 527 0084 00000000 		.word	GBCL_rxBuffer
 528 0088 49650040 		.word	1073767753
 529 008c 00E100E0 		.word	-536813312
 530              		.cfi_endproc
 531              	.LFE7:
 532              		.size	GBCL_ReadRxData, .-GBCL_ReadRxData
 533              		.section	.text.GBCL_ReadRxStatus,"ax",%progbits
 534              		.align	2
 535              		.global	GBCL_ReadRxStatus
 536              		.thumb
 537              		.thumb_func
 538              		.type	GBCL_ReadRxStatus, %function
 539              	GBCL_ReadRxStatus:
 540              	.LFB8:
 454:Generated_Source\PSoC5/GBCL.c **** 
 455:Generated_Source\PSoC5/GBCL.c **** 
 456:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_ReadRxStatus
 458:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/GBCL.c ****     *
 460:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 461:Generated_Source\PSoC5/GBCL.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/GBCL.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/GBCL.c ****     *
 464:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 465:Generated_Source\PSoC5/GBCL.c ****     *  None.
 466:Generated_Source\PSoC5/GBCL.c ****     *
 467:Generated_Source\PSoC5/GBCL.c ****     * Return:
 468:Generated_Source\PSoC5/GBCL.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/GBCL.c ****     *
 470:Generated_Source\PSoC5/GBCL.c ****     * Side Effect:
 471:Generated_Source\PSoC5/GBCL.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/GBCL.c ****     *  register read.
 475:Generated_Source\PSoC5/GBCL.c ****     *
 476:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 477:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/GBCL.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/GBCL.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/GBCL.c ****     *   bits.
 483:Generated_Source\PSoC5/GBCL.c ****     *
 484:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_ReadRxStatus(void) 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 19


 486:Generated_Source\PSoC5/GBCL.c ****     {
 541              		.loc 1 486 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 8
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546 0000 80B4     		push	{r7}
 547              		.cfi_def_cfa_offset 4
 548              		.cfi_offset 7, -4
 549 0002 83B0     		sub	sp, sp, #12
 550              		.cfi_def_cfa_offset 16
 551 0004 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 487:Generated_Source\PSoC5/GBCL.c ****         uint8 status;
 488:Generated_Source\PSoC5/GBCL.c **** 
 489:Generated_Source\PSoC5/GBCL.c ****         status = GBCL_RXSTATUS_REG & GBCL_RX_HW_MASK;
 553              		.loc 1 489 0
 554 0006 0C4B     		ldr	r3, .L32
 555 0008 1B78     		ldrb	r3, [r3]
 556 000a DBB2     		uxtb	r3, r3
 557 000c 03F07F03 		and	r3, r3, #127
 558 0010 FB71     		strb	r3, [r7, #7]
 490:Generated_Source\PSoC5/GBCL.c **** 
 491:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_rxBufferOverflow != 0u)
 559              		.loc 1 492 0
 560 0012 0A4B     		ldr	r3, .L32+4
 561 0014 1B78     		ldrb	r3, [r3]
 562 0016 DBB2     		uxtb	r3, r3
 563 0018 002B     		cmp	r3, #0
 564 001a 06D0     		beq	.L30
 493:Generated_Source\PSoC5/GBCL.c ****         {
 494:Generated_Source\PSoC5/GBCL.c ****             status |= GBCL_RX_STS_SOFT_BUFF_OVER;
 565              		.loc 1 494 0
 566 001c FB79     		ldrb	r3, [r7, #7]
 567 001e 63F07F03 		orn	r3, r3, #127
 568 0022 FB71     		strb	r3, [r7, #7]
 495:Generated_Source\PSoC5/GBCL.c ****             GBCL_rxBufferOverflow = 0u;
 569              		.loc 1 495 0
 570 0024 054B     		ldr	r3, .L32+4
 571 0026 0022     		movs	r2, #0
 572 0028 1A70     		strb	r2, [r3]
 573              	.L30:
 496:Generated_Source\PSoC5/GBCL.c ****         }
 497:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/GBCL.c **** 
 499:Generated_Source\PSoC5/GBCL.c ****         return(status);
 574              		.loc 1 499 0
 575 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:Generated_Source\PSoC5/GBCL.c ****     }
 576              		.loc 1 500 0
 577 002c 1846     		mov	r0, r3
 578 002e 0C37     		adds	r7, r7, #12
 579              		.cfi_def_cfa_offset 4
 580 0030 BD46     		mov	sp, r7
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 20


 583 0032 80BC     		pop	{r7}
 584              		.cfi_restore 7
 585              		.cfi_def_cfa_offset 0
 586 0034 7047     		bx	lr
 587              	.L33:
 588 0036 00BF     		.align	2
 589              	.L32:
 590 0038 69650040 		.word	1073767785
 591 003c 00000000 		.word	GBCL_rxBufferOverflow
 592              		.cfi_endproc
 593              	.LFE8:
 594              		.size	GBCL_ReadRxStatus, .-GBCL_ReadRxStatus
 595              		.section	.text.GBCL_GetChar,"ax",%progbits
 596              		.align	2
 597              		.global	GBCL_GetChar
 598              		.thumb
 599              		.thumb_func
 600              		.type	GBCL_GetChar, %function
 601              	GBCL_GetChar:
 602              	.LFB9:
 501:Generated_Source\PSoC5/GBCL.c **** 
 502:Generated_Source\PSoC5/GBCL.c **** 
 503:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_GetChar
 505:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/GBCL.c ****     *
 507:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 508:Generated_Source\PSoC5/GBCL.c ****     *  Returns the last received byte of data. GBCL_GetChar() is
 509:Generated_Source\PSoC5/GBCL.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/GBCL.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/GBCL.c ****     *
 512:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 513:Generated_Source\PSoC5/GBCL.c ****     *  None.
 514:Generated_Source\PSoC5/GBCL.c ****     *
 515:Generated_Source\PSoC5/GBCL.c ****     * Return:
 516:Generated_Source\PSoC5/GBCL.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/GBCL.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/GBCL.c ****     *
 519:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 520:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/GBCL.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/GBCL.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/GBCL.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/GBCL.c ****     *
 528:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 529:Generated_Source\PSoC5/GBCL.c ****     *  No.
 530:Generated_Source\PSoC5/GBCL.c ****     *
 531:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_GetChar(void) 
 533:Generated_Source\PSoC5/GBCL.c ****     {
 603              		.loc 1 533 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 8
 606              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 21


 607              		@ link register save eliminated.
 608 0000 80B4     		push	{r7}
 609              		.cfi_def_cfa_offset 4
 610              		.cfi_offset 7, -4
 611 0002 83B0     		sub	sp, sp, #12
 612              		.cfi_def_cfa_offset 16
 613 0004 00AF     		add	r7, sp, #0
 614              		.cfi_def_cfa_register 7
 534:Generated_Source\PSoC5/GBCL.c ****         uint8 rxData = 0u;
 615              		.loc 1 534 0
 616 0006 0023     		movs	r3, #0
 617 0008 FB71     		strb	r3, [r7, #7]
 535:Generated_Source\PSoC5/GBCL.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/GBCL.c **** 
 537:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/GBCL.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/GBCL.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/GBCL.c **** 
 541:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableRxInt();
 618              		.loc 1 542 0
 619 000a 234B     		ldr	r3, .L41
 620 000c 0122     		movs	r2, #1
 621 000e 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/GBCL.c **** 
 544:Generated_Source\PSoC5/GBCL.c ****         locRxBufferRead  = GBCL_rxBufferRead;
 622              		.loc 1 544 0
 623 0010 224B     		ldr	r3, .L41+4
 624 0012 1B78     		ldrb	r3, [r3]
 625 0014 BB71     		strb	r3, [r7, #6]
 545:Generated_Source\PSoC5/GBCL.c ****         locRxBufferWrite = GBCL_rxBufferWrite;
 626              		.loc 1 545 0
 627 0016 224B     		ldr	r3, .L41+8
 628 0018 1B78     		ldrb	r3, [r3]
 629 001a 7B71     		strb	r3, [r7, #5]
 546:Generated_Source\PSoC5/GBCL.c **** 
 547:Generated_Source\PSoC5/GBCL.c ****         if( (GBCL_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 630              		.loc 1 547 0
 631 001c 214B     		ldr	r3, .L41+12
 632 001e 1B78     		ldrb	r3, [r3]
 633 0020 DBB2     		uxtb	r3, r3
 634 0022 002B     		cmp	r3, #0
 635 0024 03D1     		bne	.L35
 636              		.loc 1 547 0 is_stmt 0 discriminator 1
 637 0026 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 638 0028 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 639 002a 9A42     		cmp	r2, r3
 640 002c 18D0     		beq	.L36
 641              	.L35:
 548:Generated_Source\PSoC5/GBCL.c ****         {
 549:Generated_Source\PSoC5/GBCL.c ****             rxData = GBCL_rxBuffer[locRxBufferRead];
 642              		.loc 1 549 0 is_stmt 1
 643 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 644 0030 1D4A     		ldr	r2, .L41+16
 645 0032 D35C     		ldrb	r3, [r2, r3]
 646 0034 FB71     		strb	r3, [r7, #7]
 550:Generated_Source\PSoC5/GBCL.c ****             locRxBufferRead++;
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 22


 647              		.loc 1 550 0
 648 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 649 0038 0133     		adds	r3, r3, #1
 650 003a BB71     		strb	r3, [r7, #6]
 551:Generated_Source\PSoC5/GBCL.c ****             if(locRxBufferRead >= GBCL_RX_BUFFER_SIZE)
 651              		.loc 1 551 0
 652 003c 97F90630 		ldrsb	r3, [r7, #6]
 653 0040 002B     		cmp	r3, #0
 654 0042 01DA     		bge	.L37
 552:Generated_Source\PSoC5/GBCL.c ****             {
 553:Generated_Source\PSoC5/GBCL.c ****                 locRxBufferRead = 0u;
 655              		.loc 1 553 0
 656 0044 0023     		movs	r3, #0
 657 0046 BB71     		strb	r3, [r7, #6]
 658              	.L37:
 554:Generated_Source\PSoC5/GBCL.c ****             }
 555:Generated_Source\PSoC5/GBCL.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/GBCL.c ****             GBCL_rxBufferRead = locRxBufferRead;
 659              		.loc 1 556 0
 660 0048 144A     		ldr	r2, .L41+4
 661 004a BB79     		ldrb	r3, [r7, #6]
 662 004c 1370     		strb	r3, [r2]
 557:Generated_Source\PSoC5/GBCL.c **** 
 558:Generated_Source\PSoC5/GBCL.c ****             if(GBCL_rxBufferLoopDetect != 0u)
 663              		.loc 1 558 0
 664 004e 154B     		ldr	r3, .L41+12
 665 0050 1B78     		ldrb	r3, [r3]
 666 0052 DBB2     		uxtb	r3, r3
 667 0054 002B     		cmp	r3, #0
 668 0056 15D0     		beq	.L39
 559:Generated_Source\PSoC5/GBCL.c ****             {
 560:Generated_Source\PSoC5/GBCL.c ****                 GBCL_rxBufferLoopDetect = 0u;
 669              		.loc 1 560 0
 670 0058 124B     		ldr	r3, .L41+12
 671 005a 0022     		movs	r2, #0
 672 005c 1A70     		strb	r2, [r3]
 558:Generated_Source\PSoC5/GBCL.c ****             {
 673              		.loc 1 558 0
 674 005e 11E0     		b	.L39
 675              	.L36:
 561:Generated_Source\PSoC5/GBCL.c ****                 #if( (GBCL_RX_INTERRUPT_ENABLED) && (GBCL_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/GBCL.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/GBCL.c ****                     #if( GBCL_HD_ENABLED )
 564:Generated_Source\PSoC5/GBCL.c ****                         if((GBCL_CONTROL_REG & GBCL_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/GBCL.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/GBCL.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/GBCL.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/GBCL.c ****                             */
 569:Generated_Source\PSoC5/GBCL.c ****                             GBCL_RXSTATUS_MASK_REG |= GBCL_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/GBCL.c ****                         }
 571:Generated_Source\PSoC5/GBCL.c ****                     #else
 572:Generated_Source\PSoC5/GBCL.c ****                         GBCL_RXSTATUS_MASK_REG |= GBCL_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/GBCL.c ****                     #endif /* end GBCL_HD_ENABLED */
 574:Generated_Source\PSoC5/GBCL.c ****                 #endif /* GBCL_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/GBCL.c ****             }
 576:Generated_Source\PSoC5/GBCL.c **** 
 577:Generated_Source\PSoC5/GBCL.c ****         }
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 23


 578:Generated_Source\PSoC5/GBCL.c ****         else
 579:Generated_Source\PSoC5/GBCL.c ****         {   rxStatus = GBCL_RXSTATUS_REG;
 676              		.loc 1 579 0
 677 0060 124B     		ldr	r3, .L41+20
 678 0062 1B78     		ldrb	r3, [r3]
 679 0064 3B71     		strb	r3, [r7, #4]
 580:Generated_Source\PSoC5/GBCL.c ****             if((rxStatus & GBCL_RX_STS_FIFO_NOTEMPTY) != 0u)
 680              		.loc 1 580 0
 681 0066 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 682 0068 03F02003 		and	r3, r3, #32
 683 006c 002B     		cmp	r3, #0
 684 006e 09D0     		beq	.L39
 581:Generated_Source\PSoC5/GBCL.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/GBCL.c ****                 rxData = GBCL_RXDATA_REG;
 685              		.loc 1 582 0
 686 0070 0F4B     		ldr	r3, .L41+24
 687 0072 1B78     		ldrb	r3, [r3]
 688 0074 FB71     		strb	r3, [r7, #7]
 583:Generated_Source\PSoC5/GBCL.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/GBCL.c ****                 if((rxStatus & (GBCL_RX_STS_BREAK | GBCL_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/GBCL.c ****                                 GBCL_RX_STS_STOP_ERROR | GBCL_RX_STS_OVERRUN)) != 0u)
 689              		.loc 1 585 0
 690 0076 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 691 0078 03F01E03 		and	r3, r3, #30
 584:Generated_Source\PSoC5/GBCL.c ****                                 GBCL_RX_STS_STOP_ERROR | GBCL_RX_STS_OVERRUN)) != 0u)
 692              		.loc 1 584 0
 693 007c 002B     		cmp	r3, #0
 694 007e 01D0     		beq	.L39
 586:Generated_Source\PSoC5/GBCL.c ****                 {
 587:Generated_Source\PSoC5/GBCL.c ****                     rxData = 0u;
 695              		.loc 1 587 0
 696 0080 0023     		movs	r3, #0
 697 0082 FB71     		strb	r3, [r7, #7]
 698              	.L39:
 588:Generated_Source\PSoC5/GBCL.c ****                 }
 589:Generated_Source\PSoC5/GBCL.c ****             }
 590:Generated_Source\PSoC5/GBCL.c ****         }
 591:Generated_Source\PSoC5/GBCL.c **** 
 592:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableRxInt();
 699              		.loc 1 592 0
 700 0084 0B4B     		ldr	r3, .L41+28
 701 0086 0122     		movs	r2, #1
 702 0088 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/GBCL.c **** 
 594:Generated_Source\PSoC5/GBCL.c ****     #else
 595:Generated_Source\PSoC5/GBCL.c **** 
 596:Generated_Source\PSoC5/GBCL.c ****         rxStatus =GBCL_RXSTATUS_REG;
 597:Generated_Source\PSoC5/GBCL.c ****         if((rxStatus & GBCL_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/GBCL.c ****         {
 599:Generated_Source\PSoC5/GBCL.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/GBCL.c ****             rxData = GBCL_RXDATA_REG;
 601:Generated_Source\PSoC5/GBCL.c **** 
 602:Generated_Source\PSoC5/GBCL.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/GBCL.c ****             if((rxStatus & (GBCL_RX_STS_BREAK | GBCL_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/GBCL.c ****                             GBCL_RX_STS_STOP_ERROR | GBCL_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/GBCL.c ****             {
 606:Generated_Source\PSoC5/GBCL.c ****                 rxData = 0u;
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 24


 607:Generated_Source\PSoC5/GBCL.c ****             }
 608:Generated_Source\PSoC5/GBCL.c ****         }
 609:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/GBCL.c **** 
 611:Generated_Source\PSoC5/GBCL.c ****         return(rxData);
 703              		.loc 1 611 0
 704 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:Generated_Source\PSoC5/GBCL.c ****     }
 705              		.loc 1 612 0
 706 008c 1846     		mov	r0, r3
 707 008e 0C37     		adds	r7, r7, #12
 708              		.cfi_def_cfa_offset 4
 709 0090 BD46     		mov	sp, r7
 710              		.cfi_def_cfa_register 13
 711              		@ sp needed
 712 0092 80BC     		pop	{r7}
 713              		.cfi_restore 7
 714              		.cfi_def_cfa_offset 0
 715 0094 7047     		bx	lr
 716              	.L42:
 717 0096 00BF     		.align	2
 718              	.L41:
 719 0098 80E100E0 		.word	-536813184
 720 009c 00000000 		.word	GBCL_rxBufferRead
 721 00a0 00000000 		.word	GBCL_rxBufferWrite
 722 00a4 00000000 		.word	GBCL_rxBufferLoopDetect
 723 00a8 00000000 		.word	GBCL_rxBuffer
 724 00ac 69650040 		.word	1073767785
 725 00b0 49650040 		.word	1073767753
 726 00b4 00E100E0 		.word	-536813312
 727              		.cfi_endproc
 728              	.LFE9:
 729              		.size	GBCL_GetChar, .-GBCL_GetChar
 730              		.section	.text.GBCL_GetByte,"ax",%progbits
 731              		.align	2
 732              		.global	GBCL_GetByte
 733              		.thumb
 734              		.thumb_func
 735              		.type	GBCL_GetByte, %function
 736              	GBCL_GetByte:
 737              	.LFB10:
 613:Generated_Source\PSoC5/GBCL.c **** 
 614:Generated_Source\PSoC5/GBCL.c **** 
 615:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_GetByte
 617:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/GBCL.c ****     *
 619:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 620:Generated_Source\PSoC5/GBCL.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/GBCL.c ****     *  condition.
 622:Generated_Source\PSoC5/GBCL.c ****     *
 623:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 624:Generated_Source\PSoC5/GBCL.c ****     *  None.
 625:Generated_Source\PSoC5/GBCL.c ****     *
 626:Generated_Source\PSoC5/GBCL.c ****     * Return:
 627:Generated_Source\PSoC5/GBCL.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/GBCL.c ****     *  an error has occurred.
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 25


 629:Generated_Source\PSoC5/GBCL.c ****     *
 630:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 631:Generated_Source\PSoC5/GBCL.c ****     *  No.
 632:Generated_Source\PSoC5/GBCL.c ****     *
 633:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/GBCL.c ****     uint16 GBCL_GetByte(void) 
 635:Generated_Source\PSoC5/GBCL.c ****     {
 738              		.loc 1 635 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 8
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742 0000 90B5     		push	{r4, r7, lr}
 743              		.cfi_def_cfa_offset 12
 744              		.cfi_offset 4, -12
 745              		.cfi_offset 7, -8
 746              		.cfi_offset 14, -4
 747 0002 83B0     		sub	sp, sp, #12
 748              		.cfi_def_cfa_offset 24
 749 0004 00AF     		add	r7, sp, #0
 750              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC5/GBCL.c ****         
 637:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/GBCL.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableRxInt();
 751              		.loc 1 640 0
 752 0006 0C4B     		ldr	r3, .L45
 753 0008 0122     		movs	r2, #1
 754 000a 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC5/GBCL.c ****         locErrorStatus = (uint16)GBCL_errorStatus;
 755              		.loc 1 641 0
 756 000c 0B4B     		ldr	r3, .L45+4
 757 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 758 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:Generated_Source\PSoC5/GBCL.c ****         GBCL_errorStatus = 0u;
 759              		.loc 1 642 0
 760 0012 0A4B     		ldr	r3, .L45+4
 761 0014 0022     		movs	r2, #0
 762 0016 1A70     		strb	r2, [r3]
 643:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableRxInt();
 763              		.loc 1 643 0
 764 0018 094B     		ldr	r3, .L45+8
 765 001a 0122     		movs	r2, #1
 766 001c 1A60     		str	r2, [r3]
 644:Generated_Source\PSoC5/GBCL.c ****         return ( (uint16)(locErrorStatus << 8u) | GBCL_ReadRxData() );
 767              		.loc 1 644 0
 768 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 769 0020 1B02     		lsls	r3, r3, #8
 770 0022 9CB2     		uxth	r4, r3
 771 0024 FFF7FEFF 		bl	GBCL_ReadRxData
 772 0028 0346     		mov	r3, r0
 773 002a 9BB2     		uxth	r3, r3
 774 002c 2343     		orrs	r3, r3, r4
 775 002e 9BB2     		uxth	r3, r3
 645:Generated_Source\PSoC5/GBCL.c ****     #else
 646:Generated_Source\PSoC5/GBCL.c ****         return ( ((uint16)GBCL_ReadRxStatus() << 8u) | GBCL_ReadRxData() );
 647:Generated_Source\PSoC5/GBCL.c ****     #endif /* GBCL_RX_INTERRUPT_ENABLED */
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 26


 648:Generated_Source\PSoC5/GBCL.c ****         
 649:Generated_Source\PSoC5/GBCL.c ****     }
 776              		.loc 1 649 0
 777 0030 1846     		mov	r0, r3
 778 0032 0C37     		adds	r7, r7, #12
 779              		.cfi_def_cfa_offset 12
 780 0034 BD46     		mov	sp, r7
 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 0036 90BD     		pop	{r4, r7, pc}
 784              	.L46:
 785              		.align	2
 786              	.L45:
 787 0038 80E100E0 		.word	-536813184
 788 003c 00000000 		.word	GBCL_errorStatus
 789 0040 00E100E0 		.word	-536813312
 790              		.cfi_endproc
 791              	.LFE10:
 792              		.size	GBCL_GetByte, .-GBCL_GetByte
 793              		.section	.text.GBCL_GetRxBufferSize,"ax",%progbits
 794              		.align	2
 795              		.global	GBCL_GetRxBufferSize
 796              		.thumb
 797              		.thumb_func
 798              		.type	GBCL_GetRxBufferSize, %function
 799              	GBCL_GetRxBufferSize:
 800              	.LFB11:
 650:Generated_Source\PSoC5/GBCL.c **** 
 651:Generated_Source\PSoC5/GBCL.c **** 
 652:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_GetRxBufferSize
 654:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/GBCL.c ****     *
 656:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 657:Generated_Source\PSoC5/GBCL.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/GBCL.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/GBCL.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/GBCL.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/GBCL.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/GBCL.c ****     *    account.
 663:Generated_Source\PSoC5/GBCL.c ****     *
 664:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 665:Generated_Source\PSoC5/GBCL.c ****     *  None.
 666:Generated_Source\PSoC5/GBCL.c ****     *
 667:Generated_Source\PSoC5/GBCL.c ****     * Return:
 668:Generated_Source\PSoC5/GBCL.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/GBCL.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/GBCL.c ****     *
 671:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 672:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/GBCL.c ****     *
 676:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 677:Generated_Source\PSoC5/GBCL.c ****     *  No.
 678:Generated_Source\PSoC5/GBCL.c ****     *
 679:Generated_Source\PSoC5/GBCL.c ****     * Theory:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 27


 680:Generated_Source\PSoC5/GBCL.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/GBCL.c ****     *
 682:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/GBCL.c ****                                                             
 685:Generated_Source\PSoC5/GBCL.c ****     {
 801              		.loc 1 685 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 8
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806 0000 80B4     		push	{r7}
 807              		.cfi_def_cfa_offset 4
 808              		.cfi_offset 7, -4
 809 0002 83B0     		sub	sp, sp, #12
 810              		.cfi_def_cfa_offset 16
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_def_cfa_register 7
 686:Generated_Source\PSoC5/GBCL.c ****         uint8 size;
 687:Generated_Source\PSoC5/GBCL.c **** 
 688:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/GBCL.c **** 
 690:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableRxInt();
 813              		.loc 1 691 0
 814 0006 1D4B     		ldr	r3, .L54
 815 0008 0122     		movs	r2, #1
 816 000a 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/GBCL.c **** 
 693:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_rxBufferRead == GBCL_rxBufferWrite)
 817              		.loc 1 693 0
 818 000c 1C4B     		ldr	r3, .L54+4
 819 000e 1B78     		ldrb	r3, [r3]
 820 0010 DAB2     		uxtb	r2, r3
 821 0012 1C4B     		ldr	r3, .L54+8
 822 0014 1B78     		ldrb	r3, [r3]
 823 0016 DBB2     		uxtb	r3, r3
 824 0018 9A42     		cmp	r2, r3
 825 001a 0AD1     		bne	.L48
 694:Generated_Source\PSoC5/GBCL.c ****         {
 695:Generated_Source\PSoC5/GBCL.c ****             if(GBCL_rxBufferLoopDetect != 0u)
 826              		.loc 1 695 0
 827 001c 1A4B     		ldr	r3, .L54+12
 828 001e 1B78     		ldrb	r3, [r3]
 829 0020 DBB2     		uxtb	r3, r3
 830 0022 002B     		cmp	r3, #0
 831 0024 02D0     		beq	.L49
 696:Generated_Source\PSoC5/GBCL.c ****             {
 697:Generated_Source\PSoC5/GBCL.c ****                 size = GBCL_RX_BUFFER_SIZE;
 832              		.loc 1 697 0
 833 0026 8023     		movs	r3, #128
 834 0028 FB71     		strb	r3, [r7, #7]
 835 002a 1DE0     		b	.L51
 836              	.L49:
 698:Generated_Source\PSoC5/GBCL.c ****             }
 699:Generated_Source\PSoC5/GBCL.c ****             else
 700:Generated_Source\PSoC5/GBCL.c ****             {
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 28


 701:Generated_Source\PSoC5/GBCL.c ****                 size = 0u;
 837              		.loc 1 701 0
 838 002c 0023     		movs	r3, #0
 839 002e FB71     		strb	r3, [r7, #7]
 840 0030 1AE0     		b	.L51
 841              	.L48:
 702:Generated_Source\PSoC5/GBCL.c ****             }
 703:Generated_Source\PSoC5/GBCL.c ****         }
 704:Generated_Source\PSoC5/GBCL.c ****         else if(GBCL_rxBufferRead < GBCL_rxBufferWrite)
 842              		.loc 1 704 0
 843 0032 134B     		ldr	r3, .L54+4
 844 0034 1B78     		ldrb	r3, [r3]
 845 0036 DAB2     		uxtb	r2, r3
 846 0038 124B     		ldr	r3, .L54+8
 847 003a 1B78     		ldrb	r3, [r3]
 848 003c DBB2     		uxtb	r3, r3
 849 003e 9A42     		cmp	r2, r3
 850 0040 08D2     		bcs	.L52
 705:Generated_Source\PSoC5/GBCL.c ****         {
 706:Generated_Source\PSoC5/GBCL.c ****             size = (GBCL_rxBufferWrite - GBCL_rxBufferRead);
 851              		.loc 1 706 0
 852 0042 104B     		ldr	r3, .L54+8
 853 0044 1B78     		ldrb	r3, [r3]
 854 0046 DAB2     		uxtb	r2, r3
 855 0048 0D4B     		ldr	r3, .L54+4
 856 004a 1B78     		ldrb	r3, [r3]
 857 004c DBB2     		uxtb	r3, r3
 858 004e D31A     		subs	r3, r2, r3
 859 0050 FB71     		strb	r3, [r7, #7]
 860 0052 09E0     		b	.L51
 861              	.L52:
 707:Generated_Source\PSoC5/GBCL.c ****         }
 708:Generated_Source\PSoC5/GBCL.c ****         else
 709:Generated_Source\PSoC5/GBCL.c ****         {
 710:Generated_Source\PSoC5/GBCL.c ****             size = (GBCL_RX_BUFFER_SIZE - GBCL_rxBufferRead) + GBCL_rxBufferWrite;
 862              		.loc 1 710 0
 863 0054 0B4B     		ldr	r3, .L54+8
 864 0056 1B78     		ldrb	r3, [r3]
 865 0058 DAB2     		uxtb	r2, r3
 866 005a 094B     		ldr	r3, .L54+4
 867 005c 1B78     		ldrb	r3, [r3]
 868 005e DBB2     		uxtb	r3, r3
 869 0060 D31A     		subs	r3, r2, r3
 870 0062 DBB2     		uxtb	r3, r3
 871 0064 803B     		subs	r3, r3, #128
 872 0066 FB71     		strb	r3, [r7, #7]
 873              	.L51:
 711:Generated_Source\PSoC5/GBCL.c ****         }
 712:Generated_Source\PSoC5/GBCL.c **** 
 713:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableRxInt();
 874              		.loc 1 713 0
 875 0068 084B     		ldr	r3, .L54+16
 876 006a 0122     		movs	r2, #1
 877 006c 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/GBCL.c **** 
 715:Generated_Source\PSoC5/GBCL.c ****     #else
 716:Generated_Source\PSoC5/GBCL.c **** 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 29


 717:Generated_Source\PSoC5/GBCL.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/GBCL.c ****         size = ((GBCL_RXSTATUS_REG & GBCL_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/GBCL.c **** 
 720:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/GBCL.c **** 
 722:Generated_Source\PSoC5/GBCL.c ****         return(size);
 878              		.loc 1 722 0
 879 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723:Generated_Source\PSoC5/GBCL.c ****     }
 880              		.loc 1 723 0
 881 0070 1846     		mov	r0, r3
 882 0072 0C37     		adds	r7, r7, #12
 883              		.cfi_def_cfa_offset 4
 884 0074 BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 0076 80BC     		pop	{r7}
 888              		.cfi_restore 7
 889              		.cfi_def_cfa_offset 0
 890 0078 7047     		bx	lr
 891              	.L55:
 892 007a 00BF     		.align	2
 893              	.L54:
 894 007c 80E100E0 		.word	-536813184
 895 0080 00000000 		.word	GBCL_rxBufferRead
 896 0084 00000000 		.word	GBCL_rxBufferWrite
 897 0088 00000000 		.word	GBCL_rxBufferLoopDetect
 898 008c 00E100E0 		.word	-536813312
 899              		.cfi_endproc
 900              	.LFE11:
 901              		.size	GBCL_GetRxBufferSize, .-GBCL_GetRxBufferSize
 902              		.section	.text.GBCL_ClearRxBuffer,"ax",%progbits
 903              		.align	2
 904              		.global	GBCL_ClearRxBuffer
 905              		.thumb
 906              		.thumb_func
 907              		.type	GBCL_ClearRxBuffer, %function
 908              	GBCL_ClearRxBuffer:
 909              	.LFB12:
 724:Generated_Source\PSoC5/GBCL.c **** 
 725:Generated_Source\PSoC5/GBCL.c **** 
 726:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_ClearRxBuffer
 728:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/GBCL.c ****     *
 730:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 731:Generated_Source\PSoC5/GBCL.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/GBCL.c ****     *
 733:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 734:Generated_Source\PSoC5/GBCL.c ****     *  None.
 735:Generated_Source\PSoC5/GBCL.c ****     *
 736:Generated_Source\PSoC5/GBCL.c ****     * Return:
 737:Generated_Source\PSoC5/GBCL.c ****     *  None.
 738:Generated_Source\PSoC5/GBCL.c ****     *
 739:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 740:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferRead - cleared to zero.
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 30


 742:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/GBCL.c ****     *
 745:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 746:Generated_Source\PSoC5/GBCL.c ****     *  No.
 747:Generated_Source\PSoC5/GBCL.c ****     *
 748:Generated_Source\PSoC5/GBCL.c ****     * Theory:
 749:Generated_Source\PSoC5/GBCL.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/GBCL.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/GBCL.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/GBCL.c ****     *
 753:Generated_Source\PSoC5/GBCL.c ****     * Side Effects:
 754:Generated_Source\PSoC5/GBCL.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/GBCL.c ****     *
 756:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/GBCL.c ****     void GBCL_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/GBCL.c ****     {
 910              		.loc 1 758 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 8
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914 0000 80B5     		push	{r7, lr}
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 7, -8
 917              		.cfi_offset 14, -4
 918 0002 82B0     		sub	sp, sp, #8
 919              		.cfi_def_cfa_offset 16
 920 0004 00AF     		add	r7, sp, #0
 921              		.cfi_def_cfa_register 7
 759:Generated_Source\PSoC5/GBCL.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/GBCL.c **** 
 761:Generated_Source\PSoC5/GBCL.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/GBCL.c ****         enableInterrupts = CyEnterCriticalSection();
 922              		.loc 1 762 0
 923 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 924 000a 0346     		mov	r3, r0
 925 000c FB71     		strb	r3, [r7, #7]
 763:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXDATA_AUX_CTL_REG |= (uint8)  GBCL_RX_FIFO_CLR;
 926              		.loc 1 763 0
 927 000e 154A     		ldr	r2, .L57
 928 0010 144B     		ldr	r3, .L57
 929 0012 1B78     		ldrb	r3, [r3]
 930 0014 DBB2     		uxtb	r3, r3
 931 0016 43F00103 		orr	r3, r3, #1
 932 001a DBB2     		uxtb	r3, r3
 933 001c 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXDATA_AUX_CTL_REG &= (uint8) ~GBCL_RX_FIFO_CLR;
 934              		.loc 1 764 0
 935 001e 114A     		ldr	r2, .L57
 936 0020 104B     		ldr	r3, .L57
 937 0022 1B78     		ldrb	r3, [r3]
 938 0024 DBB2     		uxtb	r3, r3
 939 0026 23F00103 		bic	r3, r3, #1
 940 002a DBB2     		uxtb	r3, r3
 941 002c 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC5/GBCL.c ****         CyExitCriticalSection(enableInterrupts);
 942              		.loc 1 765 0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 31


 943 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 944 0030 1846     		mov	r0, r3
 945 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:Generated_Source\PSoC5/GBCL.c **** 
 767:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/GBCL.c **** 
 769:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableRxInt();
 946              		.loc 1 770 0
 947 0036 0C4B     		ldr	r3, .L57+4
 948 0038 0122     		movs	r2, #1
 949 003a 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/GBCL.c **** 
 772:Generated_Source\PSoC5/GBCL.c ****         GBCL_rxBufferRead = 0u;
 950              		.loc 1 772 0
 951 003c 0B4B     		ldr	r3, .L57+8
 952 003e 0022     		movs	r2, #0
 953 0040 1A70     		strb	r2, [r3]
 773:Generated_Source\PSoC5/GBCL.c ****         GBCL_rxBufferWrite = 0u;
 954              		.loc 1 773 0
 955 0042 0B4B     		ldr	r3, .L57+12
 956 0044 0022     		movs	r2, #0
 957 0046 1A70     		strb	r2, [r3]
 774:Generated_Source\PSoC5/GBCL.c ****         GBCL_rxBufferLoopDetect = 0u;
 958              		.loc 1 774 0
 959 0048 0A4B     		ldr	r3, .L57+16
 960 004a 0022     		movs	r2, #0
 961 004c 1A70     		strb	r2, [r3]
 775:Generated_Source\PSoC5/GBCL.c ****         GBCL_rxBufferOverflow = 0u;
 962              		.loc 1 775 0
 963 004e 0A4B     		ldr	r3, .L57+20
 964 0050 0022     		movs	r2, #0
 965 0052 1A70     		strb	r2, [r3]
 776:Generated_Source\PSoC5/GBCL.c **** 
 777:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableRxInt();
 966              		.loc 1 777 0
 967 0054 094B     		ldr	r3, .L57+24
 968 0056 0122     		movs	r2, #1
 969 0058 1A60     		str	r2, [r3]
 778:Generated_Source\PSoC5/GBCL.c **** 
 779:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/GBCL.c **** 
 781:Generated_Source\PSoC5/GBCL.c ****     }
 970              		.loc 1 781 0
 971 005a 00BF     		nop
 972 005c 0837     		adds	r7, r7, #8
 973              		.cfi_def_cfa_offset 8
 974 005e BD46     		mov	sp, r7
 975              		.cfi_def_cfa_register 13
 976              		@ sp needed
 977 0060 80BD     		pop	{r7, pc}
 978              	.L58:
 979 0062 00BF     		.align	2
 980              	.L57:
 981 0064 99650040 		.word	1073767833
 982 0068 80E100E0 		.word	-536813184
 983 006c 00000000 		.word	GBCL_rxBufferRead
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 32


 984 0070 00000000 		.word	GBCL_rxBufferWrite
 985 0074 00000000 		.word	GBCL_rxBufferLoopDetect
 986 0078 00000000 		.word	GBCL_rxBufferOverflow
 987 007c 00E100E0 		.word	-536813312
 988              		.cfi_endproc
 989              	.LFE12:
 990              		.size	GBCL_ClearRxBuffer, .-GBCL_ClearRxBuffer
 991              		.section	.text.GBCL_SetRxAddressMode,"ax",%progbits
 992              		.align	2
 993              		.global	GBCL_SetRxAddressMode
 994              		.thumb
 995              		.thumb_func
 996              		.type	GBCL_SetRxAddressMode, %function
 997              	GBCL_SetRxAddressMode:
 998              	.LFB13:
 782:Generated_Source\PSoC5/GBCL.c **** 
 783:Generated_Source\PSoC5/GBCL.c **** 
 784:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetRxAddressMode
 786:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/GBCL.c ****     *
 788:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 789:Generated_Source\PSoC5/GBCL.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/GBCL.c ****     *  UART.
 791:Generated_Source\PSoC5/GBCL.c ****     *
 792:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 793:Generated_Source\PSoC5/GBCL.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/GBCL.c ****     *  GBCL__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/GBCL.c ****     *                                               detection
 796:Generated_Source\PSoC5/GBCL.c ****     *  GBCL__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/GBCL.c ****     *                                               address detection
 798:Generated_Source\PSoC5/GBCL.c ****     *  GBCL__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/GBCL.c ****     *                                               detection
 800:Generated_Source\PSoC5/GBCL.c ****     *  GBCL__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/GBCL.c ****     *                                               address detection
 802:Generated_Source\PSoC5/GBCL.c ****     *  GBCL__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/GBCL.c ****     *
 804:Generated_Source\PSoC5/GBCL.c ****     * Return:
 805:Generated_Source\PSoC5/GBCL.c ****     *  None.
 806:Generated_Source\PSoC5/GBCL.c ****     *
 807:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 808:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/GBCL.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/GBCL.c ****     *
 812:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/GBCL.c ****                                                         
 815:Generated_Source\PSoC5/GBCL.c ****     {
 999              		.loc 1 815 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 8
 1002              		@ frame_needed = 1, uses_anonymous_args = 0
 1003              		@ link register save eliminated.
 1004 0000 80B4     		push	{r7}
 1005              		.cfi_def_cfa_offset 4
 1006              		.cfi_offset 7, -4
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 33


 1007 0002 83B0     		sub	sp, sp, #12
 1008              		.cfi_def_cfa_offset 16
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 0346     		mov	r3, r0
 1012 0008 FB71     		strb	r3, [r7, #7]
 816:Generated_Source\PSoC5/GBCL.c ****         #if(GBCL_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/GBCL.c ****             #if(GBCL_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/GBCL.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/GBCL.c ****                 {
 820:Generated_Source\PSoC5/GBCL.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/GBCL.c ****                 }
 822:Generated_Source\PSoC5/GBCL.c ****             #else /* GBCL_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/GBCL.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/GBCL.c ****                 tmpCtrl = GBCL_CONTROL_REG & (uint8)~GBCL_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/GBCL.c ****                 tmpCtrl |= (uint8)(addressMode << GBCL_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/GBCL.c ****                 GBCL_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/GBCL.c **** 
 828:Generated_Source\PSoC5/GBCL.c ****                 #if(GBCL_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/GBCL.c ****                    (GBCL_RXBUFFERSIZE > GBCL_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/GBCL.c ****                     GBCL_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/GBCL.c ****                     GBCL_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/GBCL.c ****                 #endif /* End GBCL_RXBUFFERSIZE > GBCL_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/GBCL.c ****             #endif /* End GBCL_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/GBCL.c ****         #else /* GBCL_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/GBCL.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/GBCL.c ****             {
 837:Generated_Source\PSoC5/GBCL.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/GBCL.c ****             }
 839:Generated_Source\PSoC5/GBCL.c ****         #endif /* End GBCL_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/GBCL.c ****     }
 1013              		.loc 1 840 0
 1014 000a 00BF     		nop
 1015 000c 0C37     		adds	r7, r7, #12
 1016              		.cfi_def_cfa_offset 4
 1017 000e BD46     		mov	sp, r7
 1018              		.cfi_def_cfa_register 13
 1019              		@ sp needed
 1020 0010 80BC     		pop	{r7}
 1021              		.cfi_restore 7
 1022              		.cfi_def_cfa_offset 0
 1023 0012 7047     		bx	lr
 1024              		.cfi_endproc
 1025              	.LFE13:
 1026              		.size	GBCL_SetRxAddressMode, .-GBCL_SetRxAddressMode
 1027              		.section	.text.GBCL_SetRxAddress1,"ax",%progbits
 1028              		.align	2
 1029              		.global	GBCL_SetRxAddress1
 1030              		.thumb
 1031              		.thumb_func
 1032              		.type	GBCL_SetRxAddress1, %function
 1033              	GBCL_SetRxAddress1:
 1034              	.LFB14:
 841:Generated_Source\PSoC5/GBCL.c **** 
 842:Generated_Source\PSoC5/GBCL.c **** 
 843:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetRxAddress1
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 34


 845:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/GBCL.c ****     *
 847:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 848:Generated_Source\PSoC5/GBCL.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/GBCL.c ****     *
 850:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 851:Generated_Source\PSoC5/GBCL.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/GBCL.c ****     *
 853:Generated_Source\PSoC5/GBCL.c ****     * Return:
 854:Generated_Source\PSoC5/GBCL.c ****     *  None.
 855:Generated_Source\PSoC5/GBCL.c ****     *
 856:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/GBCL.c ****     {
 1035              		.loc 1 858 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 8
 1038              		@ frame_needed = 1, uses_anonymous_args = 0
 1039              		@ link register save eliminated.
 1040 0000 80B4     		push	{r7}
 1041              		.cfi_def_cfa_offset 4
 1042              		.cfi_offset 7, -4
 1043 0002 83B0     		sub	sp, sp, #12
 1044              		.cfi_def_cfa_offset 16
 1045 0004 00AF     		add	r7, sp, #0
 1046              		.cfi_def_cfa_register 7
 1047 0006 0346     		mov	r3, r0
 1048 0008 FB71     		strb	r3, [r7, #7]
 859:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXADDRESS1_REG = address;
 1049              		.loc 1 859 0
 1050 000a 044A     		ldr	r2, .L61
 1051 000c FB79     		ldrb	r3, [r7, #7]
 1052 000e 1370     		strb	r3, [r2]
 860:Generated_Source\PSoC5/GBCL.c ****     }
 1053              		.loc 1 860 0
 1054 0010 00BF     		nop
 1055 0012 0C37     		adds	r7, r7, #12
 1056              		.cfi_def_cfa_offset 4
 1057 0014 BD46     		mov	sp, r7
 1058              		.cfi_def_cfa_register 13
 1059              		@ sp needed
 1060 0016 80BC     		pop	{r7}
 1061              		.cfi_restore 7
 1062              		.cfi_def_cfa_offset 0
 1063 0018 7047     		bx	lr
 1064              	.L62:
 1065 001a 00BF     		.align	2
 1066              	.L61:
 1067 001c 29650040 		.word	1073767721
 1068              		.cfi_endproc
 1069              	.LFE14:
 1070              		.size	GBCL_SetRxAddress1, .-GBCL_SetRxAddress1
 1071              		.section	.text.GBCL_SetRxAddress2,"ax",%progbits
 1072              		.align	2
 1073              		.global	GBCL_SetRxAddress2
 1074              		.thumb
 1075              		.thumb_func
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 35


 1076              		.type	GBCL_SetRxAddress2, %function
 1077              	GBCL_SetRxAddress2:
 1078              	.LFB15:
 861:Generated_Source\PSoC5/GBCL.c **** 
 862:Generated_Source\PSoC5/GBCL.c **** 
 863:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetRxAddress2
 865:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/GBCL.c ****     *
 867:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 868:Generated_Source\PSoC5/GBCL.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/GBCL.c ****     *
 870:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 871:Generated_Source\PSoC5/GBCL.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/GBCL.c ****     *
 873:Generated_Source\PSoC5/GBCL.c ****     * Return:
 874:Generated_Source\PSoC5/GBCL.c ****     *  None.
 875:Generated_Source\PSoC5/GBCL.c ****     *
 876:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/GBCL.c ****     {
 1079              		.loc 1 878 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 8
 1082              		@ frame_needed = 1, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 1084 0000 80B4     		push	{r7}
 1085              		.cfi_def_cfa_offset 4
 1086              		.cfi_offset 7, -4
 1087 0002 83B0     		sub	sp, sp, #12
 1088              		.cfi_def_cfa_offset 16
 1089 0004 00AF     		add	r7, sp, #0
 1090              		.cfi_def_cfa_register 7
 1091 0006 0346     		mov	r3, r0
 1092 0008 FB71     		strb	r3, [r7, #7]
 879:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXADDRESS2_REG = address;
 1093              		.loc 1 879 0
 1094 000a 044A     		ldr	r2, .L64
 1095 000c FB79     		ldrb	r3, [r7, #7]
 1096 000e 1370     		strb	r3, [r2]
 880:Generated_Source\PSoC5/GBCL.c ****     }
 1097              		.loc 1 880 0
 1098 0010 00BF     		nop
 1099 0012 0C37     		adds	r7, r7, #12
 1100              		.cfi_def_cfa_offset 4
 1101 0014 BD46     		mov	sp, r7
 1102              		.cfi_def_cfa_register 13
 1103              		@ sp needed
 1104 0016 80BC     		pop	{r7}
 1105              		.cfi_restore 7
 1106              		.cfi_def_cfa_offset 0
 1107 0018 7047     		bx	lr
 1108              	.L65:
 1109 001a 00BF     		.align	2
 1110              	.L64:
 1111 001c 39650040 		.word	1073767737
 1112              		.cfi_endproc
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 36


 1113              	.LFE15:
 1114              		.size	GBCL_SetRxAddress2, .-GBCL_SetRxAddress2
 1115              		.section	.text.GBCL_SetTxInterruptMode,"ax",%progbits
 1116              		.align	2
 1117              		.global	GBCL_SetTxInterruptMode
 1118              		.thumb
 1119              		.thumb_func
 1120              		.type	GBCL_SetTxInterruptMode, %function
 1121              	GBCL_SetTxInterruptMode:
 1122              	.LFB16:
 881:Generated_Source\PSoC5/GBCL.c **** 
 882:Generated_Source\PSoC5/GBCL.c **** #endif  /* GBCL_RX_ENABLED || GBCL_HD_ENABLED*/
 883:Generated_Source\PSoC5/GBCL.c **** 
 884:Generated_Source\PSoC5/GBCL.c **** 
 885:Generated_Source\PSoC5/GBCL.c **** #if( (GBCL_TX_ENABLED) || (GBCL_HD_ENABLED) )
 886:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetTxInterruptMode
 888:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/GBCL.c ****     *
 890:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 891:Generated_Source\PSoC5/GBCL.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/GBCL.c ****     *  interrupt.
 893:Generated_Source\PSoC5/GBCL.c ****     *
 894:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 895:Generated_Source\PSoC5/GBCL.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/GBCL.c ****     *
 901:Generated_Source\PSoC5/GBCL.c ****     * Return:
 902:Generated_Source\PSoC5/GBCL.c ****     *  None.
 903:Generated_Source\PSoC5/GBCL.c ****     *
 904:Generated_Source\PSoC5/GBCL.c ****     * Theory:
 905:Generated_Source\PSoC5/GBCL.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/GBCL.c ****     *
 907:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/GBCL.c ****     {
 1123              		.loc 1 909 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 8
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
 1128 0000 80B4     		push	{r7}
 1129              		.cfi_def_cfa_offset 4
 1130              		.cfi_offset 7, -4
 1131 0002 83B0     		sub	sp, sp, #12
 1132              		.cfi_def_cfa_offset 16
 1133 0004 00AF     		add	r7, sp, #0
 1134              		.cfi_def_cfa_register 7
 1135 0006 0346     		mov	r3, r0
 1136 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXSTATUS_MASK_REG = intSrc;
 1137              		.loc 1 910 0
 1138 000a 044A     		ldr	r2, .L67
 1139 000c FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 37


 1140 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/GBCL.c ****     }
 1141              		.loc 1 911 0
 1142 0010 00BF     		nop
 1143 0012 0C37     		adds	r7, r7, #12
 1144              		.cfi_def_cfa_offset 4
 1145 0014 BD46     		mov	sp, r7
 1146              		.cfi_def_cfa_register 13
 1147              		@ sp needed
 1148 0016 80BC     		pop	{r7}
 1149              		.cfi_restore 7
 1150              		.cfi_def_cfa_offset 0
 1151 0018 7047     		bx	lr
 1152              	.L68:
 1153 001a 00BF     		.align	2
 1154              	.L67:
 1155 001c 84650040 		.word	1073767812
 1156              		.cfi_endproc
 1157              	.LFE16:
 1158              		.size	GBCL_SetTxInterruptMode, .-GBCL_SetTxInterruptMode
 1159              		.section	.text.GBCL_WriteTxData,"ax",%progbits
 1160              		.align	2
 1161              		.global	GBCL_WriteTxData
 1162              		.thumb
 1163              		.thumb_func
 1164              		.type	GBCL_WriteTxData, %function
 1165              	GBCL_WriteTxData:
 1166              	.LFB17:
 912:Generated_Source\PSoC5/GBCL.c **** 
 913:Generated_Source\PSoC5/GBCL.c **** 
 914:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_WriteTxData
 916:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/GBCL.c ****     *
 918:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 919:Generated_Source\PSoC5/GBCL.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/GBCL.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/GBCL.c ****     *  separately.
 922:Generated_Source\PSoC5/GBCL.c ****     *
 923:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 924:Generated_Source\PSoC5/GBCL.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/GBCL.c ****     *
 926:Generated_Source\PSoC5/GBCL.c ****     * Return:
 927:Generated_Source\PSoC5/GBCL.c ****     * None.
 928:Generated_Source\PSoC5/GBCL.c ****     *
 929:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 930:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/GBCL.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/GBCL.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/GBCL.c ****     *    initialized.
 937:Generated_Source\PSoC5/GBCL.c ****     *
 938:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 939:Generated_Source\PSoC5/GBCL.c ****     *  No.
 940:Generated_Source\PSoC5/GBCL.c ****     *
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 38


 941:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/GBCL.c ****     void GBCL_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/GBCL.c ****     {
 1167              		.loc 1 943 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 8
 1170              		@ frame_needed = 1, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
 1172 0000 80B4     		push	{r7}
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 7, -4
 1175 0002 83B0     		sub	sp, sp, #12
 1176              		.cfi_def_cfa_offset 16
 1177 0004 00AF     		add	r7, sp, #0
 1178              		.cfi_def_cfa_register 7
 1179 0006 0346     		mov	r3, r0
 1180 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/GBCL.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_initVar != 0u)
 1181              		.loc 1 945 0
 1182 000a 064B     		ldr	r3, .L72
 1183 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 000e 002B     		cmp	r3, #0
 1185 0010 02D0     		beq	.L71
 946:Generated_Source\PSoC5/GBCL.c ****         {
 947:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/GBCL.c **** 
 949:Generated_Source\PSoC5/GBCL.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/GBCL.c ****             GBCL_DisableTxInt();
 951:Generated_Source\PSoC5/GBCL.c **** 
 952:Generated_Source\PSoC5/GBCL.c ****             if( (GBCL_txBufferRead == GBCL_txBufferWrite) &&
 953:Generated_Source\PSoC5/GBCL.c ****                 ((GBCL_TXSTATUS_REG & GBCL_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/GBCL.c ****             {
 955:Generated_Source\PSoC5/GBCL.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/GBCL.c ****                 GBCL_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/GBCL.c ****             }
 958:Generated_Source\PSoC5/GBCL.c ****             else
 959:Generated_Source\PSoC5/GBCL.c ****             {
 960:Generated_Source\PSoC5/GBCL.c ****                 if(GBCL_txBufferWrite >= GBCL_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/GBCL.c ****                 {
 962:Generated_Source\PSoC5/GBCL.c ****                     GBCL_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/GBCL.c ****                 }
 964:Generated_Source\PSoC5/GBCL.c **** 
 965:Generated_Source\PSoC5/GBCL.c ****                 GBCL_txBuffer[GBCL_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/GBCL.c **** 
 967:Generated_Source\PSoC5/GBCL.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/GBCL.c ****                 GBCL_txBufferWrite++;
 969:Generated_Source\PSoC5/GBCL.c ****             }
 970:Generated_Source\PSoC5/GBCL.c **** 
 971:Generated_Source\PSoC5/GBCL.c ****             GBCL_EnableTxInt();
 972:Generated_Source\PSoC5/GBCL.c **** 
 973:Generated_Source\PSoC5/GBCL.c ****         #else
 974:Generated_Source\PSoC5/GBCL.c **** 
 975:Generated_Source\PSoC5/GBCL.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXDATA_REG = txDataByte;
 1186              		.loc 1 976 0
 1187 0012 054A     		ldr	r2, .L72+4
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 39


 1188 0014 FB79     		ldrb	r3, [r7, #7]
 1189 0016 1370     		strb	r3, [r2]
 1190              	.L71:
 977:Generated_Source\PSoC5/GBCL.c **** 
 978:Generated_Source\PSoC5/GBCL.c ****         #endif /*(GBCL_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/GBCL.c ****         }
 980:Generated_Source\PSoC5/GBCL.c ****     }
 1191              		.loc 1 980 0
 1192 0018 00BF     		nop
 1193 001a 0C37     		adds	r7, r7, #12
 1194              		.cfi_def_cfa_offset 4
 1195 001c BD46     		mov	sp, r7
 1196              		.cfi_def_cfa_register 13
 1197              		@ sp needed
 1198 001e 80BC     		pop	{r7}
 1199              		.cfi_restore 7
 1200              		.cfi_def_cfa_offset 0
 1201 0020 7047     		bx	lr
 1202              	.L73:
 1203 0022 00BF     		.align	2
 1204              	.L72:
 1205 0024 00000000 		.word	GBCL_initVar
 1206 0028 44650040 		.word	1073767748
 1207              		.cfi_endproc
 1208              	.LFE17:
 1209              		.size	GBCL_WriteTxData, .-GBCL_WriteTxData
 1210              		.section	.text.GBCL_ReadTxStatus,"ax",%progbits
 1211              		.align	2
 1212              		.global	GBCL_ReadTxStatus
 1213              		.thumb
 1214              		.thumb_func
 1215              		.type	GBCL_ReadTxStatus, %function
 1216              	GBCL_ReadTxStatus:
 1217              	.LFB18:
 981:Generated_Source\PSoC5/GBCL.c **** 
 982:Generated_Source\PSoC5/GBCL.c **** 
 983:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_ReadTxStatus
 985:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/GBCL.c ****     *
 987:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 988:Generated_Source\PSoC5/GBCL.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/GBCL.c ****     *
 990:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 991:Generated_Source\PSoC5/GBCL.c ****     *  None.
 992:Generated_Source\PSoC5/GBCL.c ****     *
 993:Generated_Source\PSoC5/GBCL.c ****     * Return:
 994:Generated_Source\PSoC5/GBCL.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/GBCL.c ****     *
 996:Generated_Source\PSoC5/GBCL.c ****     * Theory:
 997:Generated_Source\PSoC5/GBCL.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/GBCL.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/GBCL.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/GBCL.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/GBCL.c ****     *
1002:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_ReadTxStatus(void) 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 40


1004:Generated_Source\PSoC5/GBCL.c ****     {
 1218              		.loc 1 1004 0
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 0
 1221              		@ frame_needed = 1, uses_anonymous_args = 0
 1222              		@ link register save eliminated.
 1223 0000 80B4     		push	{r7}
 1224              		.cfi_def_cfa_offset 4
 1225              		.cfi_offset 7, -4
 1226 0002 00AF     		add	r7, sp, #0
 1227              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/GBCL.c ****         return(GBCL_TXSTATUS_REG);
 1228              		.loc 1 1005 0
 1229 0004 034B     		ldr	r3, .L76
 1230 0006 1B78     		ldrb	r3, [r3]
 1231 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/GBCL.c ****     }
 1232              		.loc 1 1006 0
 1233 000a 1846     		mov	r0, r3
 1234 000c BD46     		mov	sp, r7
 1235              		.cfi_def_cfa_register 13
 1236              		@ sp needed
 1237 000e 80BC     		pop	{r7}
 1238              		.cfi_restore 7
 1239              		.cfi_def_cfa_offset 0
 1240 0010 7047     		bx	lr
 1241              	.L77:
 1242 0012 00BF     		.align	2
 1243              	.L76:
 1244 0014 64650040 		.word	1073767780
 1245              		.cfi_endproc
 1246              	.LFE18:
 1247              		.size	GBCL_ReadTxStatus, .-GBCL_ReadTxStatus
 1248              		.section	.text.GBCL_PutChar,"ax",%progbits
 1249              		.align	2
 1250              		.global	GBCL_PutChar
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	GBCL_PutChar, %function
 1254              	GBCL_PutChar:
 1255              	.LFB19:
1007:Generated_Source\PSoC5/GBCL.c **** 
1008:Generated_Source\PSoC5/GBCL.c **** 
1009:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_PutChar
1011:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/GBCL.c ****     *
1013:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1014:Generated_Source\PSoC5/GBCL.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/GBCL.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/GBCL.c ****     *  hold the data.
1017:Generated_Source\PSoC5/GBCL.c ****     *
1018:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1019:Generated_Source\PSoC5/GBCL.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/GBCL.c ****     *
1021:Generated_Source\PSoC5/GBCL.c ****     * Return:
1022:Generated_Source\PSoC5/GBCL.c ****     *  None.
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 41


1023:Generated_Source\PSoC5/GBCL.c ****     *
1024:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1025:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/GBCL.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/GBCL.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/GBCL.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/GBCL.c ****     *     initialized.
1033:Generated_Source\PSoC5/GBCL.c ****     *
1034:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1035:Generated_Source\PSoC5/GBCL.c ****     *  No.
1036:Generated_Source\PSoC5/GBCL.c ****     *
1037:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1038:Generated_Source\PSoC5/GBCL.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/GBCL.c ****     *
1040:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/GBCL.c ****     void GBCL_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/GBCL.c ****     {
 1256              		.loc 1 1042 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 8
 1259              		@ frame_needed = 1, uses_anonymous_args = 0
 1260              		@ link register save eliminated.
 1261 0000 80B4     		push	{r7}
 1262              		.cfi_def_cfa_offset 4
 1263              		.cfi_offset 7, -4
 1264 0002 83B0     		sub	sp, sp, #12
 1265              		.cfi_def_cfa_offset 16
 1266 0004 00AF     		add	r7, sp, #0
 1267              		.cfi_def_cfa_register 7
 1268 0006 0346     		mov	r3, r0
 1269 0008 FB71     		strb	r3, [r7, #7]
1043:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/GBCL.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/GBCL.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/GBCL.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/GBCL.c ****         */
1048:Generated_Source\PSoC5/GBCL.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/GBCL.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/GBCL.c **** 
1051:Generated_Source\PSoC5/GBCL.c ****         do
1052:Generated_Source\PSoC5/GBCL.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/GBCL.c **** 
1054:Generated_Source\PSoC5/GBCL.c ****         #if ((GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/GBCL.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/GBCL.c ****             GBCL_DisableTxInt();
1057:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/GBCL.c **** 
1059:Generated_Source\PSoC5/GBCL.c ****             locTxBufferWrite = GBCL_txBufferWrite;
1060:Generated_Source\PSoC5/GBCL.c ****             locTxBufferRead  = GBCL_txBufferRead;
1061:Generated_Source\PSoC5/GBCL.c **** 
1062:Generated_Source\PSoC5/GBCL.c ****         #if ((GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/GBCL.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/GBCL.c ****             GBCL_EnableTxInt();
1065:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3) */
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 42


1066:Generated_Source\PSoC5/GBCL.c ****         }
1067:Generated_Source\PSoC5/GBCL.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/GBCL.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/GBCL.c ****                                 (uint8)(GBCL_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/GBCL.c **** 
1071:Generated_Source\PSoC5/GBCL.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/GBCL.c ****             ((GBCL_TXSTATUS_REG & GBCL_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/GBCL.c ****         {
1074:Generated_Source\PSoC5/GBCL.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/GBCL.c ****         }
1077:Generated_Source\PSoC5/GBCL.c ****         else
1078:Generated_Source\PSoC5/GBCL.c ****         {
1079:Generated_Source\PSoC5/GBCL.c ****             if(locTxBufferWrite >= GBCL_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/GBCL.c ****             {
1081:Generated_Source\PSoC5/GBCL.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/GBCL.c ****             }
1083:Generated_Source\PSoC5/GBCL.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/GBCL.c ****             GBCL_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/GBCL.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/GBCL.c **** 
1087:Generated_Source\PSoC5/GBCL.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/GBCL.c ****         #if ((GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/GBCL.c ****             GBCL_DisableTxInt();
1090:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/GBCL.c **** 
1092:Generated_Source\PSoC5/GBCL.c ****             GBCL_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/GBCL.c **** 
1094:Generated_Source\PSoC5/GBCL.c ****         #if ((GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/GBCL.c ****             GBCL_EnableTxInt();
1096:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/GBCL.c **** 
1098:Generated_Source\PSoC5/GBCL.c ****             if(0u != (GBCL_TXSTATUS_REG & GBCL_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/GBCL.c ****             {
1100:Generated_Source\PSoC5/GBCL.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/GBCL.c ****                 GBCL_SetPendingTxInt();
1102:Generated_Source\PSoC5/GBCL.c ****             }
1103:Generated_Source\PSoC5/GBCL.c ****         }
1104:Generated_Source\PSoC5/GBCL.c **** 
1105:Generated_Source\PSoC5/GBCL.c ****     #else
1106:Generated_Source\PSoC5/GBCL.c **** 
1107:Generated_Source\PSoC5/GBCL.c ****         while((GBCL_TXSTATUS_REG & GBCL_TX_STS_FIFO_FULL) != 0u)
 1270              		.loc 1 1107 0
 1271 000a 00BF     		nop
 1272              	.L79:
 1273              		.loc 1 1107 0 is_stmt 0 discriminator 1
 1274 000c 074B     		ldr	r3, .L80
 1275 000e 1B78     		ldrb	r3, [r3]
 1276 0010 DBB2     		uxtb	r3, r3
 1277 0012 03F00403 		and	r3, r3, #4
 1278 0016 002B     		cmp	r3, #0
 1279 0018 F8D1     		bne	.L79
1108:Generated_Source\PSoC5/GBCL.c ****         {
1109:Generated_Source\PSoC5/GBCL.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/GBCL.c ****         }
1111:Generated_Source\PSoC5/GBCL.c **** 
1112:Generated_Source\PSoC5/GBCL.c ****         /* Add directly to the FIFO */
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 43


1113:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXDATA_REG = txDataByte;
 1280              		.loc 1 1113 0 is_stmt 1
 1281 001a 054A     		ldr	r2, .L80+4
 1282 001c FB79     		ldrb	r3, [r7, #7]
 1283 001e 1370     		strb	r3, [r2]
1114:Generated_Source\PSoC5/GBCL.c **** 
1115:Generated_Source\PSoC5/GBCL.c ****     #endif /* GBCL_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/GBCL.c ****     }
 1284              		.loc 1 1116 0
 1285 0020 00BF     		nop
 1286 0022 0C37     		adds	r7, r7, #12
 1287              		.cfi_def_cfa_offset 4
 1288 0024 BD46     		mov	sp, r7
 1289              		.cfi_def_cfa_register 13
 1290              		@ sp needed
 1291 0026 80BC     		pop	{r7}
 1292              		.cfi_restore 7
 1293              		.cfi_def_cfa_offset 0
 1294 0028 7047     		bx	lr
 1295              	.L81:
 1296 002a 00BF     		.align	2
 1297              	.L80:
 1298 002c 64650040 		.word	1073767780
 1299 0030 44650040 		.word	1073767748
 1300              		.cfi_endproc
 1301              	.LFE19:
 1302              		.size	GBCL_PutChar, .-GBCL_PutChar
 1303              		.section	.text.GBCL_PutString,"ax",%progbits
 1304              		.align	2
 1305              		.global	GBCL_PutString
 1306              		.thumb
 1307              		.thumb_func
 1308              		.type	GBCL_PutString, %function
 1309              	GBCL_PutString:
 1310              	.LFB20:
1117:Generated_Source\PSoC5/GBCL.c **** 
1118:Generated_Source\PSoC5/GBCL.c **** 
1119:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_PutString
1121:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/GBCL.c ****     *
1123:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1124:Generated_Source\PSoC5/GBCL.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/GBCL.c ****     *
1126:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1127:Generated_Source\PSoC5/GBCL.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/GBCL.c ****     *
1129:Generated_Source\PSoC5/GBCL.c ****     * Return:
1130:Generated_Source\PSoC5/GBCL.c ****     *  None.
1131:Generated_Source\PSoC5/GBCL.c ****     *
1132:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1133:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/GBCL.c ****     *     initialized.
1135:Generated_Source\PSoC5/GBCL.c ****     *
1136:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1137:Generated_Source\PSoC5/GBCL.c ****     *  No.
1138:Generated_Source\PSoC5/GBCL.c ****     *
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 44


1139:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1140:Generated_Source\PSoC5/GBCL.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/GBCL.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/GBCL.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/GBCL.c ****     *
1144:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/GBCL.c ****     void GBCL_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/GBCL.c ****     {
 1311              		.loc 1 1146 0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 16
 1314              		@ frame_needed = 1, uses_anonymous_args = 0
 1315 0000 80B5     		push	{r7, lr}
 1316              		.cfi_def_cfa_offset 8
 1317              		.cfi_offset 7, -8
 1318              		.cfi_offset 14, -4
 1319 0002 84B0     		sub	sp, sp, #16
 1320              		.cfi_def_cfa_offset 24
 1321 0004 00AF     		add	r7, sp, #0
 1322              		.cfi_def_cfa_register 7
 1323 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/GBCL.c ****         uint16 bufIndex = 0u;
 1324              		.loc 1 1147 0
 1325 0008 0023     		movs	r3, #0
 1326 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/GBCL.c **** 
1149:Generated_Source\PSoC5/GBCL.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_initVar != 0u)
 1327              		.loc 1 1150 0
 1328 000c 0C4B     		ldr	r3, .L87
 1329 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 0010 002B     		cmp	r3, #0
 1331 0012 10D0     		beq	.L86
1151:Generated_Source\PSoC5/GBCL.c ****         {
1152:Generated_Source\PSoC5/GBCL.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/GBCL.c ****             while(string[bufIndex] != (char8) 0)
 1332              		.loc 1 1153 0
 1333 0014 09E0     		b	.L84
 1334              	.L85:
1154:Generated_Source\PSoC5/GBCL.c ****             {
1155:Generated_Source\PSoC5/GBCL.c ****                 GBCL_PutChar((uint8)string[bufIndex]);
 1335              		.loc 1 1155 0
 1336 0016 FB89     		ldrh	r3, [r7, #14]
 1337 0018 7A68     		ldr	r2, [r7, #4]
 1338 001a 1344     		add	r3, r3, r2
 1339 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1340 001e 1846     		mov	r0, r3
 1341 0020 FFF7FEFF 		bl	GBCL_PutChar
1156:Generated_Source\PSoC5/GBCL.c ****                 bufIndex++;
 1342              		.loc 1 1156 0
 1343 0024 FB89     		ldrh	r3, [r7, #14]
 1344 0026 0133     		adds	r3, r3, #1
 1345 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1346              	.L84:
1153:Generated_Source\PSoC5/GBCL.c ****             {
 1347              		.loc 1 1153 0
 1348 002a FB89     		ldrh	r3, [r7, #14]
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 45


 1349 002c 7A68     		ldr	r2, [r7, #4]
 1350 002e 1344     		add	r3, r3, r2
 1351 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 0032 002B     		cmp	r3, #0
 1353 0034 EFD1     		bne	.L85
 1354              	.L86:
1157:Generated_Source\PSoC5/GBCL.c ****             }
1158:Generated_Source\PSoC5/GBCL.c ****         }
1159:Generated_Source\PSoC5/GBCL.c ****     }
 1355              		.loc 1 1159 0
 1356 0036 00BF     		nop
 1357 0038 1037     		adds	r7, r7, #16
 1358              		.cfi_def_cfa_offset 8
 1359 003a BD46     		mov	sp, r7
 1360              		.cfi_def_cfa_register 13
 1361              		@ sp needed
 1362 003c 80BD     		pop	{r7, pc}
 1363              	.L88:
 1364 003e 00BF     		.align	2
 1365              	.L87:
 1366 0040 00000000 		.word	GBCL_initVar
 1367              		.cfi_endproc
 1368              	.LFE20:
 1369              		.size	GBCL_PutString, .-GBCL_PutString
 1370              		.section	.text.GBCL_PutArray,"ax",%progbits
 1371              		.align	2
 1372              		.global	GBCL_PutArray
 1373              		.thumb
 1374              		.thumb_func
 1375              		.type	GBCL_PutArray, %function
 1376              	GBCL_PutArray:
 1377              	.LFB21:
1160:Generated_Source\PSoC5/GBCL.c **** 
1161:Generated_Source\PSoC5/GBCL.c **** 
1162:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_PutArray
1164:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/GBCL.c ****     *
1166:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1167:Generated_Source\PSoC5/GBCL.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/GBCL.c ****     *  transmission.
1169:Generated_Source\PSoC5/GBCL.c ****     *
1170:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1171:Generated_Source\PSoC5/GBCL.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/GBCL.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/GBCL.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/GBCL.c ****     *
1175:Generated_Source\PSoC5/GBCL.c ****     * Return:
1176:Generated_Source\PSoC5/GBCL.c ****     *  None.
1177:Generated_Source\PSoC5/GBCL.c ****     *
1178:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1179:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/GBCL.c ****     *     initialized.
1181:Generated_Source\PSoC5/GBCL.c ****     *
1182:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1183:Generated_Source\PSoC5/GBCL.c ****     *  No.
1184:Generated_Source\PSoC5/GBCL.c ****     *
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 46


1185:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1186:Generated_Source\PSoC5/GBCL.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/GBCL.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/GBCL.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/GBCL.c ****     *
1190:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/GBCL.c ****     void GBCL_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/GBCL.c ****                                                                     
1193:Generated_Source\PSoC5/GBCL.c ****     {
 1378              		.loc 1 1193 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 16
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382 0000 80B5     		push	{r7, lr}
 1383              		.cfi_def_cfa_offset 8
 1384              		.cfi_offset 7, -8
 1385              		.cfi_offset 14, -4
 1386 0002 84B0     		sub	sp, sp, #16
 1387              		.cfi_def_cfa_offset 24
 1388 0004 00AF     		add	r7, sp, #0
 1389              		.cfi_def_cfa_register 7
 1390 0006 7860     		str	r0, [r7, #4]
 1391 0008 0B46     		mov	r3, r1
 1392 000a FB70     		strb	r3, [r7, #3]
1194:Generated_Source\PSoC5/GBCL.c ****         uint8 bufIndex = 0u;
 1393              		.loc 1 1194 0
 1394 000c 0023     		movs	r3, #0
 1395 000e FB73     		strb	r3, [r7, #15]
1195:Generated_Source\PSoC5/GBCL.c **** 
1196:Generated_Source\PSoC5/GBCL.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_initVar != 0u)
 1396              		.loc 1 1197 0
 1397 0010 0B4B     		ldr	r3, .L94
 1398 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1399 0014 002B     		cmp	r3, #0
 1400 0016 0ED0     		beq	.L93
1198:Generated_Source\PSoC5/GBCL.c ****         {
1199:Generated_Source\PSoC5/GBCL.c ****             while(bufIndex < byteCount)
 1401              		.loc 1 1199 0
 1402 0018 09E0     		b	.L91
 1403              	.L92:
1200:Generated_Source\PSoC5/GBCL.c ****             {
1201:Generated_Source\PSoC5/GBCL.c ****                 GBCL_PutChar(string[bufIndex]);
 1404              		.loc 1 1201 0
 1405 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1406 001c 7A68     		ldr	r2, [r7, #4]
 1407 001e 1344     		add	r3, r3, r2
 1408 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1409 0022 1846     		mov	r0, r3
 1410 0024 FFF7FEFF 		bl	GBCL_PutChar
1202:Generated_Source\PSoC5/GBCL.c ****                 bufIndex++;
 1411              		.loc 1 1202 0
 1412 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1413 002a 0133     		adds	r3, r3, #1
 1414 002c FB73     		strb	r3, [r7, #15]
 1415              	.L91:
1199:Generated_Source\PSoC5/GBCL.c ****             {
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 47


 1416              		.loc 1 1199 0
 1417 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1418 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1419 0032 9A42     		cmp	r2, r3
 1420 0034 F1D3     		bcc	.L92
 1421              	.L93:
1203:Generated_Source\PSoC5/GBCL.c ****             }
1204:Generated_Source\PSoC5/GBCL.c ****         }
1205:Generated_Source\PSoC5/GBCL.c ****     }
 1422              		.loc 1 1205 0
 1423 0036 00BF     		nop
 1424 0038 1037     		adds	r7, r7, #16
 1425              		.cfi_def_cfa_offset 8
 1426 003a BD46     		mov	sp, r7
 1427              		.cfi_def_cfa_register 13
 1428              		@ sp needed
 1429 003c 80BD     		pop	{r7, pc}
 1430              	.L95:
 1431 003e 00BF     		.align	2
 1432              	.L94:
 1433 0040 00000000 		.word	GBCL_initVar
 1434              		.cfi_endproc
 1435              	.LFE21:
 1436              		.size	GBCL_PutArray, .-GBCL_PutArray
 1437              		.section	.text.GBCL_PutCRLF,"ax",%progbits
 1438              		.align	2
 1439              		.global	GBCL_PutCRLF
 1440              		.thumb
 1441              		.thumb_func
 1442              		.type	GBCL_PutCRLF, %function
 1443              	GBCL_PutCRLF:
 1444              	.LFB22:
1206:Generated_Source\PSoC5/GBCL.c **** 
1207:Generated_Source\PSoC5/GBCL.c **** 
1208:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_PutCRLF
1210:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/GBCL.c ****     *
1212:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1213:Generated_Source\PSoC5/GBCL.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/GBCL.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/GBCL.c ****     *
1216:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1217:Generated_Source\PSoC5/GBCL.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/GBCL.c ****     *
1219:Generated_Source\PSoC5/GBCL.c ****     * Return:
1220:Generated_Source\PSoC5/GBCL.c ****     *  None.
1221:Generated_Source\PSoC5/GBCL.c ****     *
1222:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1223:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/GBCL.c ****     *     initialized.
1225:Generated_Source\PSoC5/GBCL.c ****     *
1226:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1227:Generated_Source\PSoC5/GBCL.c ****     *  No.
1228:Generated_Source\PSoC5/GBCL.c ****     *
1229:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/GBCL.c ****     void GBCL_PutCRLF(uint8 txDataByte) 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 48


1231:Generated_Source\PSoC5/GBCL.c ****     {
 1445              		.loc 1 1231 0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 8
 1448              		@ frame_needed = 1, uses_anonymous_args = 0
 1449 0000 80B5     		push	{r7, lr}
 1450              		.cfi_def_cfa_offset 8
 1451              		.cfi_offset 7, -8
 1452              		.cfi_offset 14, -4
 1453 0002 82B0     		sub	sp, sp, #8
 1454              		.cfi_def_cfa_offset 16
 1455 0004 00AF     		add	r7, sp, #0
 1456              		.cfi_def_cfa_register 7
 1457 0006 0346     		mov	r3, r0
 1458 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/GBCL.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_initVar != 0u)
 1459              		.loc 1 1233 0
 1460 000a 094B     		ldr	r3, .L99
 1461 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 000e 002B     		cmp	r3, #0
 1463 0010 09D0     		beq	.L98
1234:Generated_Source\PSoC5/GBCL.c ****         {
1235:Generated_Source\PSoC5/GBCL.c ****             GBCL_PutChar(txDataByte);
 1464              		.loc 1 1235 0
 1465 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1466 0014 1846     		mov	r0, r3
 1467 0016 FFF7FEFF 		bl	GBCL_PutChar
1236:Generated_Source\PSoC5/GBCL.c ****             GBCL_PutChar(0x0Du);
 1468              		.loc 1 1236 0
 1469 001a 0D20     		movs	r0, #13
 1470 001c FFF7FEFF 		bl	GBCL_PutChar
1237:Generated_Source\PSoC5/GBCL.c ****             GBCL_PutChar(0x0Au);
 1471              		.loc 1 1237 0
 1472 0020 0A20     		movs	r0, #10
 1473 0022 FFF7FEFF 		bl	GBCL_PutChar
 1474              	.L98:
1238:Generated_Source\PSoC5/GBCL.c ****         }
1239:Generated_Source\PSoC5/GBCL.c ****     }
 1475              		.loc 1 1239 0
 1476 0026 00BF     		nop
 1477 0028 0837     		adds	r7, r7, #8
 1478              		.cfi_def_cfa_offset 8
 1479 002a BD46     		mov	sp, r7
 1480              		.cfi_def_cfa_register 13
 1481              		@ sp needed
 1482 002c 80BD     		pop	{r7, pc}
 1483              	.L100:
 1484 002e 00BF     		.align	2
 1485              	.L99:
 1486 0030 00000000 		.word	GBCL_initVar
 1487              		.cfi_endproc
 1488              	.LFE22:
 1489              		.size	GBCL_PutCRLF, .-GBCL_PutCRLF
 1490              		.section	.text.GBCL_GetTxBufferSize,"ax",%progbits
 1491              		.align	2
 1492              		.global	GBCL_GetTxBufferSize
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 49


 1493              		.thumb
 1494              		.thumb_func
 1495              		.type	GBCL_GetTxBufferSize, %function
 1496              	GBCL_GetTxBufferSize:
 1497              	.LFB23:
1240:Generated_Source\PSoC5/GBCL.c **** 
1241:Generated_Source\PSoC5/GBCL.c **** 
1242:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_GetTxBufferSize
1244:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/GBCL.c ****     *
1246:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1247:Generated_Source\PSoC5/GBCL.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/GBCL.c ****     *  transmitted.
1249:Generated_Source\PSoC5/GBCL.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/GBCL.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/GBCL.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/GBCL.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/GBCL.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/GBCL.c ****     *
1255:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1256:Generated_Source\PSoC5/GBCL.c ****     *  None.
1257:Generated_Source\PSoC5/GBCL.c ****     *
1258:Generated_Source\PSoC5/GBCL.c ****     * Return:
1259:Generated_Source\PSoC5/GBCL.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/GBCL.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/GBCL.c ****     *
1262:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1263:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/GBCL.c ****     *
1266:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1267:Generated_Source\PSoC5/GBCL.c ****     *  No.
1268:Generated_Source\PSoC5/GBCL.c ****     *
1269:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1270:Generated_Source\PSoC5/GBCL.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/GBCL.c ****     *
1272:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/GBCL.c ****                                                             
1275:Generated_Source\PSoC5/GBCL.c ****     {
 1498              		.loc 1 1275 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 8
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502              		@ link register save eliminated.
 1503 0000 80B4     		push	{r7}
 1504              		.cfi_def_cfa_offset 4
 1505              		.cfi_offset 7, -4
 1506 0002 83B0     		sub	sp, sp, #12
 1507              		.cfi_def_cfa_offset 16
 1508 0004 00AF     		add	r7, sp, #0
 1509              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/GBCL.c ****         uint8 size;
1277:Generated_Source\PSoC5/GBCL.c **** 
1278:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/GBCL.c **** 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 50


1280:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableTxInt();
1282:Generated_Source\PSoC5/GBCL.c **** 
1283:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_txBufferRead == GBCL_txBufferWrite)
1284:Generated_Source\PSoC5/GBCL.c ****         {
1285:Generated_Source\PSoC5/GBCL.c ****             size = 0u;
1286:Generated_Source\PSoC5/GBCL.c ****         }
1287:Generated_Source\PSoC5/GBCL.c ****         else if(GBCL_txBufferRead < GBCL_txBufferWrite)
1288:Generated_Source\PSoC5/GBCL.c ****         {
1289:Generated_Source\PSoC5/GBCL.c ****             size = (GBCL_txBufferWrite - GBCL_txBufferRead);
1290:Generated_Source\PSoC5/GBCL.c ****         }
1291:Generated_Source\PSoC5/GBCL.c ****         else
1292:Generated_Source\PSoC5/GBCL.c ****         {
1293:Generated_Source\PSoC5/GBCL.c ****             size = (GBCL_TX_BUFFER_SIZE - GBCL_txBufferRead) +
1294:Generated_Source\PSoC5/GBCL.c ****                     GBCL_txBufferWrite;
1295:Generated_Source\PSoC5/GBCL.c ****         }
1296:Generated_Source\PSoC5/GBCL.c **** 
1297:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableTxInt();
1298:Generated_Source\PSoC5/GBCL.c **** 
1299:Generated_Source\PSoC5/GBCL.c ****     #else
1300:Generated_Source\PSoC5/GBCL.c **** 
1301:Generated_Source\PSoC5/GBCL.c ****         size = GBCL_TXSTATUS_REG;
 1510              		.loc 1 1301 0
 1511 0006 0D4B     		ldr	r3, .L106
 1512 0008 1B78     		ldrb	r3, [r3]
 1513 000a FB71     		strb	r3, [r7, #7]
1302:Generated_Source\PSoC5/GBCL.c **** 
1303:Generated_Source\PSoC5/GBCL.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/GBCL.c ****         if((size & GBCL_TX_STS_FIFO_FULL) != 0u)
 1514              		.loc 1 1304 0
 1515 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1516 000e 03F00403 		and	r3, r3, #4
 1517 0012 002B     		cmp	r3, #0
 1518 0014 02D0     		beq	.L102
1305:Generated_Source\PSoC5/GBCL.c ****         {
1306:Generated_Source\PSoC5/GBCL.c ****             size = GBCL_FIFO_LENGTH;
 1519              		.loc 1 1306 0
 1520 0016 0423     		movs	r3, #4
 1521 0018 FB71     		strb	r3, [r7, #7]
 1522 001a 09E0     		b	.L103
 1523              	.L102:
1307:Generated_Source\PSoC5/GBCL.c ****         }
1308:Generated_Source\PSoC5/GBCL.c ****         else if((size & GBCL_TX_STS_FIFO_EMPTY) != 0u)
 1524              		.loc 1 1308 0
 1525 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1526 001e 03F00203 		and	r3, r3, #2
 1527 0022 002B     		cmp	r3, #0
 1528 0024 02D0     		beq	.L104
1309:Generated_Source\PSoC5/GBCL.c ****         {
1310:Generated_Source\PSoC5/GBCL.c ****             size = 0u;
 1529              		.loc 1 1310 0
 1530 0026 0023     		movs	r3, #0
 1531 0028 FB71     		strb	r3, [r7, #7]
 1532 002a 01E0     		b	.L103
 1533              	.L104:
1311:Generated_Source\PSoC5/GBCL.c ****         }
1312:Generated_Source\PSoC5/GBCL.c ****         else
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 51


1313:Generated_Source\PSoC5/GBCL.c ****         {
1314:Generated_Source\PSoC5/GBCL.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/GBCL.c ****             size = 1u;
 1534              		.loc 1 1315 0
 1535 002c 0123     		movs	r3, #1
 1536 002e FB71     		strb	r3, [r7, #7]
 1537              	.L103:
1316:Generated_Source\PSoC5/GBCL.c ****         }
1317:Generated_Source\PSoC5/GBCL.c **** 
1318:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/GBCL.c **** 
1320:Generated_Source\PSoC5/GBCL.c ****     return(size);
 1538              		.loc 1 1320 0
 1539 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:Generated_Source\PSoC5/GBCL.c ****     }
 1540              		.loc 1 1321 0
 1541 0032 1846     		mov	r0, r3
 1542 0034 0C37     		adds	r7, r7, #12
 1543              		.cfi_def_cfa_offset 4
 1544 0036 BD46     		mov	sp, r7
 1545              		.cfi_def_cfa_register 13
 1546              		@ sp needed
 1547 0038 80BC     		pop	{r7}
 1548              		.cfi_restore 7
 1549              		.cfi_def_cfa_offset 0
 1550 003a 7047     		bx	lr
 1551              	.L107:
 1552              		.align	2
 1553              	.L106:
 1554 003c 64650040 		.word	1073767780
 1555              		.cfi_endproc
 1556              	.LFE23:
 1557              		.size	GBCL_GetTxBufferSize, .-GBCL_GetTxBufferSize
 1558              		.section	.text.GBCL_ClearTxBuffer,"ax",%progbits
 1559              		.align	2
 1560              		.global	GBCL_ClearTxBuffer
 1561              		.thumb
 1562              		.thumb_func
 1563              		.type	GBCL_ClearTxBuffer, %function
 1564              	GBCL_ClearTxBuffer:
 1565              	.LFB24:
1322:Generated_Source\PSoC5/GBCL.c **** 
1323:Generated_Source\PSoC5/GBCL.c **** 
1324:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_ClearTxBuffer
1326:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/GBCL.c ****     *
1328:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1329:Generated_Source\PSoC5/GBCL.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/GBCL.c ****     *
1331:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1332:Generated_Source\PSoC5/GBCL.c ****     *  None.
1333:Generated_Source\PSoC5/GBCL.c ****     *
1334:Generated_Source\PSoC5/GBCL.c ****     * Return:
1335:Generated_Source\PSoC5/GBCL.c ****     *  None.
1336:Generated_Source\PSoC5/GBCL.c ****     *
1337:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 52


1338:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/GBCL.c ****     *
1341:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1342:Generated_Source\PSoC5/GBCL.c ****     *  No.
1343:Generated_Source\PSoC5/GBCL.c ****     *
1344:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1345:Generated_Source\PSoC5/GBCL.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/GBCL.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/GBCL.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/GBCL.c ****     *
1349:Generated_Source\PSoC5/GBCL.c ****     * Side Effects:
1350:Generated_Source\PSoC5/GBCL.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/GBCL.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/GBCL.c ****     *
1353:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/GBCL.c ****     void GBCL_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/GBCL.c ****     {
 1566              		.loc 1 1355 0
 1567              		.cfi_startproc
 1568              		@ args = 0, pretend = 0, frame = 8
 1569              		@ frame_needed = 1, uses_anonymous_args = 0
 1570 0000 80B5     		push	{r7, lr}
 1571              		.cfi_def_cfa_offset 8
 1572              		.cfi_offset 7, -8
 1573              		.cfi_offset 14, -4
 1574 0002 82B0     		sub	sp, sp, #8
 1575              		.cfi_def_cfa_offset 16
 1576 0004 00AF     		add	r7, sp, #0
 1577              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC5/GBCL.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/GBCL.c **** 
1358:Generated_Source\PSoC5/GBCL.c ****         enableInterrupts = CyEnterCriticalSection();
 1578              		.loc 1 1358 0
 1579 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1580 000a 0346     		mov	r3, r0
 1581 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/GBCL.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXDATA_AUX_CTL_REG |= (uint8)  GBCL_TX_FIFO_CLR;
 1582              		.loc 1 1360 0
 1583 000e 0C4A     		ldr	r2, .L109
 1584 0010 0B4B     		ldr	r3, .L109
 1585 0012 1B78     		ldrb	r3, [r3]
 1586 0014 DBB2     		uxtb	r3, r3
 1587 0016 43F00103 		orr	r3, r3, #1
 1588 001a DBB2     		uxtb	r3, r3
 1589 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXDATA_AUX_CTL_REG &= (uint8) ~GBCL_TX_FIFO_CLR;
 1590              		.loc 1 1361 0
 1591 001e 084A     		ldr	r2, .L109
 1592 0020 074B     		ldr	r3, .L109
 1593 0022 1B78     		ldrb	r3, [r3]
 1594 0024 DBB2     		uxtb	r3, r3
 1595 0026 23F00103 		bic	r3, r3, #1
 1596 002a DBB2     		uxtb	r3, r3
 1597 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/GBCL.c ****         CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 53


 1598              		.loc 1 1362 0
 1599 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1600 0030 1846     		mov	r0, r3
 1601 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/GBCL.c **** 
1364:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/GBCL.c **** 
1366:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableTxInt();
1368:Generated_Source\PSoC5/GBCL.c **** 
1369:Generated_Source\PSoC5/GBCL.c ****         GBCL_txBufferRead = 0u;
1370:Generated_Source\PSoC5/GBCL.c ****         GBCL_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/GBCL.c **** 
1372:Generated_Source\PSoC5/GBCL.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableTxInt();
1374:Generated_Source\PSoC5/GBCL.c **** 
1375:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/GBCL.c ****     }
 1602              		.loc 1 1376 0
 1603 0036 00BF     		nop
 1604 0038 0837     		adds	r7, r7, #8
 1605              		.cfi_def_cfa_offset 8
 1606 003a BD46     		mov	sp, r7
 1607              		.cfi_def_cfa_register 13
 1608              		@ sp needed
 1609 003c 80BD     		pop	{r7, pc}
 1610              	.L110:
 1611 003e 00BF     		.align	2
 1612              	.L109:
 1613 0040 94650040 		.word	1073767828
 1614              		.cfi_endproc
 1615              	.LFE24:
 1616              		.size	GBCL_ClearTxBuffer, .-GBCL_ClearTxBuffer
 1617              		.section	.text.GBCL_SendBreak,"ax",%progbits
 1618              		.align	2
 1619              		.global	GBCL_SendBreak
 1620              		.thumb
 1621              		.thumb_func
 1622              		.type	GBCL_SendBreak, %function
 1623              	GBCL_SendBreak:
 1624              	.LFB25:
1377:Generated_Source\PSoC5/GBCL.c **** 
1378:Generated_Source\PSoC5/GBCL.c **** 
1379:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SendBreak
1381:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/GBCL.c ****     *
1383:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1384:Generated_Source\PSoC5/GBCL.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/GBCL.c ****     *
1386:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1387:Generated_Source\PSoC5/GBCL.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/GBCL.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/GBCL.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_REINIT - Reinitialize registers to normal transmission mode
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 54


1393:Generated_Source\PSoC5/GBCL.c ****     *       then return.
1394:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_SEND_BREAK and GBCL_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/GBCL.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/GBCL.c ****     *
1398:Generated_Source\PSoC5/GBCL.c ****     * Return:
1399:Generated_Source\PSoC5/GBCL.c ****     *  None.
1400:Generated_Source\PSoC5/GBCL.c ****     *
1401:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1402:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/GBCL.c ****     *     initialized.
1404:Generated_Source\PSoC5/GBCL.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/GBCL.c ****     *
1406:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1407:Generated_Source\PSoC5/GBCL.c ****     *  No.
1408:Generated_Source\PSoC5/GBCL.c ****     *
1409:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1410:Generated_Source\PSoC5/GBCL.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/GBCL.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/GBCL.c ****     *  operation.
1413:Generated_Source\PSoC5/GBCL.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/GBCL.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/GBCL.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/GBCL.c ****     *     complete.
1417:Generated_Source\PSoC5/GBCL.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/GBCL.c ****     *     operation
1419:Generated_Source\PSoC5/GBCL.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/GBCL.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/GBCL.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/GBCL.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/GBCL.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/GBCL.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/GBCL.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/GBCL.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/GBCL.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/GBCL.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/GBCL.c ****     *     When interrupt appear with GBCL_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/GBCL.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/GBCL.c ****     *
1432:Generated_Source\PSoC5/GBCL.c ****     * Side Effects:
1433:Generated_Source\PSoC5/GBCL.c ****     *  The GBCL_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/GBCL.c ****     *  break signal.
1435:Generated_Source\PSoC5/GBCL.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/GBCL.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/GBCL.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/GBCL.c ****     *
1439:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/GBCL.c ****     {
 1625              		.loc 1 1441 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 16
 1628              		@ frame_needed = 1, uses_anonymous_args = 0
 1629 0000 80B5     		push	{r7, lr}
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 7, -8
 1632              		.cfi_offset 14, -4
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 55


 1633 0002 84B0     		sub	sp, sp, #16
 1634              		.cfi_def_cfa_offset 24
 1635 0004 00AF     		add	r7, sp, #0
 1636              		.cfi_def_cfa_register 7
 1637 0006 0346     		mov	r3, r0
 1638 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/GBCL.c **** 
1443:Generated_Source\PSoC5/GBCL.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_initVar != 0u)
 1639              		.loc 1 1444 0
 1640 000a 284B     		ldr	r3, .L120
 1641 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1642 000e 002B     		cmp	r3, #0
 1643 0010 47D0     		beq	.L119
 1644              	.LBB2:
1445:Generated_Source\PSoC5/GBCL.c ****         {
1446:Generated_Source\PSoC5/GBCL.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/GBCL.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/GBCL.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/GBCL.c **** 
1450:Generated_Source\PSoC5/GBCL.c ****         #if(GBCL_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/GBCL.c **** 
1452:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_SEND_BREAK) ||
1453:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/GBCL.c ****             {
1455:Generated_Source\PSoC5/GBCL.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/GBCL.c ****                 GBCL_WriteControlRegister(GBCL_ReadControlRegister() |
1457:Generated_Source\PSoC5/GBCL.c ****                                                       GBCL_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/GBCL.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/GBCL.c ****                 GBCL_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/GBCL.c **** 
1461:Generated_Source\PSoC5/GBCL.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/GBCL.c ****                 {
1463:Generated_Source\PSoC5/GBCL.c ****                     tmpStat = GBCL_TXSTATUS_REG;
1464:Generated_Source\PSoC5/GBCL.c ****                 }
1465:Generated_Source\PSoC5/GBCL.c ****                 while((tmpStat & GBCL_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/GBCL.c ****             }
1467:Generated_Source\PSoC5/GBCL.c **** 
1468:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/GBCL.c ****             {
1471:Generated_Source\PSoC5/GBCL.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/GBCL.c ****                 {
1473:Generated_Source\PSoC5/GBCL.c ****                     tmpStat = GBCL_TXSTATUS_REG;
1474:Generated_Source\PSoC5/GBCL.c ****                 }
1475:Generated_Source\PSoC5/GBCL.c ****                 while(((uint8)~tmpStat & GBCL_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/GBCL.c ****             }
1477:Generated_Source\PSoC5/GBCL.c **** 
1478:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_REINIT) ||
1480:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/GBCL.c ****             {
1482:Generated_Source\PSoC5/GBCL.c ****                 GBCL_WriteControlRegister(GBCL_ReadControlRegister() &
1483:Generated_Source\PSoC5/GBCL.c ****                                               (uint8)~GBCL_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/GBCL.c ****             }
1485:Generated_Source\PSoC5/GBCL.c **** 
1486:Generated_Source\PSoC5/GBCL.c ****         #else /* GBCL_HD_ENABLED Full Duplex mode */
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 56


1487:Generated_Source\PSoC5/GBCL.c **** 
1488:Generated_Source\PSoC5/GBCL.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/GBCL.c **** 
1490:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_SEND_BREAK) ||
 1645              		.loc 1 1490 0
 1646 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1647 0014 002B     		cmp	r3, #0
 1648 0016 02D0     		beq	.L113
 1649              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1650 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1651 001a 032B     		cmp	r3, #3
 1652 001c 1BD1     		bne	.L114
 1653              	.L113:
1491:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/GBCL.c ****             {
1493:Generated_Source\PSoC5/GBCL.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/GBCL.c ****                 #if( (GBCL_PARITY_TYPE != GBCL__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/GBCL.c ****                                     (GBCL_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/GBCL.c ****                     GBCL_WriteControlRegister(GBCL_ReadControlRegister() |
 1654              		.loc 1 1496 0 is_stmt 1
 1655 001e FFF7FEFF 		bl	GBCL_ReadControlRegister
 1656 0022 0346     		mov	r3, r0
 1657 0024 43F00203 		orr	r3, r3, #2
 1658 0028 DBB2     		uxtb	r3, r3
 1659 002a 1846     		mov	r0, r3
 1660 002c FFF7FEFF 		bl	GBCL_WriteControlRegister
1497:Generated_Source\PSoC5/GBCL.c ****                                                           GBCL_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/GBCL.c ****                 #endif /* End GBCL_PARITY_TYPE != GBCL__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/GBCL.c **** 
1500:Generated_Source\PSoC5/GBCL.c ****                 #if(GBCL_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/GBCL.c ****                     txPeriod = GBCL_TXBITCLKTX_COMPLETE_REG;
 1661              		.loc 1 1501 0
 1662 0030 1F4B     		ldr	r3, .L120+4
 1663 0032 1B78     		ldrb	r3, [r3]
 1664 0034 DAB2     		uxtb	r2, r3
 1665 0036 1F4B     		ldr	r3, .L120+8
 1666 0038 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC5/GBCL.c ****                     GBCL_TXBITCLKTX_COMPLETE_REG = GBCL_TXBITCTR_BREAKBITS;
 1667              		.loc 1 1502 0
 1668 003a 1D4B     		ldr	r3, .L120+4
 1669 003c 6722     		movs	r2, #103
 1670 003e 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/GBCL.c ****                 #else
1504:Generated_Source\PSoC5/GBCL.c ****                     txPeriod = GBCL_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/GBCL.c ****                     GBCL_TXBITCTR_PERIOD_REG = GBCL_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/GBCL.c ****                 #endif /* End GBCL_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/GBCL.c **** 
1508:Generated_Source\PSoC5/GBCL.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/GBCL.c ****                 GBCL_TXDATA_REG = 0u;
 1671              		.loc 1 1509 0
 1672 0040 1D4B     		ldr	r3, .L120+12
 1673 0042 0022     		movs	r2, #0
 1674 0044 1A70     		strb	r2, [r3]
 1675              	.L115:
1510:Generated_Source\PSoC5/GBCL.c **** 
1511:Generated_Source\PSoC5/GBCL.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/GBCL.c ****                 {
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 57


1513:Generated_Source\PSoC5/GBCL.c ****                     tmpStat = GBCL_TXSTATUS_REG;
 1676              		.loc 1 1513 0 discriminator 1
 1677 0046 1D4B     		ldr	r3, .L120+16
 1678 0048 1B78     		ldrb	r3, [r3]
 1679 004a FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/GBCL.c ****                 }
1515:Generated_Source\PSoC5/GBCL.c ****                 while((tmpStat & GBCL_TX_STS_FIFO_EMPTY) != 0u);
 1680              		.loc 1 1515 0 discriminator 1
 1681 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1682 004e 03F00203 		and	r3, r3, #2
 1683 0052 002B     		cmp	r3, #0
 1684 0054 F7D1     		bne	.L115
 1685              	.L114:
1516:Generated_Source\PSoC5/GBCL.c ****             }
1517:Generated_Source\PSoC5/GBCL.c **** 
1518:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_WAIT_FOR_COMPLETE_REINIT) ||
 1686              		.loc 1 1518 0
 1687 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1688 0058 012B     		cmp	r3, #1
 1689 005a 02D0     		beq	.L116
 1690              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1691 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1692 005e 032B     		cmp	r3, #3
 1693 0060 09D1     		bne	.L117
 1694              	.L116:
1519:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/GBCL.c ****             {
1521:Generated_Source\PSoC5/GBCL.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/GBCL.c ****                 {
1523:Generated_Source\PSoC5/GBCL.c ****                     tmpStat = GBCL_TXSTATUS_REG;
 1695              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1696 0062 164B     		ldr	r3, .L120+16
 1697 0064 1B78     		ldrb	r3, [r3]
 1698 0066 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/GBCL.c ****                 }
1525:Generated_Source\PSoC5/GBCL.c ****                 while(((uint8)~tmpStat & GBCL_TX_STS_COMPLETE) != 0u);
 1699              		.loc 1 1525 0 discriminator 1
 1700 0068 FB7B     		ldrb	r3, [r7, #15]
 1701 006a DB43     		mvns	r3, r3
 1702 006c DBB2     		uxtb	r3, r3
 1703 006e 03F00103 		and	r3, r3, #1
 1704 0072 002B     		cmp	r3, #0
 1705 0074 F5D1     		bne	.L116
 1706              	.L117:
1526:Generated_Source\PSoC5/GBCL.c ****             }
1527:Generated_Source\PSoC5/GBCL.c **** 
1528:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_WAIT_FOR_COMPLETE_REINIT) ||
 1707              		.loc 1 1528 0
 1708 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1709 0078 012B     		cmp	r3, #1
 1710 007a 05D0     		beq	.L118
 1711              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1712 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1713 007e 022B     		cmp	r3, #2
 1714 0080 02D0     		beq	.L118
1529:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_REINIT) ||
 1715              		.loc 1 1529 0 is_stmt 1
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 58


 1716 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1717 0084 032B     		cmp	r3, #3
 1718 0086 0CD1     		bne	.L119
 1719              	.L118:
1530:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/GBCL.c ****             {
1532:Generated_Source\PSoC5/GBCL.c **** 
1533:Generated_Source\PSoC5/GBCL.c ****             #if(GBCL_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/GBCL.c ****                 GBCL_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1720              		.loc 1 1534 0
 1721 0088 094B     		ldr	r3, .L120+4
 1722 008a 0A4A     		ldr	r2, .L120+8
 1723 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1724 008e 1A70     		strb	r2, [r3]
1535:Generated_Source\PSoC5/GBCL.c ****             #else
1536:Generated_Source\PSoC5/GBCL.c ****                 GBCL_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/GBCL.c ****             #endif /* End GBCL_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/GBCL.c **** 
1539:Generated_Source\PSoC5/GBCL.c ****             #if( (GBCL_PARITY_TYPE != GBCL__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/GBCL.c ****                  (GBCL_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/GBCL.c ****                 GBCL_WriteControlRegister(GBCL_ReadControlRegister() &
 1725              		.loc 1 1541 0
 1726 0090 FFF7FEFF 		bl	GBCL_ReadControlRegister
 1727 0094 0346     		mov	r3, r0
 1728 0096 23F00203 		bic	r3, r3, #2
 1729 009a DBB2     		uxtb	r3, r3
 1730 009c 1846     		mov	r0, r3
 1731 009e FFF7FEFF 		bl	GBCL_WriteControlRegister
 1732              	.L119:
 1733              	.LBE2:
1542:Generated_Source\PSoC5/GBCL.c ****                                                       (uint8) ~GBCL_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/GBCL.c ****             #endif /* End GBCL_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/GBCL.c ****             }
1545:Generated_Source\PSoC5/GBCL.c ****         #endif    /* End GBCL_HD_ENABLED */
1546:Generated_Source\PSoC5/GBCL.c ****         }
1547:Generated_Source\PSoC5/GBCL.c ****     }
 1734              		.loc 1 1547 0
 1735 00a2 00BF     		nop
 1736 00a4 1037     		adds	r7, r7, #16
 1737              		.cfi_def_cfa_offset 8
 1738 00a6 BD46     		mov	sp, r7
 1739              		.cfi_def_cfa_register 13
 1740              		@ sp needed
 1741 00a8 80BD     		pop	{r7, pc}
 1742              	.L121:
 1743 00aa 00BF     		.align	2
 1744              	.L120:
 1745 00ac 00000000 		.word	GBCL_initVar
 1746 00b0 35650040 		.word	1073767733
 1747 00b4 06000000 		.word	txPeriod.5118
 1748 00b8 44650040 		.word	1073767748
 1749 00bc 64650040 		.word	1073767780
 1750              		.cfi_endproc
 1751              	.LFE25:
 1752              		.size	GBCL_SendBreak, .-GBCL_SendBreak
 1753              		.section	.text.GBCL_SetTxAddressMode,"ax",%progbits
 1754              		.align	2
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 59


 1755              		.global	GBCL_SetTxAddressMode
 1756              		.thumb
 1757              		.thumb_func
 1758              		.type	GBCL_SetTxAddressMode, %function
 1759              	GBCL_SetTxAddressMode:
 1760              	.LFB26:
1548:Generated_Source\PSoC5/GBCL.c **** 
1549:Generated_Source\PSoC5/GBCL.c **** 
1550:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetTxAddressMode
1552:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/GBCL.c ****     *
1554:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1555:Generated_Source\PSoC5/GBCL.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/GBCL.c ****     *
1557:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1558:Generated_Source\PSoC5/GBCL.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/GBCL.c ****     *       GBCL_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/GBCL.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/GBCL.c ****     *       GBCL_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/GBCL.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/GBCL.c ****     *
1564:Generated_Source\PSoC5/GBCL.c ****     * Return:
1565:Generated_Source\PSoC5/GBCL.c ****     *  None.
1566:Generated_Source\PSoC5/GBCL.c ****     *
1567:Generated_Source\PSoC5/GBCL.c ****     * Side Effects:
1568:Generated_Source\PSoC5/GBCL.c ****     *  This function sets and clears GBCL_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/GBCL.c ****     *  register.
1570:Generated_Source\PSoC5/GBCL.c ****     *
1571:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/GBCL.c ****     {
 1761              		.loc 1 1573 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 8
 1764              		@ frame_needed = 1, uses_anonymous_args = 0
 1765              		@ link register save eliminated.
 1766 0000 80B4     		push	{r7}
 1767              		.cfi_def_cfa_offset 4
 1768              		.cfi_offset 7, -4
 1769 0002 83B0     		sub	sp, sp, #12
 1770              		.cfi_def_cfa_offset 16
 1771 0004 00AF     		add	r7, sp, #0
 1772              		.cfi_def_cfa_register 7
 1773 0006 0346     		mov	r3, r0
 1774 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/GBCL.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/GBCL.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/GBCL.c ****         {
1577:Generated_Source\PSoC5/GBCL.c ****         #if( GBCL_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/GBCL.c ****             GBCL_WriteControlRegister(GBCL_ReadControlRegister() |
1579:Generated_Source\PSoC5/GBCL.c ****                                                   GBCL_CTRL_MARK);
1580:Generated_Source\PSoC5/GBCL.c ****         #endif /* End GBCL_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/GBCL.c ****         }
1582:Generated_Source\PSoC5/GBCL.c ****         else
1583:Generated_Source\PSoC5/GBCL.c ****         {
1584:Generated_Source\PSoC5/GBCL.c ****         #if( GBCL_CONTROL_REG_REMOVED == 0u )
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 60


1585:Generated_Source\PSoC5/GBCL.c ****             GBCL_WriteControlRegister(GBCL_ReadControlRegister() &
1586:Generated_Source\PSoC5/GBCL.c ****                                                   (uint8) ~GBCL_CTRL_MARK);
1587:Generated_Source\PSoC5/GBCL.c ****         #endif /* End GBCL_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/GBCL.c ****         }
1589:Generated_Source\PSoC5/GBCL.c ****     }
 1775              		.loc 1 1589 0
 1776 000a 00BF     		nop
 1777 000c 0C37     		adds	r7, r7, #12
 1778              		.cfi_def_cfa_offset 4
 1779 000e BD46     		mov	sp, r7
 1780              		.cfi_def_cfa_register 13
 1781              		@ sp needed
 1782 0010 80BC     		pop	{r7}
 1783              		.cfi_restore 7
 1784              		.cfi_def_cfa_offset 0
 1785 0012 7047     		bx	lr
 1786              		.cfi_endproc
 1787              	.LFE26:
 1788              		.size	GBCL_SetTxAddressMode, .-GBCL_SetTxAddressMode
 1789              		.bss
 1790              	txPeriod.5118:
 1791 0006 00       		.space	1
 1792              		.text
 1793              	.Letext0:
 1794              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1795              		.section	.debug_info,"",%progbits
 1796              	.Ldebug_info0:
 1797 0000 EE050000 		.4byte	0x5ee
 1798 0004 0400     		.2byte	0x4
 1799 0006 00000000 		.4byte	.Ldebug_abbrev0
 1800 000a 04       		.byte	0x4
 1801 000b 01       		.uleb128 0x1
 1802 000c 3C000000 		.4byte	.LASF73
 1803 0010 0C       		.byte	0xc
 1804 0011 07010000 		.4byte	.LASF74
 1805 0015 6F030000 		.4byte	.LASF75
 1806 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1807 001d 00000000 		.4byte	0
 1808 0021 00000000 		.4byte	.Ldebug_line0
 1809 0025 02       		.uleb128 0x2
 1810 0026 01       		.byte	0x1
 1811 0027 06       		.byte	0x6
 1812 0028 33010000 		.4byte	.LASF0
 1813 002c 02       		.uleb128 0x2
 1814 002d 01       		.byte	0x1
 1815 002e 08       		.byte	0x8
 1816 002f A9030000 		.4byte	.LASF1
 1817 0033 02       		.uleb128 0x2
 1818 0034 02       		.byte	0x2
 1819 0035 05       		.byte	0x5
 1820 0036 B7030000 		.4byte	.LASF2
 1821 003a 02       		.uleb128 0x2
 1822 003b 02       		.byte	0x2
 1823 003c 07       		.byte	0x7
 1824 003d 2D020000 		.4byte	.LASF3
 1825 0041 02       		.uleb128 0x2
 1826 0042 04       		.byte	0x4
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 61


 1827 0043 05       		.byte	0x5
 1828 0044 5B010000 		.4byte	.LASF4
 1829 0048 02       		.uleb128 0x2
 1830 0049 04       		.byte	0x4
 1831 004a 07       		.byte	0x7
 1832 004b 04020000 		.4byte	.LASF5
 1833 004f 02       		.uleb128 0x2
 1834 0050 08       		.byte	0x8
 1835 0051 05       		.byte	0x5
 1836 0052 25010000 		.4byte	.LASF6
 1837 0056 02       		.uleb128 0x2
 1838 0057 08       		.byte	0x8
 1839 0058 07       		.byte	0x7
 1840 0059 F0000000 		.4byte	.LASF7
 1841 005d 03       		.uleb128 0x3
 1842 005e 04       		.byte	0x4
 1843 005f 05       		.byte	0x5
 1844 0060 696E7400 		.ascii	"int\000"
 1845 0064 02       		.uleb128 0x2
 1846 0065 04       		.byte	0x4
 1847 0066 07       		.byte	0x7
 1848 0067 E8010000 		.4byte	.LASF8
 1849 006b 04       		.uleb128 0x4
 1850 006c 64010000 		.4byte	.LASF9
 1851 0070 02       		.byte	0x2
 1852 0071 E401     		.2byte	0x1e4
 1853 0073 2C000000 		.4byte	0x2c
 1854 0077 04       		.uleb128 0x4
 1855 0078 12000000 		.4byte	.LASF10
 1856 007c 02       		.byte	0x2
 1857 007d E501     		.2byte	0x1e5
 1858 007f 3A000000 		.4byte	0x3a
 1859 0083 04       		.uleb128 0x4
 1860 0084 8C010000 		.4byte	.LASF11
 1861 0088 02       		.byte	0x2
 1862 0089 E601     		.2byte	0x1e6
 1863 008b 48000000 		.4byte	0x48
 1864 008f 02       		.uleb128 0x2
 1865 0090 04       		.byte	0x4
 1866 0091 04       		.byte	0x4
 1867 0092 3F030000 		.4byte	.LASF12
 1868 0096 02       		.uleb128 0x2
 1869 0097 08       		.byte	0x8
 1870 0098 04       		.byte	0x4
 1871 0099 79010000 		.4byte	.LASF13
 1872 009d 04       		.uleb128 0x4
 1873 009e 20040000 		.4byte	.LASF14
 1874 00a2 02       		.byte	0x2
 1875 00a3 F501     		.2byte	0x1f5
 1876 00a5 A9000000 		.4byte	0xa9
 1877 00a9 02       		.uleb128 0x2
 1878 00aa 01       		.byte	0x1
 1879 00ab 08       		.byte	0x8
 1880 00ac F7030000 		.4byte	.LASF15
 1881 00b0 04       		.uleb128 0x4
 1882 00b1 52030000 		.4byte	.LASF16
 1883 00b5 02       		.byte	0x2
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 62


 1884 00b6 8E02     		.2byte	0x28e
 1885 00b8 BC000000 		.4byte	0xbc
 1886 00bc 05       		.uleb128 0x5
 1887 00bd 6B000000 		.4byte	0x6b
 1888 00c1 04       		.uleb128 0x4
 1889 00c2 A4020000 		.4byte	.LASF17
 1890 00c6 02       		.byte	0x2
 1891 00c7 9002     		.2byte	0x290
 1892 00c9 CD000000 		.4byte	0xcd
 1893 00cd 05       		.uleb128 0x5
 1894 00ce 83000000 		.4byte	0x83
 1895 00d2 02       		.uleb128 0x2
 1896 00d3 08       		.byte	0x8
 1897 00d4 04       		.byte	0x4
 1898 00d5 F4020000 		.4byte	.LASF18
 1899 00d9 02       		.uleb128 0x2
 1900 00da 04       		.byte	0x4
 1901 00db 07       		.byte	0x7
 1902 00dc EB020000 		.4byte	.LASF19
 1903 00e0 06       		.uleb128 0x6
 1904 00e1 C7010000 		.4byte	.LASF20
 1905 00e5 01       		.byte	0x1
 1906 00e6 4C       		.byte	0x4c
 1907 00e7 00000000 		.4byte	.LFB0
 1908 00eb 24000000 		.4byte	.LFE0-.LFB0
 1909 00ef 01       		.uleb128 0x1
 1910 00f0 9C       		.byte	0x9c
 1911 00f1 06       		.uleb128 0x6
 1912 00f2 BE040000 		.4byte	.LASF21
 1913 00f6 01       		.byte	0x1
 1914 00f7 6A       		.byte	0x6a
 1915 00f8 00000000 		.4byte	.LFB1
 1916 00fc 58000000 		.4byte	.LFE1-.LFB1
 1917 0100 01       		.uleb128 0x1
 1918 0101 9C       		.byte	0x9c
 1919 0102 07       		.uleb128 0x7
 1920 0103 40040000 		.4byte	.LASF22
 1921 0107 01       		.byte	0x1
 1922 0108 B7       		.byte	0xb7
 1923 0109 00000000 		.4byte	.LFB2
 1924 010d 64000000 		.4byte	.LFE2-.LFB2
 1925 0111 01       		.uleb128 0x1
 1926 0112 9C       		.byte	0x9c
 1927 0113 26010000 		.4byte	0x126
 1928 0117 08       		.uleb128 0x8
 1929 0118 5C040000 		.4byte	.LASF24
 1930 011c 01       		.byte	0x1
 1931 011d B9       		.byte	0xb9
 1932 011e 6B000000 		.4byte	0x6b
 1933 0122 02       		.uleb128 0x2
 1934 0123 91       		.byte	0x91
 1935 0124 77       		.sleb128 -9
 1936 0125 00       		.byte	0
 1937 0126 07       		.uleb128 0x7
 1938 0127 35030000 		.4byte	.LASF23
 1939 012b 01       		.byte	0x1
 1940 012c F0       		.byte	0xf0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 63


 1941 012d 00000000 		.4byte	.LFB3
 1942 0131 64000000 		.4byte	.LFE3-.LFB3
 1943 0135 01       		.uleb128 0x1
 1944 0136 9C       		.byte	0x9c
 1945 0137 4A010000 		.4byte	0x14a
 1946 013b 08       		.uleb128 0x8
 1947 013c 5C040000 		.4byte	.LASF24
 1948 0140 01       		.byte	0x1
 1949 0141 F2       		.byte	0xf2
 1950 0142 6B000000 		.4byte	0x6b
 1951 0146 02       		.uleb128 0x2
 1952 0147 91       		.byte	0x91
 1953 0148 77       		.sleb128 -9
 1954 0149 00       		.byte	0
 1955 014a 09       		.uleb128 0x9
 1956 014b 6F020000 		.4byte	.LASF50
 1957 014f 01       		.byte	0x1
 1958 0150 2701     		.2byte	0x127
 1959 0152 6B000000 		.4byte	0x6b
 1960 0156 00000000 		.4byte	.LFB4
 1961 015a 0E000000 		.4byte	.LFE4-.LFB4
 1962 015e 01       		.uleb128 0x1
 1963 015f 9C       		.byte	0x9c
 1964 0160 0A       		.uleb128 0xa
 1965 0161 26040000 		.4byte	.LASF25
 1966 0165 01       		.byte	0x1
 1967 0166 3F01     		.2byte	0x13f
 1968 0168 00000000 		.4byte	.LFB5
 1969 016c 14000000 		.4byte	.LFE5-.LFB5
 1970 0170 01       		.uleb128 0x1
 1971 0171 9C       		.byte	0x9c
 1972 0172 86010000 		.4byte	0x186
 1973 0176 0B       		.uleb128 0xb
 1974 0177 93010000 		.4byte	.LASF27
 1975 017b 01       		.byte	0x1
 1976 017c 3F01     		.2byte	0x13f
 1977 017e 6B000000 		.4byte	0x6b
 1978 0182 02       		.uleb128 0x2
 1979 0183 91       		.byte	0x91
 1980 0184 77       		.sleb128 -9
 1981 0185 00       		.byte	0
 1982 0186 0A       		.uleb128 0xa
 1983 0187 57030000 		.4byte	.LASF26
 1984 018b 01       		.byte	0x1
 1985 018c 6701     		.2byte	0x167
 1986 018e 00000000 		.4byte	.LFB6
 1987 0192 20000000 		.4byte	.LFE6-.LFB6
 1988 0196 01       		.uleb128 0x1
 1989 0197 9C       		.byte	0x9c
 1990 0198 AC010000 		.4byte	0x1ac
 1991 019c 0B       		.uleb128 0xb
 1992 019d 68020000 		.4byte	.LASF28
 1993 01a1 01       		.byte	0x1
 1994 01a2 6701     		.2byte	0x167
 1995 01a4 6B000000 		.4byte	0x6b
 1996 01a8 02       		.uleb128 0x2
 1997 01a9 91       		.byte	0x91
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 64


 1998 01aa 77       		.sleb128 -9
 1999 01ab 00       		.byte	0
 2000 01ac 0C       		.uleb128 0xc
 2001 01ad D2030000 		.4byte	.LASF32
 2002 01b1 01       		.byte	0x1
 2003 01b2 8801     		.2byte	0x188
 2004 01b4 6B000000 		.4byte	0x6b
 2005 01b8 00000000 		.4byte	.LFB7
 2006 01bc 90000000 		.4byte	.LFE7-.LFB7
 2007 01c0 01       		.uleb128 0x1
 2008 01c1 9C       		.byte	0x9c
 2009 01c2 F4010000 		.4byte	0x1f4
 2010 01c6 0D       		.uleb128 0xd
 2011 01c7 CB030000 		.4byte	.LASF29
 2012 01cb 01       		.byte	0x1
 2013 01cc 8A01     		.2byte	0x18a
 2014 01ce 6B000000 		.4byte	0x6b
 2015 01d2 02       		.uleb128 0x2
 2016 01d3 91       		.byte	0x91
 2017 01d4 77       		.sleb128 -9
 2018 01d5 0D       		.uleb128 0xd
 2019 01d6 4C040000 		.4byte	.LASF30
 2020 01da 01       		.byte	0x1
 2021 01db 8E01     		.2byte	0x18e
 2022 01dd 6B000000 		.4byte	0x6b
 2023 01e1 02       		.uleb128 0x2
 2024 01e2 91       		.byte	0x91
 2025 01e3 76       		.sleb128 -10
 2026 01e4 0D       		.uleb128 0xd
 2027 01e5 08030000 		.4byte	.LASF31
 2028 01e9 01       		.byte	0x1
 2029 01ea 8F01     		.2byte	0x18f
 2030 01ec 6B000000 		.4byte	0x6b
 2031 01f0 02       		.uleb128 0x2
 2032 01f1 91       		.byte	0x91
 2033 01f2 75       		.sleb128 -11
 2034 01f3 00       		.byte	0
 2035 01f4 0C       		.uleb128 0xc
 2036 01f5 00000000 		.4byte	.LASF33
 2037 01f9 01       		.byte	0x1
 2038 01fa E501     		.2byte	0x1e5
 2039 01fc 6B000000 		.4byte	0x6b
 2040 0200 00000000 		.4byte	.LFB8
 2041 0204 40000000 		.4byte	.LFE8-.LFB8
 2042 0208 01       		.uleb128 0x1
 2043 0209 9C       		.byte	0x9c
 2044 020a 1E020000 		.4byte	0x21e
 2045 020e 0D       		.uleb128 0xd
 2046 020f 6D040000 		.4byte	.LASF34
 2047 0213 01       		.byte	0x1
 2048 0214 E701     		.2byte	0x1e7
 2049 0216 6B000000 		.4byte	0x6b
 2050 021a 02       		.uleb128 0x2
 2051 021b 91       		.byte	0x91
 2052 021c 77       		.sleb128 -9
 2053 021d 00       		.byte	0
 2054 021e 0C       		.uleb128 0xc
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 65


 2055 021f 52020000 		.4byte	.LASF35
 2056 0223 01       		.byte	0x1
 2057 0224 1402     		.2byte	0x214
 2058 0226 6B000000 		.4byte	0x6b
 2059 022a 00000000 		.4byte	.LFB9
 2060 022e B8000000 		.4byte	.LFE9-.LFB9
 2061 0232 01       		.uleb128 0x1
 2062 0233 9C       		.byte	0x9c
 2063 0234 75020000 		.4byte	0x275
 2064 0238 0D       		.uleb128 0xd
 2065 0239 CB030000 		.4byte	.LASF29
 2066 023d 01       		.byte	0x1
 2067 023e 1602     		.2byte	0x216
 2068 0240 6B000000 		.4byte	0x6b
 2069 0244 02       		.uleb128 0x2
 2070 0245 91       		.byte	0x91
 2071 0246 77       		.sleb128 -9
 2072 0247 0D       		.uleb128 0xd
 2073 0248 19030000 		.4byte	.LASF36
 2074 024c 01       		.byte	0x1
 2075 024d 1702     		.2byte	0x217
 2076 024f 6B000000 		.4byte	0x6b
 2077 0253 02       		.uleb128 0x2
 2078 0254 91       		.byte	0x91
 2079 0255 74       		.sleb128 -12
 2080 0256 0D       		.uleb128 0xd
 2081 0257 4C040000 		.4byte	.LASF30
 2082 025b 01       		.byte	0x1
 2083 025c 1A02     		.2byte	0x21a
 2084 025e 6B000000 		.4byte	0x6b
 2085 0262 02       		.uleb128 0x2
 2086 0263 91       		.byte	0x91
 2087 0264 76       		.sleb128 -10
 2088 0265 0D       		.uleb128 0xd
 2089 0266 08030000 		.4byte	.LASF31
 2090 026a 01       		.byte	0x1
 2091 026b 1B02     		.2byte	0x21b
 2092 026d 6B000000 		.4byte	0x6b
 2093 0271 02       		.uleb128 0x2
 2094 0272 91       		.byte	0x91
 2095 0273 75       		.sleb128 -11
 2096 0274 00       		.byte	0
 2097 0275 0E       		.uleb128 0xe
 2098 0276 8C040000 		.4byte	.LASF37
 2099 027a 01       		.byte	0x1
 2100 027b 7A02     		.2byte	0x27a
 2101 027d 77000000 		.4byte	0x77
 2102 0281 00000000 		.4byte	.LFB10
 2103 0285 44000000 		.4byte	.LFE10-.LFB10
 2104 0289 01       		.uleb128 0x1
 2105 028a 9C       		.byte	0x9c
 2106 028b 9F020000 		.4byte	0x29f
 2107 028f 0D       		.uleb128 0xd
 2108 0290 F5010000 		.4byte	.LASF38
 2109 0294 01       		.byte	0x1
 2110 0295 7E02     		.2byte	0x27e
 2111 0297 77000000 		.4byte	0x77
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 66


 2112 029b 02       		.uleb128 0x2
 2113 029c 91       		.byte	0x91
 2114 029d 6E       		.sleb128 -18
 2115 029e 00       		.byte	0
 2116 029f 0C       		.uleb128 0xc
 2117 02a0 E2030000 		.4byte	.LASF39
 2118 02a4 01       		.byte	0x1
 2119 02a5 AB02     		.2byte	0x2ab
 2120 02a7 6B000000 		.4byte	0x6b
 2121 02ab 00000000 		.4byte	.LFB11
 2122 02af 90000000 		.4byte	.LFE11-.LFB11
 2123 02b3 01       		.uleb128 0x1
 2124 02b4 9C       		.byte	0x9c
 2125 02b5 C9020000 		.4byte	0x2c9
 2126 02b9 0D       		.uleb128 0xd
 2127 02ba 28020000 		.4byte	.LASF40
 2128 02be 01       		.byte	0x1
 2129 02bf AE02     		.2byte	0x2ae
 2130 02c1 6B000000 		.4byte	0x6b
 2131 02c5 02       		.uleb128 0x2
 2132 02c6 91       		.byte	0x91
 2133 02c7 77       		.sleb128 -9
 2134 02c8 00       		.byte	0
 2135 02c9 0F       		.uleb128 0xf
 2136 02ca 48010000 		.4byte	.LASF41
 2137 02ce 01       		.byte	0x1
 2138 02cf F502     		.2byte	0x2f5
 2139 02d1 00000000 		.4byte	.LFB12
 2140 02d5 80000000 		.4byte	.LFE12-.LFB12
 2141 02d9 01       		.uleb128 0x1
 2142 02da 9C       		.byte	0x9c
 2143 02db EF020000 		.4byte	0x2ef
 2144 02df 0D       		.uleb128 0xd
 2145 02e0 5C040000 		.4byte	.LASF24
 2146 02e4 01       		.byte	0x1
 2147 02e5 F702     		.2byte	0x2f7
 2148 02e7 6B000000 		.4byte	0x6b
 2149 02eb 02       		.uleb128 0x2
 2150 02ec 91       		.byte	0x91
 2151 02ed 77       		.sleb128 -9
 2152 02ee 00       		.byte	0
 2153 02ef 0A       		.uleb128 0xa
 2154 02f0 0A040000 		.4byte	.LASF42
 2155 02f4 01       		.byte	0x1
 2156 02f5 2D03     		.2byte	0x32d
 2157 02f7 00000000 		.4byte	.LFB13
 2158 02fb 14000000 		.4byte	.LFE13-.LFB13
 2159 02ff 01       		.uleb128 0x1
 2160 0300 9C       		.byte	0x9c
 2161 0301 15030000 		.4byte	0x315
 2162 0305 0B       		.uleb128 0xb
 2163 0306 80010000 		.4byte	.LASF43
 2164 030a 01       		.byte	0x1
 2165 030b 2D03     		.2byte	0x32d
 2166 030d 6B000000 		.4byte	0x6b
 2167 0311 02       		.uleb128 0x2
 2168 0312 91       		.byte	0x91
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 67


 2169 0313 77       		.sleb128 -9
 2170 0314 00       		.byte	0
 2171 0315 0A       		.uleb128 0xa
 2172 0316 CA000000 		.4byte	.LASF44
 2173 031a 01       		.byte	0x1
 2174 031b 5903     		.2byte	0x359
 2175 031d 00000000 		.4byte	.LFB14
 2176 0321 20000000 		.4byte	.LFE14-.LFB14
 2177 0325 01       		.uleb128 0x1
 2178 0326 9C       		.byte	0x9c
 2179 0327 3B030000 		.4byte	0x33b
 2180 032b 0B       		.uleb128 0xb
 2181 032c 00030000 		.4byte	.LASF45
 2182 0330 01       		.byte	0x1
 2183 0331 5903     		.2byte	0x359
 2184 0333 6B000000 		.4byte	0x6b
 2185 0337 02       		.uleb128 0x2
 2186 0338 91       		.byte	0x91
 2187 0339 77       		.sleb128 -9
 2188 033a 00       		.byte	0
 2189 033b 0A       		.uleb128 0xa
 2190 033c DD000000 		.4byte	.LASF46
 2191 0340 01       		.byte	0x1
 2192 0341 6D03     		.2byte	0x36d
 2193 0343 00000000 		.4byte	.LFB15
 2194 0347 20000000 		.4byte	.LFE15-.LFB15
 2195 034b 01       		.uleb128 0x1
 2196 034c 9C       		.byte	0x9c
 2197 034d 61030000 		.4byte	0x361
 2198 0351 0B       		.uleb128 0xb
 2199 0352 00030000 		.4byte	.LASF45
 2200 0356 01       		.byte	0x1
 2201 0357 6D03     		.2byte	0x36d
 2202 0359 6B000000 		.4byte	0x6b
 2203 035d 02       		.uleb128 0x2
 2204 035e 91       		.byte	0x91
 2205 035f 77       		.sleb128 -9
 2206 0360 00       		.byte	0
 2207 0361 0A       		.uleb128 0xa
 2208 0362 A6040000 		.4byte	.LASF47
 2209 0366 01       		.byte	0x1
 2210 0367 8C03     		.2byte	0x38c
 2211 0369 00000000 		.4byte	.LFB16
 2212 036d 20000000 		.4byte	.LFE16-.LFB16
 2213 0371 01       		.uleb128 0x1
 2214 0372 9C       		.byte	0x9c
 2215 0373 87030000 		.4byte	0x387
 2216 0377 0B       		.uleb128 0xb
 2217 0378 68020000 		.4byte	.LASF28
 2218 037c 01       		.byte	0x1
 2219 037d 8C03     		.2byte	0x38c
 2220 037f 6B000000 		.4byte	0x6b
 2221 0383 02       		.uleb128 0x2
 2222 0384 91       		.byte	0x91
 2223 0385 77       		.sleb128 -9
 2224 0386 00       		.byte	0
 2225 0387 0A       		.uleb128 0xa
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 68


 2226 0388 2B000000 		.4byte	.LASF48
 2227 038c 01       		.byte	0x1
 2228 038d AE03     		.2byte	0x3ae
 2229 038f 00000000 		.4byte	.LFB17
 2230 0393 2C000000 		.4byte	.LFE17-.LFB17
 2231 0397 01       		.uleb128 0x1
 2232 0398 9C       		.byte	0x9c
 2233 0399 AD030000 		.4byte	0x3ad
 2234 039d 0B       		.uleb128 0xb
 2235 039e 19000000 		.4byte	.LASF49
 2236 03a2 01       		.byte	0x1
 2237 03a3 AE03     		.2byte	0x3ae
 2238 03a5 6B000000 		.4byte	0x6b
 2239 03a9 02       		.uleb128 0x2
 2240 03aa 91       		.byte	0x91
 2241 03ab 77       		.sleb128 -9
 2242 03ac 00       		.byte	0
 2243 03ad 09       		.uleb128 0x9
 2244 03ae 40020000 		.4byte	.LASF51
 2245 03b2 01       		.byte	0x1
 2246 03b3 EB03     		.2byte	0x3eb
 2247 03b5 6B000000 		.4byte	0x6b
 2248 03b9 00000000 		.4byte	.LFB18
 2249 03bd 18000000 		.4byte	.LFE18-.LFB18
 2250 03c1 01       		.uleb128 0x1
 2251 03c2 9C       		.byte	0x9c
 2252 03c3 0A       		.uleb128 0xa
 2253 03c4 45030000 		.4byte	.LASF52
 2254 03c8 01       		.byte	0x1
 2255 03c9 1104     		.2byte	0x411
 2256 03cb 00000000 		.4byte	.LFB19
 2257 03cf 34000000 		.4byte	.LFE19-.LFB19
 2258 03d3 01       		.uleb128 0x1
 2259 03d4 9C       		.byte	0x9c
 2260 03d5 E9030000 		.4byte	0x3e9
 2261 03d9 0B       		.uleb128 0xb
 2262 03da 19000000 		.4byte	.LASF49
 2263 03de 01       		.byte	0x1
 2264 03df 1104     		.2byte	0x411
 2265 03e1 6B000000 		.4byte	0x6b
 2266 03e5 02       		.uleb128 0x2
 2267 03e6 91       		.byte	0x91
 2268 03e7 77       		.sleb128 -9
 2269 03e8 00       		.byte	0
 2270 03e9 0F       		.uleb128 0xf
 2271 03ea 95020000 		.4byte	.LASF53
 2272 03ee 01       		.byte	0x1
 2273 03ef 7904     		.2byte	0x479
 2274 03f1 00000000 		.4byte	.LFB20
 2275 03f5 44000000 		.4byte	.LFE20-.LFB20
 2276 03f9 01       		.uleb128 0x1
 2277 03fa 9C       		.byte	0x9c
 2278 03fb 1E040000 		.4byte	0x41e
 2279 03ff 0B       		.uleb128 0xb
 2280 0400 24000000 		.4byte	.LASF54
 2281 0404 01       		.byte	0x1
 2282 0405 7904     		.2byte	0x479
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 69


 2283 0407 1E040000 		.4byte	0x41e
 2284 040b 02       		.uleb128 0x2
 2285 040c 91       		.byte	0x91
 2286 040d 6C       		.sleb128 -20
 2287 040e 0D       		.uleb128 0xd
 2288 040f 5F020000 		.4byte	.LASF55
 2289 0413 01       		.byte	0x1
 2290 0414 7B04     		.2byte	0x47b
 2291 0416 77000000 		.4byte	0x77
 2292 041a 02       		.uleb128 0x2
 2293 041b 91       		.byte	0x91
 2294 041c 76       		.sleb128 -10
 2295 041d 00       		.byte	0
 2296 041e 10       		.uleb128 0x10
 2297 041f 04       		.byte	0x4
 2298 0420 24040000 		.4byte	0x424
 2299 0424 11       		.uleb128 0x11
 2300 0425 9D000000 		.4byte	0x9d
 2301 0429 0F       		.uleb128 0xf
 2302 042a FC030000 		.4byte	.LASF56
 2303 042e 01       		.byte	0x1
 2304 042f A704     		.2byte	0x4a7
 2305 0431 00000000 		.4byte	.LFB21
 2306 0435 44000000 		.4byte	.LFE21-.LFB21
 2307 0439 01       		.uleb128 0x1
 2308 043a 9C       		.byte	0x9c
 2309 043b 6D040000 		.4byte	0x46d
 2310 043f 0B       		.uleb128 0xb
 2311 0440 24000000 		.4byte	.LASF54
 2312 0444 01       		.byte	0x1
 2313 0445 A704     		.2byte	0x4a7
 2314 0447 6D040000 		.4byte	0x46d
 2315 044b 02       		.uleb128 0x2
 2316 044c 91       		.byte	0x91
 2317 044d 6C       		.sleb128 -20
 2318 044e 0B       		.uleb128 0xb
 2319 044f C1030000 		.4byte	.LASF57
 2320 0453 01       		.byte	0x1
 2321 0454 A704     		.2byte	0x4a7
 2322 0456 6B000000 		.4byte	0x6b
 2323 045a 02       		.uleb128 0x2
 2324 045b 91       		.byte	0x91
 2325 045c 6B       		.sleb128 -21
 2326 045d 0D       		.uleb128 0xd
 2327 045e 5F020000 		.4byte	.LASF55
 2328 0462 01       		.byte	0x1
 2329 0463 AA04     		.2byte	0x4aa
 2330 0465 6B000000 		.4byte	0x6b
 2331 0469 02       		.uleb128 0x2
 2332 046a 91       		.byte	0x91
 2333 046b 77       		.sleb128 -9
 2334 046c 00       		.byte	0
 2335 046d 10       		.uleb128 0x10
 2336 046e 04       		.byte	0x4
 2337 046f 73040000 		.4byte	0x473
 2338 0473 11       		.uleb128 0x11
 2339 0474 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 70


 2340 0478 0F       		.uleb128 0xf
 2341 0479 99040000 		.4byte	.LASF58
 2342 047d 01       		.byte	0x1
 2343 047e CE04     		.2byte	0x4ce
 2344 0480 00000000 		.4byte	.LFB22
 2345 0484 34000000 		.4byte	.LFE22-.LFB22
 2346 0488 01       		.uleb128 0x1
 2347 0489 9C       		.byte	0x9c
 2348 048a 9E040000 		.4byte	0x49e
 2349 048e 0B       		.uleb128 0xb
 2350 048f 19000000 		.4byte	.LASF49
 2351 0493 01       		.byte	0x1
 2352 0494 CE04     		.2byte	0x4ce
 2353 0496 6B000000 		.4byte	0x6b
 2354 049a 02       		.uleb128 0x2
 2355 049b 91       		.byte	0x91
 2356 049c 77       		.sleb128 -9
 2357 049d 00       		.byte	0
 2358 049e 0C       		.uleb128 0xc
 2359 049f C3020000 		.4byte	.LASF59
 2360 04a3 01       		.byte	0x1
 2361 04a4 F904     		.2byte	0x4f9
 2362 04a6 6B000000 		.4byte	0x6b
 2363 04aa 00000000 		.4byte	.LFB23
 2364 04ae 40000000 		.4byte	.LFE23-.LFB23
 2365 04b2 01       		.uleb128 0x1
 2366 04b3 9C       		.byte	0x9c
 2367 04b4 C8040000 		.4byte	0x4c8
 2368 04b8 0D       		.uleb128 0xd
 2369 04b9 28020000 		.4byte	.LASF40
 2370 04bd 01       		.byte	0x1
 2371 04be FC04     		.2byte	0x4fc
 2372 04c0 6B000000 		.4byte	0x6b
 2373 04c4 02       		.uleb128 0x2
 2374 04c5 91       		.byte	0x91
 2375 04c6 77       		.sleb128 -9
 2376 04c7 00       		.byte	0
 2377 04c8 0F       		.uleb128 0xf
 2378 04c9 22030000 		.4byte	.LASF60
 2379 04cd 01       		.byte	0x1
 2380 04ce 4A05     		.2byte	0x54a
 2381 04d0 00000000 		.4byte	.LFB24
 2382 04d4 44000000 		.4byte	.LFE24-.LFB24
 2383 04d8 01       		.uleb128 0x1
 2384 04d9 9C       		.byte	0x9c
 2385 04da EE040000 		.4byte	0x4ee
 2386 04de 0D       		.uleb128 0xd
 2387 04df 5C040000 		.4byte	.LASF24
 2388 04e3 01       		.byte	0x1
 2389 04e4 4C05     		.2byte	0x54c
 2390 04e6 6B000000 		.4byte	0x6b
 2391 04ea 02       		.uleb128 0x2
 2392 04eb 91       		.byte	0x91
 2393 04ec 77       		.sleb128 -9
 2394 04ed 00       		.byte	0
 2395 04ee 0F       		.uleb128 0xf
 2396 04ef 6A010000 		.4byte	.LASF61
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 71


 2397 04f3 01       		.byte	0x1
 2398 04f4 A005     		.2byte	0x5a0
 2399 04f6 00000000 		.4byte	.LFB25
 2400 04fa C0000000 		.4byte	.LFE25-.LFB25
 2401 04fe 01       		.uleb128 0x1
 2402 04ff 9C       		.byte	0x9c
 2403 0500 3F050000 		.4byte	0x53f
 2404 0504 0B       		.uleb128 0xb
 2405 0505 D2010000 		.4byte	.LASF62
 2406 0509 01       		.byte	0x1
 2407 050a A005     		.2byte	0x5a0
 2408 050c 6B000000 		.4byte	0x6b
 2409 0510 02       		.uleb128 0x2
 2410 0511 91       		.byte	0x91
 2411 0512 6F       		.sleb128 -17
 2412 0513 12       		.uleb128 0x12
 2413 0514 12000000 		.4byte	.LBB2
 2414 0518 90000000 		.4byte	.LBE2-.LBB2
 2415 051c 0D       		.uleb128 0xd
 2416 051d BB020000 		.4byte	.LASF63
 2417 0521 01       		.byte	0x1
 2418 0522 A805     		.2byte	0x5a8
 2419 0524 6B000000 		.4byte	0x6b
 2420 0528 02       		.uleb128 0x2
 2421 0529 91       		.byte	0x91
 2422 052a 77       		.sleb128 -9
 2423 052b 0D       		.uleb128 0xd
 2424 052c 3F010000 		.4byte	.LASF64
 2425 0530 01       		.byte	0x1
 2426 0531 D005     		.2byte	0x5d0
 2427 0533 6B000000 		.4byte	0x6b
 2428 0537 05       		.uleb128 0x5
 2429 0538 03       		.byte	0x3
 2430 0539 06000000 		.4byte	txPeriod.5118
 2431 053d 00       		.byte	0
 2432 053e 00       		.byte	0
 2433 053f 0A       		.uleb128 0xa
 2434 0540 B1010000 		.4byte	.LASF65
 2435 0544 01       		.byte	0x1
 2436 0545 2406     		.2byte	0x624
 2437 0547 00000000 		.4byte	.LFB26
 2438 054b 14000000 		.4byte	.LFE26-.LFB26
 2439 054f 01       		.uleb128 0x1
 2440 0550 9C       		.byte	0x9c
 2441 0551 65050000 		.4byte	0x565
 2442 0555 0B       		.uleb128 0xb
 2443 0556 80010000 		.4byte	.LASF43
 2444 055a 01       		.byte	0x1
 2445 055b 2406     		.2byte	0x624
 2446 055d 6B000000 		.4byte	0x6b
 2447 0561 02       		.uleb128 0x2
 2448 0562 91       		.byte	0x91
 2449 0563 77       		.sleb128 -9
 2450 0564 00       		.byte	0
 2451 0565 13       		.uleb128 0x13
 2452 0566 88020000 		.4byte	.LASF66
 2453 056a 01       		.byte	0x1
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 72


 2454 056b 1B       		.byte	0x1b
 2455 056c 6B000000 		.4byte	0x6b
 2456 0570 05       		.uleb128 0x5
 2457 0571 03       		.byte	0x3
 2458 0572 00000000 		.4byte	GBCL_initVar
 2459 0576 13       		.uleb128 0x13
 2460 0577 AA020000 		.4byte	.LASF67
 2461 057b 01       		.byte	0x1
 2462 057c 24       		.byte	0x24
 2463 057d 6B000000 		.4byte	0x6b
 2464 0581 05       		.uleb128 0x5
 2465 0582 03       		.byte	0x3
 2466 0583 00000000 		.4byte	GBCL_errorStatus
 2467 0587 14       		.uleb128 0x14
 2468 0588 BC000000 		.4byte	0xbc
 2469 058c 97050000 		.4byte	0x597
 2470 0590 15       		.uleb128 0x15
 2471 0591 D9000000 		.4byte	0xd9
 2472 0595 7F       		.byte	0x7f
 2473 0596 00       		.byte	0
 2474 0597 13       		.uleb128 0x13
 2475 0598 DA010000 		.4byte	.LASF68
 2476 059c 01       		.byte	0x1
 2477 059d 25       		.byte	0x25
 2478 059e A8050000 		.4byte	0x5a8
 2479 05a2 05       		.uleb128 0x5
 2480 05a3 03       		.byte	0x3
 2481 05a4 00000000 		.4byte	GBCL_rxBuffer
 2482 05a8 05       		.uleb128 0x5
 2483 05a9 87050000 		.4byte	0x587
 2484 05ad 13       		.uleb128 0x13
 2485 05ae 16020000 		.4byte	.LASF69
 2486 05b2 01       		.byte	0x1
 2487 05b3 26       		.byte	0x26
 2488 05b4 BC000000 		.4byte	0xbc
 2489 05b8 05       		.uleb128 0x5
 2490 05b9 03       		.byte	0x3
 2491 05ba 00000000 		.4byte	GBCL_rxBufferRead
 2492 05be 13       		.uleb128 0x13
 2493 05bf D8020000 		.4byte	.LASF70
 2494 05c3 01       		.byte	0x1
 2495 05c4 27       		.byte	0x27
 2496 05c5 BC000000 		.4byte	0xbc
 2497 05c9 05       		.uleb128 0x5
 2498 05ca 03       		.byte	0x3
 2499 05cb 00000000 		.4byte	GBCL_rxBufferWrite
 2500 05cf 13       		.uleb128 0x13
 2501 05d0 74040000 		.4byte	.LASF71
 2502 05d4 01       		.byte	0x1
 2503 05d5 28       		.byte	0x28
 2504 05d6 BC000000 		.4byte	0xbc
 2505 05da 05       		.uleb128 0x5
 2506 05db 03       		.byte	0x3
 2507 05dc 00000000 		.4byte	GBCL_rxBufferLoopDetect
 2508 05e0 13       		.uleb128 0x13
 2509 05e1 9B010000 		.4byte	.LASF72
 2510 05e5 01       		.byte	0x1
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 73


 2511 05e6 29       		.byte	0x29
 2512 05e7 BC000000 		.4byte	0xbc
 2513 05eb 05       		.uleb128 0x5
 2514 05ec 03       		.byte	0x3
 2515 05ed 00000000 		.4byte	GBCL_rxBufferOverflow
 2516 05f1 00       		.byte	0
 2517              		.section	.debug_abbrev,"",%progbits
 2518              	.Ldebug_abbrev0:
 2519 0000 01       		.uleb128 0x1
 2520 0001 11       		.uleb128 0x11
 2521 0002 01       		.byte	0x1
 2522 0003 25       		.uleb128 0x25
 2523 0004 0E       		.uleb128 0xe
 2524 0005 13       		.uleb128 0x13
 2525 0006 0B       		.uleb128 0xb
 2526 0007 03       		.uleb128 0x3
 2527 0008 0E       		.uleb128 0xe
 2528 0009 1B       		.uleb128 0x1b
 2529 000a 0E       		.uleb128 0xe
 2530 000b 55       		.uleb128 0x55
 2531 000c 17       		.uleb128 0x17
 2532 000d 11       		.uleb128 0x11
 2533 000e 01       		.uleb128 0x1
 2534 000f 10       		.uleb128 0x10
 2535 0010 17       		.uleb128 0x17
 2536 0011 00       		.byte	0
 2537 0012 00       		.byte	0
 2538 0013 02       		.uleb128 0x2
 2539 0014 24       		.uleb128 0x24
 2540 0015 00       		.byte	0
 2541 0016 0B       		.uleb128 0xb
 2542 0017 0B       		.uleb128 0xb
 2543 0018 3E       		.uleb128 0x3e
 2544 0019 0B       		.uleb128 0xb
 2545 001a 03       		.uleb128 0x3
 2546 001b 0E       		.uleb128 0xe
 2547 001c 00       		.byte	0
 2548 001d 00       		.byte	0
 2549 001e 03       		.uleb128 0x3
 2550 001f 24       		.uleb128 0x24
 2551 0020 00       		.byte	0
 2552 0021 0B       		.uleb128 0xb
 2553 0022 0B       		.uleb128 0xb
 2554 0023 3E       		.uleb128 0x3e
 2555 0024 0B       		.uleb128 0xb
 2556 0025 03       		.uleb128 0x3
 2557 0026 08       		.uleb128 0x8
 2558 0027 00       		.byte	0
 2559 0028 00       		.byte	0
 2560 0029 04       		.uleb128 0x4
 2561 002a 16       		.uleb128 0x16
 2562 002b 00       		.byte	0
 2563 002c 03       		.uleb128 0x3
 2564 002d 0E       		.uleb128 0xe
 2565 002e 3A       		.uleb128 0x3a
 2566 002f 0B       		.uleb128 0xb
 2567 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 74


 2568 0031 05       		.uleb128 0x5
 2569 0032 49       		.uleb128 0x49
 2570 0033 13       		.uleb128 0x13
 2571 0034 00       		.byte	0
 2572 0035 00       		.byte	0
 2573 0036 05       		.uleb128 0x5
 2574 0037 35       		.uleb128 0x35
 2575 0038 00       		.byte	0
 2576 0039 49       		.uleb128 0x49
 2577 003a 13       		.uleb128 0x13
 2578 003b 00       		.byte	0
 2579 003c 00       		.byte	0
 2580 003d 06       		.uleb128 0x6
 2581 003e 2E       		.uleb128 0x2e
 2582 003f 00       		.byte	0
 2583 0040 3F       		.uleb128 0x3f
 2584 0041 19       		.uleb128 0x19
 2585 0042 03       		.uleb128 0x3
 2586 0043 0E       		.uleb128 0xe
 2587 0044 3A       		.uleb128 0x3a
 2588 0045 0B       		.uleb128 0xb
 2589 0046 3B       		.uleb128 0x3b
 2590 0047 0B       		.uleb128 0xb
 2591 0048 27       		.uleb128 0x27
 2592 0049 19       		.uleb128 0x19
 2593 004a 11       		.uleb128 0x11
 2594 004b 01       		.uleb128 0x1
 2595 004c 12       		.uleb128 0x12
 2596 004d 06       		.uleb128 0x6
 2597 004e 40       		.uleb128 0x40
 2598 004f 18       		.uleb128 0x18
 2599 0050 9642     		.uleb128 0x2116
 2600 0052 19       		.uleb128 0x19
 2601 0053 00       		.byte	0
 2602 0054 00       		.byte	0
 2603 0055 07       		.uleb128 0x7
 2604 0056 2E       		.uleb128 0x2e
 2605 0057 01       		.byte	0x1
 2606 0058 3F       		.uleb128 0x3f
 2607 0059 19       		.uleb128 0x19
 2608 005a 03       		.uleb128 0x3
 2609 005b 0E       		.uleb128 0xe
 2610 005c 3A       		.uleb128 0x3a
 2611 005d 0B       		.uleb128 0xb
 2612 005e 3B       		.uleb128 0x3b
 2613 005f 0B       		.uleb128 0xb
 2614 0060 27       		.uleb128 0x27
 2615 0061 19       		.uleb128 0x19
 2616 0062 11       		.uleb128 0x11
 2617 0063 01       		.uleb128 0x1
 2618 0064 12       		.uleb128 0x12
 2619 0065 06       		.uleb128 0x6
 2620 0066 40       		.uleb128 0x40
 2621 0067 18       		.uleb128 0x18
 2622 0068 9642     		.uleb128 0x2116
 2623 006a 19       		.uleb128 0x19
 2624 006b 01       		.uleb128 0x1
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 75


 2625 006c 13       		.uleb128 0x13
 2626 006d 00       		.byte	0
 2627 006e 00       		.byte	0
 2628 006f 08       		.uleb128 0x8
 2629 0070 34       		.uleb128 0x34
 2630 0071 00       		.byte	0
 2631 0072 03       		.uleb128 0x3
 2632 0073 0E       		.uleb128 0xe
 2633 0074 3A       		.uleb128 0x3a
 2634 0075 0B       		.uleb128 0xb
 2635 0076 3B       		.uleb128 0x3b
 2636 0077 0B       		.uleb128 0xb
 2637 0078 49       		.uleb128 0x49
 2638 0079 13       		.uleb128 0x13
 2639 007a 02       		.uleb128 0x2
 2640 007b 18       		.uleb128 0x18
 2641 007c 00       		.byte	0
 2642 007d 00       		.byte	0
 2643 007e 09       		.uleb128 0x9
 2644 007f 2E       		.uleb128 0x2e
 2645 0080 00       		.byte	0
 2646 0081 3F       		.uleb128 0x3f
 2647 0082 19       		.uleb128 0x19
 2648 0083 03       		.uleb128 0x3
 2649 0084 0E       		.uleb128 0xe
 2650 0085 3A       		.uleb128 0x3a
 2651 0086 0B       		.uleb128 0xb
 2652 0087 3B       		.uleb128 0x3b
 2653 0088 05       		.uleb128 0x5
 2654 0089 27       		.uleb128 0x27
 2655 008a 19       		.uleb128 0x19
 2656 008b 49       		.uleb128 0x49
 2657 008c 13       		.uleb128 0x13
 2658 008d 11       		.uleb128 0x11
 2659 008e 01       		.uleb128 0x1
 2660 008f 12       		.uleb128 0x12
 2661 0090 06       		.uleb128 0x6
 2662 0091 40       		.uleb128 0x40
 2663 0092 18       		.uleb128 0x18
 2664 0093 9742     		.uleb128 0x2117
 2665 0095 19       		.uleb128 0x19
 2666 0096 00       		.byte	0
 2667 0097 00       		.byte	0
 2668 0098 0A       		.uleb128 0xa
 2669 0099 2E       		.uleb128 0x2e
 2670 009a 01       		.byte	0x1
 2671 009b 3F       		.uleb128 0x3f
 2672 009c 19       		.uleb128 0x19
 2673 009d 03       		.uleb128 0x3
 2674 009e 0E       		.uleb128 0xe
 2675 009f 3A       		.uleb128 0x3a
 2676 00a0 0B       		.uleb128 0xb
 2677 00a1 3B       		.uleb128 0x3b
 2678 00a2 05       		.uleb128 0x5
 2679 00a3 27       		.uleb128 0x27
 2680 00a4 19       		.uleb128 0x19
 2681 00a5 11       		.uleb128 0x11
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 76


 2682 00a6 01       		.uleb128 0x1
 2683 00a7 12       		.uleb128 0x12
 2684 00a8 06       		.uleb128 0x6
 2685 00a9 40       		.uleb128 0x40
 2686 00aa 18       		.uleb128 0x18
 2687 00ab 9742     		.uleb128 0x2117
 2688 00ad 19       		.uleb128 0x19
 2689 00ae 01       		.uleb128 0x1
 2690 00af 13       		.uleb128 0x13
 2691 00b0 00       		.byte	0
 2692 00b1 00       		.byte	0
 2693 00b2 0B       		.uleb128 0xb
 2694 00b3 05       		.uleb128 0x5
 2695 00b4 00       		.byte	0
 2696 00b5 03       		.uleb128 0x3
 2697 00b6 0E       		.uleb128 0xe
 2698 00b7 3A       		.uleb128 0x3a
 2699 00b8 0B       		.uleb128 0xb
 2700 00b9 3B       		.uleb128 0x3b
 2701 00ba 05       		.uleb128 0x5
 2702 00bb 49       		.uleb128 0x49
 2703 00bc 13       		.uleb128 0x13
 2704 00bd 02       		.uleb128 0x2
 2705 00be 18       		.uleb128 0x18
 2706 00bf 00       		.byte	0
 2707 00c0 00       		.byte	0
 2708 00c1 0C       		.uleb128 0xc
 2709 00c2 2E       		.uleb128 0x2e
 2710 00c3 01       		.byte	0x1
 2711 00c4 3F       		.uleb128 0x3f
 2712 00c5 19       		.uleb128 0x19
 2713 00c6 03       		.uleb128 0x3
 2714 00c7 0E       		.uleb128 0xe
 2715 00c8 3A       		.uleb128 0x3a
 2716 00c9 0B       		.uleb128 0xb
 2717 00ca 3B       		.uleb128 0x3b
 2718 00cb 05       		.uleb128 0x5
 2719 00cc 27       		.uleb128 0x27
 2720 00cd 19       		.uleb128 0x19
 2721 00ce 49       		.uleb128 0x49
 2722 00cf 13       		.uleb128 0x13
 2723 00d0 11       		.uleb128 0x11
 2724 00d1 01       		.uleb128 0x1
 2725 00d2 12       		.uleb128 0x12
 2726 00d3 06       		.uleb128 0x6
 2727 00d4 40       		.uleb128 0x40
 2728 00d5 18       		.uleb128 0x18
 2729 00d6 9742     		.uleb128 0x2117
 2730 00d8 19       		.uleb128 0x19
 2731 00d9 01       		.uleb128 0x1
 2732 00da 13       		.uleb128 0x13
 2733 00db 00       		.byte	0
 2734 00dc 00       		.byte	0
 2735 00dd 0D       		.uleb128 0xd
 2736 00de 34       		.uleb128 0x34
 2737 00df 00       		.byte	0
 2738 00e0 03       		.uleb128 0x3
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 77


 2739 00e1 0E       		.uleb128 0xe
 2740 00e2 3A       		.uleb128 0x3a
 2741 00e3 0B       		.uleb128 0xb
 2742 00e4 3B       		.uleb128 0x3b
 2743 00e5 05       		.uleb128 0x5
 2744 00e6 49       		.uleb128 0x49
 2745 00e7 13       		.uleb128 0x13
 2746 00e8 02       		.uleb128 0x2
 2747 00e9 18       		.uleb128 0x18
 2748 00ea 00       		.byte	0
 2749 00eb 00       		.byte	0
 2750 00ec 0E       		.uleb128 0xe
 2751 00ed 2E       		.uleb128 0x2e
 2752 00ee 01       		.byte	0x1
 2753 00ef 3F       		.uleb128 0x3f
 2754 00f0 19       		.uleb128 0x19
 2755 00f1 03       		.uleb128 0x3
 2756 00f2 0E       		.uleb128 0xe
 2757 00f3 3A       		.uleb128 0x3a
 2758 00f4 0B       		.uleb128 0xb
 2759 00f5 3B       		.uleb128 0x3b
 2760 00f6 05       		.uleb128 0x5
 2761 00f7 27       		.uleb128 0x27
 2762 00f8 19       		.uleb128 0x19
 2763 00f9 49       		.uleb128 0x49
 2764 00fa 13       		.uleb128 0x13
 2765 00fb 11       		.uleb128 0x11
 2766 00fc 01       		.uleb128 0x1
 2767 00fd 12       		.uleb128 0x12
 2768 00fe 06       		.uleb128 0x6
 2769 00ff 40       		.uleb128 0x40
 2770 0100 18       		.uleb128 0x18
 2771 0101 9642     		.uleb128 0x2116
 2772 0103 19       		.uleb128 0x19
 2773 0104 01       		.uleb128 0x1
 2774 0105 13       		.uleb128 0x13
 2775 0106 00       		.byte	0
 2776 0107 00       		.byte	0
 2777 0108 0F       		.uleb128 0xf
 2778 0109 2E       		.uleb128 0x2e
 2779 010a 01       		.byte	0x1
 2780 010b 3F       		.uleb128 0x3f
 2781 010c 19       		.uleb128 0x19
 2782 010d 03       		.uleb128 0x3
 2783 010e 0E       		.uleb128 0xe
 2784 010f 3A       		.uleb128 0x3a
 2785 0110 0B       		.uleb128 0xb
 2786 0111 3B       		.uleb128 0x3b
 2787 0112 05       		.uleb128 0x5
 2788 0113 27       		.uleb128 0x27
 2789 0114 19       		.uleb128 0x19
 2790 0115 11       		.uleb128 0x11
 2791 0116 01       		.uleb128 0x1
 2792 0117 12       		.uleb128 0x12
 2793 0118 06       		.uleb128 0x6
 2794 0119 40       		.uleb128 0x40
 2795 011a 18       		.uleb128 0x18
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 78


 2796 011b 9642     		.uleb128 0x2116
 2797 011d 19       		.uleb128 0x19
 2798 011e 01       		.uleb128 0x1
 2799 011f 13       		.uleb128 0x13
 2800 0120 00       		.byte	0
 2801 0121 00       		.byte	0
 2802 0122 10       		.uleb128 0x10
 2803 0123 0F       		.uleb128 0xf
 2804 0124 00       		.byte	0
 2805 0125 0B       		.uleb128 0xb
 2806 0126 0B       		.uleb128 0xb
 2807 0127 49       		.uleb128 0x49
 2808 0128 13       		.uleb128 0x13
 2809 0129 00       		.byte	0
 2810 012a 00       		.byte	0
 2811 012b 11       		.uleb128 0x11
 2812 012c 26       		.uleb128 0x26
 2813 012d 00       		.byte	0
 2814 012e 49       		.uleb128 0x49
 2815 012f 13       		.uleb128 0x13
 2816 0130 00       		.byte	0
 2817 0131 00       		.byte	0
 2818 0132 12       		.uleb128 0x12
 2819 0133 0B       		.uleb128 0xb
 2820 0134 01       		.byte	0x1
 2821 0135 11       		.uleb128 0x11
 2822 0136 01       		.uleb128 0x1
 2823 0137 12       		.uleb128 0x12
 2824 0138 06       		.uleb128 0x6
 2825 0139 00       		.byte	0
 2826 013a 00       		.byte	0
 2827 013b 13       		.uleb128 0x13
 2828 013c 34       		.uleb128 0x34
 2829 013d 00       		.byte	0
 2830 013e 03       		.uleb128 0x3
 2831 013f 0E       		.uleb128 0xe
 2832 0140 3A       		.uleb128 0x3a
 2833 0141 0B       		.uleb128 0xb
 2834 0142 3B       		.uleb128 0x3b
 2835 0143 0B       		.uleb128 0xb
 2836 0144 49       		.uleb128 0x49
 2837 0145 13       		.uleb128 0x13
 2838 0146 3F       		.uleb128 0x3f
 2839 0147 19       		.uleb128 0x19
 2840 0148 02       		.uleb128 0x2
 2841 0149 18       		.uleb128 0x18
 2842 014a 00       		.byte	0
 2843 014b 00       		.byte	0
 2844 014c 14       		.uleb128 0x14
 2845 014d 01       		.uleb128 0x1
 2846 014e 01       		.byte	0x1
 2847 014f 49       		.uleb128 0x49
 2848 0150 13       		.uleb128 0x13
 2849 0151 01       		.uleb128 0x1
 2850 0152 13       		.uleb128 0x13
 2851 0153 00       		.byte	0
 2852 0154 00       		.byte	0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 79


 2853 0155 15       		.uleb128 0x15
 2854 0156 21       		.uleb128 0x21
 2855 0157 00       		.byte	0
 2856 0158 49       		.uleb128 0x49
 2857 0159 13       		.uleb128 0x13
 2858 015a 2F       		.uleb128 0x2f
 2859 015b 0B       		.uleb128 0xb
 2860 015c 00       		.byte	0
 2861 015d 00       		.byte	0
 2862 015e 00       		.byte	0
 2863              		.section	.debug_aranges,"",%progbits
 2864 0000 EC000000 		.4byte	0xec
 2865 0004 0200     		.2byte	0x2
 2866 0006 00000000 		.4byte	.Ldebug_info0
 2867 000a 04       		.byte	0x4
 2868 000b 00       		.byte	0
 2869 000c 0000     		.2byte	0
 2870 000e 0000     		.2byte	0
 2871 0010 00000000 		.4byte	.LFB0
 2872 0014 24000000 		.4byte	.LFE0-.LFB0
 2873 0018 00000000 		.4byte	.LFB1
 2874 001c 58000000 		.4byte	.LFE1-.LFB1
 2875 0020 00000000 		.4byte	.LFB2
 2876 0024 64000000 		.4byte	.LFE2-.LFB2
 2877 0028 00000000 		.4byte	.LFB3
 2878 002c 64000000 		.4byte	.LFE3-.LFB3
 2879 0030 00000000 		.4byte	.LFB4
 2880 0034 0E000000 		.4byte	.LFE4-.LFB4
 2881 0038 00000000 		.4byte	.LFB5
 2882 003c 14000000 		.4byte	.LFE5-.LFB5
 2883 0040 00000000 		.4byte	.LFB6
 2884 0044 20000000 		.4byte	.LFE6-.LFB6
 2885 0048 00000000 		.4byte	.LFB7
 2886 004c 90000000 		.4byte	.LFE7-.LFB7
 2887 0050 00000000 		.4byte	.LFB8
 2888 0054 40000000 		.4byte	.LFE8-.LFB8
 2889 0058 00000000 		.4byte	.LFB9
 2890 005c B8000000 		.4byte	.LFE9-.LFB9
 2891 0060 00000000 		.4byte	.LFB10
 2892 0064 44000000 		.4byte	.LFE10-.LFB10
 2893 0068 00000000 		.4byte	.LFB11
 2894 006c 90000000 		.4byte	.LFE11-.LFB11
 2895 0070 00000000 		.4byte	.LFB12
 2896 0074 80000000 		.4byte	.LFE12-.LFB12
 2897 0078 00000000 		.4byte	.LFB13
 2898 007c 14000000 		.4byte	.LFE13-.LFB13
 2899 0080 00000000 		.4byte	.LFB14
 2900 0084 20000000 		.4byte	.LFE14-.LFB14
 2901 0088 00000000 		.4byte	.LFB15
 2902 008c 20000000 		.4byte	.LFE15-.LFB15
 2903 0090 00000000 		.4byte	.LFB16
 2904 0094 20000000 		.4byte	.LFE16-.LFB16
 2905 0098 00000000 		.4byte	.LFB17
 2906 009c 2C000000 		.4byte	.LFE17-.LFB17
 2907 00a0 00000000 		.4byte	.LFB18
 2908 00a4 18000000 		.4byte	.LFE18-.LFB18
 2909 00a8 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 80


 2910 00ac 34000000 		.4byte	.LFE19-.LFB19
 2911 00b0 00000000 		.4byte	.LFB20
 2912 00b4 44000000 		.4byte	.LFE20-.LFB20
 2913 00b8 00000000 		.4byte	.LFB21
 2914 00bc 44000000 		.4byte	.LFE21-.LFB21
 2915 00c0 00000000 		.4byte	.LFB22
 2916 00c4 34000000 		.4byte	.LFE22-.LFB22
 2917 00c8 00000000 		.4byte	.LFB23
 2918 00cc 40000000 		.4byte	.LFE23-.LFB23
 2919 00d0 00000000 		.4byte	.LFB24
 2920 00d4 44000000 		.4byte	.LFE24-.LFB24
 2921 00d8 00000000 		.4byte	.LFB25
 2922 00dc C0000000 		.4byte	.LFE25-.LFB25
 2923 00e0 00000000 		.4byte	.LFB26
 2924 00e4 14000000 		.4byte	.LFE26-.LFB26
 2925 00e8 00000000 		.4byte	0
 2926 00ec 00000000 		.4byte	0
 2927              		.section	.debug_ranges,"",%progbits
 2928              	.Ldebug_ranges0:
 2929 0000 00000000 		.4byte	.LFB0
 2930 0004 24000000 		.4byte	.LFE0
 2931 0008 00000000 		.4byte	.LFB1
 2932 000c 58000000 		.4byte	.LFE1
 2933 0010 00000000 		.4byte	.LFB2
 2934 0014 64000000 		.4byte	.LFE2
 2935 0018 00000000 		.4byte	.LFB3
 2936 001c 64000000 		.4byte	.LFE3
 2937 0020 00000000 		.4byte	.LFB4
 2938 0024 0E000000 		.4byte	.LFE4
 2939 0028 00000000 		.4byte	.LFB5
 2940 002c 14000000 		.4byte	.LFE5
 2941 0030 00000000 		.4byte	.LFB6
 2942 0034 20000000 		.4byte	.LFE6
 2943 0038 00000000 		.4byte	.LFB7
 2944 003c 90000000 		.4byte	.LFE7
 2945 0040 00000000 		.4byte	.LFB8
 2946 0044 40000000 		.4byte	.LFE8
 2947 0048 00000000 		.4byte	.LFB9
 2948 004c B8000000 		.4byte	.LFE9
 2949 0050 00000000 		.4byte	.LFB10
 2950 0054 44000000 		.4byte	.LFE10
 2951 0058 00000000 		.4byte	.LFB11
 2952 005c 90000000 		.4byte	.LFE11
 2953 0060 00000000 		.4byte	.LFB12
 2954 0064 80000000 		.4byte	.LFE12
 2955 0068 00000000 		.4byte	.LFB13
 2956 006c 14000000 		.4byte	.LFE13
 2957 0070 00000000 		.4byte	.LFB14
 2958 0074 20000000 		.4byte	.LFE14
 2959 0078 00000000 		.4byte	.LFB15
 2960 007c 20000000 		.4byte	.LFE15
 2961 0080 00000000 		.4byte	.LFB16
 2962 0084 20000000 		.4byte	.LFE16
 2963 0088 00000000 		.4byte	.LFB17
 2964 008c 2C000000 		.4byte	.LFE17
 2965 0090 00000000 		.4byte	.LFB18
 2966 0094 18000000 		.4byte	.LFE18
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 81


 2967 0098 00000000 		.4byte	.LFB19
 2968 009c 34000000 		.4byte	.LFE19
 2969 00a0 00000000 		.4byte	.LFB20
 2970 00a4 44000000 		.4byte	.LFE20
 2971 00a8 00000000 		.4byte	.LFB21
 2972 00ac 44000000 		.4byte	.LFE21
 2973 00b0 00000000 		.4byte	.LFB22
 2974 00b4 34000000 		.4byte	.LFE22
 2975 00b8 00000000 		.4byte	.LFB23
 2976 00bc 40000000 		.4byte	.LFE23
 2977 00c0 00000000 		.4byte	.LFB24
 2978 00c4 44000000 		.4byte	.LFE24
 2979 00c8 00000000 		.4byte	.LFB25
 2980 00cc C0000000 		.4byte	.LFE25
 2981 00d0 00000000 		.4byte	.LFB26
 2982 00d4 14000000 		.4byte	.LFE26
 2983 00d8 00000000 		.4byte	0
 2984 00dc 00000000 		.4byte	0
 2985              		.section	.debug_line,"",%progbits
 2986              	.Ldebug_line0:
 2987 0000 05030000 		.section	.debug_str,"MS",%progbits,1
 2987      02004100 
 2987      00000201 
 2987      FB0E0D00 
 2987      01010101 
 2988              	.LASF33:
 2989 0000 4742434C 		.ascii	"GBCL_ReadRxStatus\000"
 2989      5F526561 
 2989      64527853 
 2989      74617475 
 2989      7300
 2990              	.LASF10:
 2991 0012 75696E74 		.ascii	"uint16\000"
 2991      313600
 2992              	.LASF49:
 2993 0019 74784461 		.ascii	"txDataByte\000"
 2993      74614279 
 2993      746500
 2994              	.LASF54:
 2995 0024 73747269 		.ascii	"string\000"
 2995      6E6700
 2996              	.LASF48:
 2997 002b 4742434C 		.ascii	"GBCL_WriteTxData\000"
 2997      5F577269 
 2997      74655478 
 2997      44617461 
 2997      00
 2998              	.LASF73:
 2999 003c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2999      43313120 
 2999      352E342E 
 2999      31203230 
 2999      31363036 
 3000 006f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3000      20726576 
 3000      6973696F 
 3000      6E203233 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 82


 3000      37373135 
 3001 00a2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3001      66756E63 
 3001      74696F6E 
 3001      2D736563 
 3001      74696F6E 
 3002              	.LASF44:
 3003 00ca 4742434C 		.ascii	"GBCL_SetRxAddress1\000"
 3003      5F536574 
 3003      52784164 
 3003      64726573 
 3003      733100
 3004              	.LASF46:
 3005 00dd 4742434C 		.ascii	"GBCL_SetRxAddress2\000"
 3005      5F536574 
 3005      52784164 
 3005      64726573 
 3005      733200
 3006              	.LASF7:
 3007 00f0 6C6F6E67 		.ascii	"long long unsigned int\000"
 3007      206C6F6E 
 3007      6720756E 
 3007      7369676E 
 3007      65642069 
 3008              	.LASF74:
 3009 0107 47656E65 		.ascii	"Generated_Source\\PSoC5\\GBCL.c\000"
 3009      72617465 
 3009      645F536F 
 3009      75726365 
 3009      5C50536F 
 3010              	.LASF6:
 3011 0125 6C6F6E67 		.ascii	"long long int\000"
 3011      206C6F6E 
 3011      6720696E 
 3011      7400
 3012              	.LASF0:
 3013 0133 7369676E 		.ascii	"signed char\000"
 3013      65642063 
 3013      68617200 
 3014              	.LASF64:
 3015 013f 74785065 		.ascii	"txPeriod\000"
 3015      72696F64 
 3015      00
 3016              	.LASF41:
 3017 0148 4742434C 		.ascii	"GBCL_ClearRxBuffer\000"
 3017      5F436C65 
 3017      61725278 
 3017      42756666 
 3017      657200
 3018              	.LASF4:
 3019 015b 6C6F6E67 		.ascii	"long int\000"
 3019      20696E74 
 3019      00
 3020              	.LASF9:
 3021 0164 75696E74 		.ascii	"uint8\000"
 3021      3800
 3022              	.LASF61:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 83


 3023 016a 4742434C 		.ascii	"GBCL_SendBreak\000"
 3023      5F53656E 
 3023      64427265 
 3023      616B00
 3024              	.LASF13:
 3025 0179 646F7562 		.ascii	"double\000"
 3025      6C6500
 3026              	.LASF43:
 3027 0180 61646472 		.ascii	"addressMode\000"
 3027      6573734D 
 3027      6F646500 
 3028              	.LASF11:
 3029 018c 75696E74 		.ascii	"uint32\000"
 3029      333200
 3030              	.LASF27:
 3031 0193 636F6E74 		.ascii	"control\000"
 3031      726F6C00 
 3032              	.LASF72:
 3033 019b 4742434C 		.ascii	"GBCL_rxBufferOverflow\000"
 3033      5F727842 
 3033      75666665 
 3033      724F7665 
 3033      72666C6F 
 3034              	.LASF65:
 3035 01b1 4742434C 		.ascii	"GBCL_SetTxAddressMode\000"
 3035      5F536574 
 3035      54784164 
 3035      64726573 
 3035      734D6F64 
 3036              	.LASF20:
 3037 01c7 4742434C 		.ascii	"GBCL_Start\000"
 3037      5F537461 
 3037      727400
 3038              	.LASF62:
 3039 01d2 7265744D 		.ascii	"retMode\000"
 3039      6F646500 
 3040              	.LASF68:
 3041 01da 4742434C 		.ascii	"GBCL_rxBuffer\000"
 3041      5F727842 
 3041      75666665 
 3041      7200
 3042              	.LASF8:
 3043 01e8 756E7369 		.ascii	"unsigned int\000"
 3043      676E6564 
 3043      20696E74 
 3043      00
 3044              	.LASF38:
 3045 01f5 6C6F6345 		.ascii	"locErrorStatus\000"
 3045      72726F72 
 3045      53746174 
 3045      757300
 3046              	.LASF5:
 3047 0204 6C6F6E67 		.ascii	"long unsigned int\000"
 3047      20756E73 
 3047      69676E65 
 3047      6420696E 
 3047      7400
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 84


 3048              	.LASF69:
 3049 0216 4742434C 		.ascii	"GBCL_rxBufferRead\000"
 3049      5F727842 
 3049      75666665 
 3049      72526561 
 3049      6400
 3050              	.LASF40:
 3051 0228 73697A65 		.ascii	"size\000"
 3051      00
 3052              	.LASF3:
 3053 022d 73686F72 		.ascii	"short unsigned int\000"
 3053      7420756E 
 3053      7369676E 
 3053      65642069 
 3053      6E7400
 3054              	.LASF51:
 3055 0240 4742434C 		.ascii	"GBCL_ReadTxStatus\000"
 3055      5F526561 
 3055      64547853 
 3055      74617475 
 3055      7300
 3056              	.LASF35:
 3057 0252 4742434C 		.ascii	"GBCL_GetChar\000"
 3057      5F476574 
 3057      43686172 
 3057      00
 3058              	.LASF55:
 3059 025f 62756649 		.ascii	"bufIndex\000"
 3059      6E646578 
 3059      00
 3060              	.LASF28:
 3061 0268 696E7453 		.ascii	"intSrc\000"
 3061      726300
 3062              	.LASF50:
 3063 026f 4742434C 		.ascii	"GBCL_ReadControlRegister\000"
 3063      5F526561 
 3063      64436F6E 
 3063      74726F6C 
 3063      52656769 
 3064              	.LASF66:
 3065 0288 4742434C 		.ascii	"GBCL_initVar\000"
 3065      5F696E69 
 3065      74566172 
 3065      00
 3066              	.LASF53:
 3067 0295 4742434C 		.ascii	"GBCL_PutString\000"
 3067      5F507574 
 3067      53747269 
 3067      6E6700
 3068              	.LASF17:
 3069 02a4 72656733 		.ascii	"reg32\000"
 3069      3200
 3070              	.LASF67:
 3071 02aa 4742434C 		.ascii	"GBCL_errorStatus\000"
 3071      5F657272 
 3071      6F725374 
 3071      61747573 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 85


 3071      00
 3072              	.LASF63:
 3073 02bb 746D7053 		.ascii	"tmpStat\000"
 3073      74617400 
 3074              	.LASF59:
 3075 02c3 4742434C 		.ascii	"GBCL_GetTxBufferSize\000"
 3075      5F476574 
 3075      54784275 
 3075      66666572 
 3075      53697A65 
 3076              	.LASF70:
 3077 02d8 4742434C 		.ascii	"GBCL_rxBufferWrite\000"
 3077      5F727842 
 3077      75666665 
 3077      72577269 
 3077      746500
 3078              	.LASF19:
 3079 02eb 73697A65 		.ascii	"sizetype\000"
 3079      74797065 
 3079      00
 3080              	.LASF18:
 3081 02f4 6C6F6E67 		.ascii	"long double\000"
 3081      20646F75 
 3081      626C6500 
 3082              	.LASF45:
 3083 0300 61646472 		.ascii	"address\000"
 3083      65737300 
 3084              	.LASF31:
 3085 0308 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3085      78427566 
 3085      66657257 
 3085      72697465 
 3085      00
 3086              	.LASF36:
 3087 0319 72785374 		.ascii	"rxStatus\000"
 3087      61747573 
 3087      00
 3088              	.LASF60:
 3089 0322 4742434C 		.ascii	"GBCL_ClearTxBuffer\000"
 3089      5F436C65 
 3089      61725478 
 3089      42756666 
 3089      657200
 3090              	.LASF23:
 3091 0335 4742434C 		.ascii	"GBCL_Stop\000"
 3091      5F53746F 
 3091      7000
 3092              	.LASF12:
 3093 033f 666C6F61 		.ascii	"float\000"
 3093      7400
 3094              	.LASF52:
 3095 0345 4742434C 		.ascii	"GBCL_PutChar\000"
 3095      5F507574 
 3095      43686172 
 3095      00
 3096              	.LASF16:
 3097 0352 72656738 		.ascii	"reg8\000"
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 86


 3097      00
 3098              	.LASF26:
 3099 0357 4742434C 		.ascii	"GBCL_SetRxInterruptMode\000"
 3099      5F536574 
 3099      5278496E 
 3099      74657272 
 3099      7570744D 
 3100              	.LASF75:
 3101 036f 433A5C55 		.ascii	"C:\\Users\\Thermaltake\\Documents\\GitHub\\Mepsan\\"
 3101      73657273 
 3101      5C546865 
 3101      726D616C 
 3101      74616B65 
 3102 039c 4D657073 		.ascii	"Mepsan.cydsn\000"
 3102      616E2E63 
 3102      7964736E 
 3102      00
 3103              	.LASF1:
 3104 03a9 756E7369 		.ascii	"unsigned char\000"
 3104      676E6564 
 3104      20636861 
 3104      7200
 3105              	.LASF2:
 3106 03b7 73686F72 		.ascii	"short int\000"
 3106      7420696E 
 3106      7400
 3107              	.LASF57:
 3108 03c1 62797465 		.ascii	"byteCount\000"
 3108      436F756E 
 3108      7400
 3109              	.LASF29:
 3110 03cb 72784461 		.ascii	"rxData\000"
 3110      746100
 3111              	.LASF32:
 3112 03d2 4742434C 		.ascii	"GBCL_ReadRxData\000"
 3112      5F526561 
 3112      64527844 
 3112      61746100 
 3113              	.LASF39:
 3114 03e2 4742434C 		.ascii	"GBCL_GetRxBufferSize\000"
 3114      5F476574 
 3114      52784275 
 3114      66666572 
 3114      53697A65 
 3115              	.LASF15:
 3116 03f7 63686172 		.ascii	"char\000"
 3116      00
 3117              	.LASF56:
 3118 03fc 4742434C 		.ascii	"GBCL_PutArray\000"
 3118      5F507574 
 3118      41727261 
 3118      7900
 3119              	.LASF42:
 3120 040a 4742434C 		.ascii	"GBCL_SetRxAddressMode\000"
 3120      5F536574 
 3120      52784164 
 3120      64726573 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\cczdN2yA.s 			page 87


 3120      734D6F64 
 3121              	.LASF14:
 3122 0420 63686172 		.ascii	"char8\000"
 3122      3800
 3123              	.LASF25:
 3124 0426 4742434C 		.ascii	"GBCL_WriteControlRegister\000"
 3124      5F577269 
 3124      7465436F 
 3124      6E74726F 
 3124      6C526567 
 3125              	.LASF22:
 3126 0440 4742434C 		.ascii	"GBCL_Enable\000"
 3126      5F456E61 
 3126      626C6500 
 3127              	.LASF30:
 3128 044c 6C6F6352 		.ascii	"locRxBufferRead\000"
 3128      78427566 
 3128      66657252 
 3128      65616400 
 3129              	.LASF24:
 3130 045c 656E6162 		.ascii	"enableInterrupts\000"
 3130      6C65496E 
 3130      74657272 
 3130      75707473 
 3130      00
 3131              	.LASF34:
 3132 046d 73746174 		.ascii	"status\000"
 3132      757300
 3133              	.LASF71:
 3134 0474 4742434C 		.ascii	"GBCL_rxBufferLoopDetect\000"
 3134      5F727842 
 3134      75666665 
 3134      724C6F6F 
 3134      70446574 
 3135              	.LASF37:
 3136 048c 4742434C 		.ascii	"GBCL_GetByte\000"
 3136      5F476574 
 3136      42797465 
 3136      00
 3137              	.LASF58:
 3138 0499 4742434C 		.ascii	"GBCL_PutCRLF\000"
 3138      5F507574 
 3138      43524C46 
 3138      00
 3139              	.LASF47:
 3140 04a6 4742434C 		.ascii	"GBCL_SetTxInterruptMode\000"
 3140      5F536574 
 3140      5478496E 
 3140      74657272 
 3140      7570744D 
 3141              	.LASF21:
 3142 04be 4742434C 		.ascii	"GBCL_Init\000"
 3142      5F496E69 
 3142      7400
 3143              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
