ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"GBCL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.GBCL_Init,"ax",%progbits
  20              		.align	2
  21              		.global	GBCL_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	GBCL_Init, %function
  25              	GBCL_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\GBCL.c"
   1:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/GBCL.c **** * File Name: GBCL.c
   3:Generated_Source\PSoC5/GBCL.c **** * Version 2.50
   4:Generated_Source\PSoC5/GBCL.c **** *
   5:Generated_Source\PSoC5/GBCL.c **** * Description:
   6:Generated_Source\PSoC5/GBCL.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/GBCL.c **** *
   8:Generated_Source\PSoC5/GBCL.c **** * Note:
   9:Generated_Source\PSoC5/GBCL.c **** *
  10:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
  11:Generated_Source\PSoC5/GBCL.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/GBCL.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/GBCL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/GBCL.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/GBCL.c **** 
  17:Generated_Source\PSoC5/GBCL.c **** #include "GBCL.h"
  18:Generated_Source\PSoC5/GBCL.c **** #if (GBCL_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/GBCL.c ****     #include "GBCL_IntClock.h"
  20:Generated_Source\PSoC5/GBCL.c **** #endif /* End GBCL_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/GBCL.c **** 
  22:Generated_Source\PSoC5/GBCL.c **** 
  23:Generated_Source\PSoC5/GBCL.c **** /***************************************
  24:Generated_Source\PSoC5/GBCL.c **** * Global data allocation
  25:Generated_Source\PSoC5/GBCL.c **** ***************************************/
  26:Generated_Source\PSoC5/GBCL.c **** 
  27:Generated_Source\PSoC5/GBCL.c **** uint8 GBCL_initVar = 0u;
  28:Generated_Source\PSoC5/GBCL.c **** 
  29:Generated_Source\PSoC5/GBCL.c **** #if (GBCL_TX_INTERRUPT_ENABLED && GBCL_TX_ENABLED)
  30:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_txBuffer[GBCL_TX_BUFFER_SIZE];
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 2


  31:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_txBufferRead = 0u;
  32:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/GBCL.c **** #endif /* (GBCL_TX_INTERRUPT_ENABLED && GBCL_TX_ENABLED) */
  34:Generated_Source\PSoC5/GBCL.c **** 
  35:Generated_Source\PSoC5/GBCL.c **** #if (GBCL_RX_INTERRUPT_ENABLED && (GBCL_RX_ENABLED || GBCL_HD_ENABLED))
  36:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_errorStatus = 0u;
  37:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_rxBuffer[GBCL_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/GBCL.c ****     volatile uint8 GBCL_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/GBCL.c ****         volatile uint8 GBCL_rxAddressMode = GBCL_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/GBCL.c ****         volatile uint8 GBCL_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/GBCL.c **** #endif /* (GBCL_RX_INTERRUPT_ENABLED && (GBCL_RX_ENABLED || GBCL_HD_ENABLED)) */
  47:Generated_Source\PSoC5/GBCL.c **** 
  48:Generated_Source\PSoC5/GBCL.c **** 
  49:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_Start
  51:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
  52:Generated_Source\PSoC5/GBCL.c **** *
  53:Generated_Source\PSoC5/GBCL.c **** * Summary:
  54:Generated_Source\PSoC5/GBCL.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/GBCL.c **** *  GBCL_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/GBCL.c **** *  GBCL_Init() function, and then calls the
  57:Generated_Source\PSoC5/GBCL.c **** *  GBCL_Enable() function.
  58:Generated_Source\PSoC5/GBCL.c **** *
  59:Generated_Source\PSoC5/GBCL.c **** * Parameters:
  60:Generated_Source\PSoC5/GBCL.c **** *  None.
  61:Generated_Source\PSoC5/GBCL.c **** *
  62:Generated_Source\PSoC5/GBCL.c **** * Return:
  63:Generated_Source\PSoC5/GBCL.c **** *  None.
  64:Generated_Source\PSoC5/GBCL.c **** *
  65:Generated_Source\PSoC5/GBCL.c **** * Global variables:
  66:Generated_Source\PSoC5/GBCL.c **** *  The GBCL_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/GBCL.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/GBCL.c **** *  and set to one (1u) the first time GBCL_Start() is called. This
  69:Generated_Source\PSoC5/GBCL.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/GBCL.c **** *  subsequent calls to the GBCL_Start() routine.
  71:Generated_Source\PSoC5/GBCL.c **** *
  72:Generated_Source\PSoC5/GBCL.c **** * Reentrant:
  73:Generated_Source\PSoC5/GBCL.c **** *  No.
  74:Generated_Source\PSoC5/GBCL.c **** *
  75:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/GBCL.c **** void GBCL_Start(void) 
  77:Generated_Source\PSoC5/GBCL.c **** {
  78:Generated_Source\PSoC5/GBCL.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/GBCL.c ****     if(GBCL_initVar == 0u)
  80:Generated_Source\PSoC5/GBCL.c ****     {
  81:Generated_Source\PSoC5/GBCL.c ****         GBCL_Init();
  82:Generated_Source\PSoC5/GBCL.c ****         GBCL_initVar = 1u;
  83:Generated_Source\PSoC5/GBCL.c ****     }
  84:Generated_Source\PSoC5/GBCL.c **** 
  85:Generated_Source\PSoC5/GBCL.c ****     GBCL_Enable();
  86:Generated_Source\PSoC5/GBCL.c **** }
  87:Generated_Source\PSoC5/GBCL.c **** 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 3


  88:Generated_Source\PSoC5/GBCL.c **** 
  89:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_Init
  91:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
  92:Generated_Source\PSoC5/GBCL.c **** *
  93:Generated_Source\PSoC5/GBCL.c **** * Summary:
  94:Generated_Source\PSoC5/GBCL.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/GBCL.c **** *  dialog settings. It is not necessary to call GBCL_Init() because
  96:Generated_Source\PSoC5/GBCL.c **** *  the GBCL_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/GBCL.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/GBCL.c **** *
  99:Generated_Source\PSoC5/GBCL.c **** * Parameters:
 100:Generated_Source\PSoC5/GBCL.c **** *  None.
 101:Generated_Source\PSoC5/GBCL.c **** *
 102:Generated_Source\PSoC5/GBCL.c **** * Return:
 103:Generated_Source\PSoC5/GBCL.c **** *  None.
 104:Generated_Source\PSoC5/GBCL.c **** *
 105:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/GBCL.c **** void GBCL_Init(void) 
 107:Generated_Source\PSoC5/GBCL.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 108:Generated_Source\PSoC5/GBCL.c ****     #if(GBCL_RX_ENABLED || GBCL_HD_ENABLED)
 109:Generated_Source\PSoC5/GBCL.c **** 
 110:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/GBCL.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/GBCL.c ****             (void) CyIntSetVector(GBCL_RX_VECT_NUM, &GBCL_RXISR);
  36              		.loc 1 112 0
  37 0002 0D49     		ldr	r1, .L3
  38 0004 0020     		movs	r0, #0
  39 0006 FFF7FEFF 		bl	CyIntSetVector
  40              	.LVL0:
 113:Generated_Source\PSoC5/GBCL.c ****             CyIntSetPriority(GBCL_RX_VECT_NUM, GBCL_RX_PRIOR_NUM);
  41              		.loc 1 113 0
  42 000a 0721     		movs	r1, #7
  43 000c 0020     		movs	r0, #0
  44 000e FFF7FEFF 		bl	CyIntSetPriority
  45              	.LVL1:
 114:Generated_Source\PSoC5/GBCL.c ****             GBCL_errorStatus = 0u;
  46              		.loc 1 114 0
  47 0012 0023     		movs	r3, #0
  48 0014 094A     		ldr	r2, .L3+4
  49 0016 1370     		strb	r3, [r2]
 115:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/GBCL.c **** 
 117:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/GBCL.c ****             GBCL_SetRxAddressMode(GBCL_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/GBCL.c ****             GBCL_SetRxAddress1(GBCL_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/GBCL.c ****             GBCL_SetRxAddress2(GBCL_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/GBCL.c ****         #endif /* End GBCL_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/GBCL.c **** 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 4


 123:Generated_Source\PSoC5/GBCL.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXBITCTR_PERIOD_REG = GBCL_RXBITCTR_INIT;
  50              		.loc 1 124 0
  51 0018 7221     		movs	r1, #114
  52 001a 094A     		ldr	r2, .L3+8
  53 001c 1170     		strb	r1, [r2]
 125:Generated_Source\PSoC5/GBCL.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXSTATUS_MASK_REG  = GBCL_INIT_RX_INTERRUPTS_MASK;
  54              		.loc 1 126 0
  55 001e 2021     		movs	r1, #32
  56 0020 0532     		adds	r2, r2, #5
  57 0022 1170     		strb	r1, [r2]
 127:Generated_Source\PSoC5/GBCL.c ****     #endif /* End GBCL_RX_ENABLED || GBCL_HD_ENABLED*/
 128:Generated_Source\PSoC5/GBCL.c **** 
 129:Generated_Source\PSoC5/GBCL.c ****     #if(GBCL_TX_ENABLED)
 130:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/GBCL.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/GBCL.c ****             (void) CyIntSetVector(GBCL_TX_VECT_NUM, &GBCL_TXISR);
 133:Generated_Source\PSoC5/GBCL.c ****             CyIntSetPriority(GBCL_TX_VECT_NUM, GBCL_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/GBCL.c **** 
 136:Generated_Source\PSoC5/GBCL.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXBITCLKGEN_CTR_REG = GBCL_BIT_CENTER;
  58              		.loc 1 138 0
  59 0024 0621     		movs	r1, #6
  60 0026 603A     		subs	r2, r2, #96
  61 0028 1170     		strb	r1, [r2]
 139:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXBITCLKTX_COMPLETE_REG = ((GBCL_NUMBER_OF_DATA_BITS +
  62              		.loc 1 139 0
  63 002a 4721     		movs	r1, #71
  64 002c 1032     		adds	r2, r2, #16
  65 002e 1170     		strb	r1, [r2]
 140:Generated_Source\PSoC5/GBCL.c ****                         GBCL_NUMBER_OF_START_BIT) * GBCL_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/GBCL.c ****         #else
 142:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXBITCTR_PERIOD_REG = ((GBCL_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/GBCL.c ****                         GBCL_NUMBER_OF_START_BIT) * GBCL_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/GBCL.c ****         #endif /* End GBCL_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/GBCL.c **** 
 146:Generated_Source\PSoC5/GBCL.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXSTATUS_MASK_REG = GBCL_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/GBCL.c ****         #else
 150:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXSTATUS_MASK_REG = GBCL_INIT_TX_INTERRUPTS_MASK;
  66              		.loc 1 150 0
  67 0030 4D32     		adds	r2, r2, #77
  68 0032 1370     		strb	r3, [r2]
  69 0034 08BD     		pop	{r3, pc}
  70              	.L4:
  71 0036 00BF     		.align	2
  72              	.L3:
  73 0038 00000000 		.word	GBCL_RXISR
  74 003c 00000000 		.word	.LANCHOR0
  75 0040 8A640040 		.word	1073767562
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	GBCL_Init, .-GBCL_Init
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 5


  79              		.section	.text.GBCL_Enable,"ax",%progbits
  80              		.align	2
  81              		.global	GBCL_Enable
  82              		.thumb
  83              		.thumb_func
  84              		.type	GBCL_Enable, %function
  85              	GBCL_Enable:
  86              	.LFB2:
 151:Generated_Source\PSoC5/GBCL.c ****         #endif /*End GBCL_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/GBCL.c **** 
 153:Generated_Source\PSoC5/GBCL.c ****     #endif /* End GBCL_TX_ENABLED */
 154:Generated_Source\PSoC5/GBCL.c **** 
 155:Generated_Source\PSoC5/GBCL.c ****     #if(GBCL_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/GBCL.c ****         GBCL_WriteControlRegister( \
 157:Generated_Source\PSoC5/GBCL.c ****             (GBCL_ReadControlRegister() & (uint8)~GBCL_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/GBCL.c ****             (uint8)(GBCL_PARITY_TYPE << GBCL_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/GBCL.c ****     #endif /* End GBCL_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/GBCL.c **** }
 161:Generated_Source\PSoC5/GBCL.c **** 
 162:Generated_Source\PSoC5/GBCL.c **** 
 163:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_Enable
 165:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
 166:Generated_Source\PSoC5/GBCL.c **** *
 167:Generated_Source\PSoC5/GBCL.c **** * Summary:
 168:Generated_Source\PSoC5/GBCL.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/GBCL.c **** *  to call GBCL_Enable() because the GBCL_Start() API
 170:Generated_Source\PSoC5/GBCL.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/GBCL.c **** *  operation.
 172:Generated_Source\PSoC5/GBCL.c **** 
 173:Generated_Source\PSoC5/GBCL.c **** * Parameters:
 174:Generated_Source\PSoC5/GBCL.c **** *  None.
 175:Generated_Source\PSoC5/GBCL.c **** *
 176:Generated_Source\PSoC5/GBCL.c **** * Return:
 177:Generated_Source\PSoC5/GBCL.c **** *  None.
 178:Generated_Source\PSoC5/GBCL.c **** *
 179:Generated_Source\PSoC5/GBCL.c **** * Global Variables:
 180:Generated_Source\PSoC5/GBCL.c **** *  GBCL_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/GBCL.c **** *
 182:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/GBCL.c **** void GBCL_Enable(void) 
 184:Generated_Source\PSoC5/GBCL.c **** {
  87              		.loc 1 184 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 08B5     		push	{r3, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 3, -8
  94              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/GBCL.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/GBCL.c ****     enableInterrupts = CyEnterCriticalSection();
  95              		.loc 1 186 0
  96 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  97              	.LVL2:
 187:Generated_Source\PSoC5/GBCL.c **** 
 188:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_ENABLED || GBCL_HD_ENABLED)
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 6


 189:Generated_Source\PSoC5/GBCL.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXBITCTR_CONTROL_REG |= GBCL_CNTR_ENABLE;
  98              		.loc 1 190 0
  99 0006 0A4A     		ldr	r2, .L7
 100 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 101 000a 43F02003 		orr	r3, r3, #32
 102 000e 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/GBCL.c **** 
 192:Generated_Source\PSoC5/GBCL.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXSTATUS_ACTL_REG  |= GBCL_INT_ENABLE;
 103              		.loc 1 193 0
 104 0010 0532     		adds	r2, r2, #5
 105 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 106 0014 43F01003 		orr	r3, r3, #16
 107 0018 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/GBCL.c **** 
 195:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/GBCL.c ****             GBCL_EnableRxInt();
 108              		.loc 1 196 0
 109 001a 0122     		movs	r2, #1
 110 001c 054B     		ldr	r3, .L7+4
 111 001e 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC5/GBCL.c **** 
 198:Generated_Source\PSoC5/GBCL.c ****             #if (GBCL_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/GBCL.c ****                 GBCL_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/GBCL.c ****             #endif /* (GBCL_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_ENABLED || GBCL_HD_ENABLED) */
 203:Generated_Source\PSoC5/GBCL.c **** 
 204:Generated_Source\PSoC5/GBCL.c ****     #if(GBCL_TX_ENABLED)
 205:Generated_Source\PSoC5/GBCL.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/GBCL.c ****         #if(!GBCL_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXBITCTR_CONTROL_REG |= GBCL_CNTR_ENABLE;
 208:Generated_Source\PSoC5/GBCL.c ****         #endif /* End GBCL_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/GBCL.c **** 
 210:Generated_Source\PSoC5/GBCL.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXSTATUS_ACTL_REG |= GBCL_INT_ENABLE;
 112              		.loc 1 211 0
 113 0020 054A     		ldr	r2, .L7+8
 114 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 115 0024 43F01003 		orr	r3, r3, #16
 116 0028 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/GBCL.c ****             GBCL_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/GBCL.c ****             GBCL_EnableTxInt();
 215:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/GBCL.c ****      #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/GBCL.c **** 
 218:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/GBCL.c ****         GBCL_IntClock_Start();  /* Enable the clock */
 220:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/GBCL.c **** 
 222:Generated_Source\PSoC5/GBCL.c ****     CyExitCriticalSection(enableInterrupts);
 117              		.loc 1 222 0
 118 002a FFF7FEFF 		bl	CyExitCriticalSection
 119              	.LVL3:
 120 002e 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 7


 121              	.L8:
 122              		.align	2
 123              	.L7:
 124 0030 9A640040 		.word	1073767578
 125 0034 00E100E0 		.word	-536813312
 126 0038 9C640040 		.word	1073767580
 127              		.cfi_endproc
 128              	.LFE2:
 129              		.size	GBCL_Enable, .-GBCL_Enable
 130              		.section	.text.GBCL_Start,"ax",%progbits
 131              		.align	2
 132              		.global	GBCL_Start
 133              		.thumb
 134              		.thumb_func
 135              		.type	GBCL_Start, %function
 136              	GBCL_Start:
 137              	.LFB0:
  77:Generated_Source\PSoC5/GBCL.c ****     /* If not initialized then initialize all required hardware and software */
 138              		.loc 1 77 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 08B5     		push	{r3, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 3, -8
 145              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/GBCL.c ****     {
 146              		.loc 1 79 0
 147 0002 054B     		ldr	r3, .L12
 148 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 149 0006 23B9     		cbnz	r3, .L10
  81:Generated_Source\PSoC5/GBCL.c ****         GBCL_initVar = 1u;
 150              		.loc 1 81 0
 151 0008 FFF7FEFF 		bl	GBCL_Init
 152              	.LVL4:
  82:Generated_Source\PSoC5/GBCL.c ****     }
 153              		.loc 1 82 0
 154 000c 0122     		movs	r2, #1
 155 000e 024B     		ldr	r3, .L12
 156 0010 5A70     		strb	r2, [r3, #1]
 157              	.L10:
  85:Generated_Source\PSoC5/GBCL.c **** }
 158              		.loc 1 85 0
 159 0012 FFF7FEFF 		bl	GBCL_Enable
 160              	.LVL5:
 161 0016 08BD     		pop	{r3, pc}
 162              	.L13:
 163              		.align	2
 164              	.L12:
 165 0018 00000000 		.word	.LANCHOR0
 166              		.cfi_endproc
 167              	.LFE0:
 168              		.size	GBCL_Start, .-GBCL_Start
 169              		.section	.text.GBCL_Stop,"ax",%progbits
 170              		.align	2
 171              		.global	GBCL_Stop
 172              		.thumb
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 8


 173              		.thumb_func
 174              		.type	GBCL_Stop, %function
 175              	GBCL_Stop:
 176              	.LFB3:
 223:Generated_Source\PSoC5/GBCL.c **** }
 224:Generated_Source\PSoC5/GBCL.c **** 
 225:Generated_Source\PSoC5/GBCL.c **** 
 226:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_Stop
 228:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
 229:Generated_Source\PSoC5/GBCL.c **** *
 230:Generated_Source\PSoC5/GBCL.c **** * Summary:
 231:Generated_Source\PSoC5/GBCL.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/GBCL.c **** *
 233:Generated_Source\PSoC5/GBCL.c **** * Parameters:
 234:Generated_Source\PSoC5/GBCL.c **** *  None.
 235:Generated_Source\PSoC5/GBCL.c **** *
 236:Generated_Source\PSoC5/GBCL.c **** * Return:
 237:Generated_Source\PSoC5/GBCL.c **** *  None.
 238:Generated_Source\PSoC5/GBCL.c **** *
 239:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/GBCL.c **** void GBCL_Stop(void) 
 241:Generated_Source\PSoC5/GBCL.c **** {
 177              		.loc 1 241 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 08B5     		push	{r3, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/GBCL.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/GBCL.c ****     enableInterrupts = CyEnterCriticalSection();
 185              		.loc 1 243 0
 186 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 187              	.LVL6:
 244:Generated_Source\PSoC5/GBCL.c **** 
 245:Generated_Source\PSoC5/GBCL.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_ENABLED || GBCL_HD_ENABLED)
 247:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXBITCTR_CONTROL_REG &= (uint8) ~GBCL_CNTR_ENABLE;
 188              		.loc 1 247 0
 189 0006 0A4A     		ldr	r2, .L16
 190 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 191 000a 03F0DF03 		and	r3, r3, #223
 192 000e 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_ENABLED || GBCL_HD_ENABLED) */
 249:Generated_Source\PSoC5/GBCL.c **** 
 250:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_TX_ENABLED)
 251:Generated_Source\PSoC5/GBCL.c ****         #if(!GBCL_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXBITCTR_CONTROL_REG &= (uint8) ~GBCL_CNTR_ENABLE;
 253:Generated_Source\PSoC5/GBCL.c ****         #endif /* (!GBCL_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_TX_ENABLED) */
 255:Generated_Source\PSoC5/GBCL.c **** 
 256:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/GBCL.c ****         GBCL_IntClock_Stop();   /* Disable the clock */
 258:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/GBCL.c **** 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 9


 260:Generated_Source\PSoC5/GBCL.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_ENABLED || GBCL_HD_ENABLED)
 262:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXSTATUS_ACTL_REG  &= (uint8) ~GBCL_INT_ENABLE;
 193              		.loc 1 262 0
 194 0010 0532     		adds	r2, r2, #5
 195 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 196 0014 03F0EF03 		and	r3, r3, #239
 197 0018 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/GBCL.c **** 
 264:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/GBCL.c ****             GBCL_DisableRxInt();
 198              		.loc 1 265 0
 199 001a 0122     		movs	r2, #1
 200 001c 054B     		ldr	r3, .L16+4
 201 001e 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_ENABLED || GBCL_HD_ENABLED) */
 268:Generated_Source\PSoC5/GBCL.c **** 
 269:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_TX_ENABLED)
 270:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXSTATUS_ACTL_REG &= (uint8) ~GBCL_INT_ENABLE;
 202              		.loc 1 270 0
 203 0020 054A     		ldr	r2, .L16+8
 204 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 205 0024 03F0EF03 		and	r3, r3, #239
 206 0028 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/GBCL.c **** 
 272:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/GBCL.c ****             GBCL_DisableTxInt();
 274:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_TX_ENABLED) */
 276:Generated_Source\PSoC5/GBCL.c **** 
 277:Generated_Source\PSoC5/GBCL.c ****     CyExitCriticalSection(enableInterrupts);
 207              		.loc 1 277 0
 208 002a FFF7FEFF 		bl	CyExitCriticalSection
 209              	.LVL7:
 210 002e 08BD     		pop	{r3, pc}
 211              	.L17:
 212              		.align	2
 213              	.L16:
 214 0030 9A640040 		.word	1073767578
 215 0034 80E100E0 		.word	-536813184
 216 0038 9C640040 		.word	1073767580
 217              		.cfi_endproc
 218              	.LFE3:
 219              		.size	GBCL_Stop, .-GBCL_Stop
 220              		.section	.text.GBCL_ReadControlRegister,"ax",%progbits
 221              		.align	2
 222              		.global	GBCL_ReadControlRegister
 223              		.thumb
 224              		.thumb_func
 225              		.type	GBCL_ReadControlRegister, %function
 226              	GBCL_ReadControlRegister:
 227              	.LFB4:
 278:Generated_Source\PSoC5/GBCL.c **** }
 279:Generated_Source\PSoC5/GBCL.c **** 
 280:Generated_Source\PSoC5/GBCL.c **** 
 281:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 10


 282:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_ReadControlRegister
 283:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
 284:Generated_Source\PSoC5/GBCL.c **** *
 285:Generated_Source\PSoC5/GBCL.c **** * Summary:
 286:Generated_Source\PSoC5/GBCL.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/GBCL.c **** *
 288:Generated_Source\PSoC5/GBCL.c **** * Parameters:
 289:Generated_Source\PSoC5/GBCL.c **** *  None.
 290:Generated_Source\PSoC5/GBCL.c **** *
 291:Generated_Source\PSoC5/GBCL.c **** * Return:
 292:Generated_Source\PSoC5/GBCL.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/GBCL.c **** *
 294:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/GBCL.c **** uint8 GBCL_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/GBCL.c **** {
 228              		.loc 1 296 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 297:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/GBCL.c ****         return(0u);
 299:Generated_Source\PSoC5/GBCL.c ****     #else
 300:Generated_Source\PSoC5/GBCL.c ****         return(GBCL_CONTROL_REG);
 301:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/GBCL.c **** }
 233              		.loc 1 302 0
 234 0000 0020     		movs	r0, #0
 235 0002 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE4:
 238              		.size	GBCL_ReadControlRegister, .-GBCL_ReadControlRegister
 239              		.section	.text.GBCL_WriteControlRegister,"ax",%progbits
 240              		.align	2
 241              		.global	GBCL_WriteControlRegister
 242              		.thumb
 243              		.thumb_func
 244              		.type	GBCL_WriteControlRegister, %function
 245              	GBCL_WriteControlRegister:
 246              	.LFB5:
 303:Generated_Source\PSoC5/GBCL.c **** 
 304:Generated_Source\PSoC5/GBCL.c **** 
 305:Generated_Source\PSoC5/GBCL.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/GBCL.c **** * Function Name: GBCL_WriteControlRegister
 307:Generated_Source\PSoC5/GBCL.c **** ********************************************************************************
 308:Generated_Source\PSoC5/GBCL.c **** *
 309:Generated_Source\PSoC5/GBCL.c **** * Summary:
 310:Generated_Source\PSoC5/GBCL.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/GBCL.c **** *
 312:Generated_Source\PSoC5/GBCL.c **** * Parameters:
 313:Generated_Source\PSoC5/GBCL.c **** *  control:  control register value
 314:Generated_Source\PSoC5/GBCL.c **** *
 315:Generated_Source\PSoC5/GBCL.c **** * Return:
 316:Generated_Source\PSoC5/GBCL.c **** *  None.
 317:Generated_Source\PSoC5/GBCL.c **** *
 318:Generated_Source\PSoC5/GBCL.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/GBCL.c **** void  GBCL_WriteControlRegister(uint8 control) 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 11


 320:Generated_Source\PSoC5/GBCL.c **** {
 247              		.loc 1 320 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252              	.LVL8:
 253 0000 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE5:
 256              		.size	GBCL_WriteControlRegister, .-GBCL_WriteControlRegister
 257 0002 00BF     		.section	.text.GBCL_SetRxInterruptMode,"ax",%progbits
 258              		.align	2
 259              		.global	GBCL_SetRxInterruptMode
 260              		.thumb
 261              		.thumb_func
 262              		.type	GBCL_SetRxInterruptMode, %function
 263              	GBCL_SetRxInterruptMode:
 264              	.LFB6:
 321:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/GBCL.c ****         if(0u != control)
 323:Generated_Source\PSoC5/GBCL.c ****         {
 324:Generated_Source\PSoC5/GBCL.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/GBCL.c ****         }
 326:Generated_Source\PSoC5/GBCL.c ****     #else
 327:Generated_Source\PSoC5/GBCL.c ****        GBCL_CONTROL_REG = control;
 328:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/GBCL.c **** }
 330:Generated_Source\PSoC5/GBCL.c **** 
 331:Generated_Source\PSoC5/GBCL.c **** 
 332:Generated_Source\PSoC5/GBCL.c **** #if(GBCL_RX_ENABLED || GBCL_HD_ENABLED)
 333:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetRxInterruptMode
 335:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/GBCL.c ****     *
 337:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 338:Generated_Source\PSoC5/GBCL.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/GBCL.c ****     *
 340:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 341:Generated_Source\PSoC5/GBCL.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/GBCL.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/GBCL.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/GBCL.c ****     *
 352:Generated_Source\PSoC5/GBCL.c ****     * Return:
 353:Generated_Source\PSoC5/GBCL.c ****     *  None.
 354:Generated_Source\PSoC5/GBCL.c ****     *
 355:Generated_Source\PSoC5/GBCL.c ****     * Theory:
 356:Generated_Source\PSoC5/GBCL.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/GBCL.c ****     *
 358:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 12


 359:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/GBCL.c ****     {
 265              		.loc 1 360 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270              	.LVL9:
 361:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXSTATUS_MASK_REG  = intSrc;
 271              		.loc 1 361 0
 272 0000 014B     		ldr	r3, .L21
 273 0002 1870     		strb	r0, [r3]
 274 0004 7047     		bx	lr
 275              	.L22:
 276 0006 00BF     		.align	2
 277              	.L21:
 278 0008 8F640040 		.word	1073767567
 279              		.cfi_endproc
 280              	.LFE6:
 281              		.size	GBCL_SetRxInterruptMode, .-GBCL_SetRxInterruptMode
 282              		.section	.text.GBCL_ReadRxData,"ax",%progbits
 283              		.align	2
 284              		.global	GBCL_ReadRxData
 285              		.thumb
 286              		.thumb_func
 287              		.type	GBCL_ReadRxData, %function
 288              	GBCL_ReadRxData:
 289              	.LFB7:
 362:Generated_Source\PSoC5/GBCL.c ****     }
 363:Generated_Source\PSoC5/GBCL.c **** 
 364:Generated_Source\PSoC5/GBCL.c **** 
 365:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_ReadRxData
 367:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/GBCL.c ****     *
 369:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 370:Generated_Source\PSoC5/GBCL.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/GBCL.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/GBCL.c ****     *
 373:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 374:Generated_Source\PSoC5/GBCL.c ****     *  None.
 375:Generated_Source\PSoC5/GBCL.c ****     *
 376:Generated_Source\PSoC5/GBCL.c ****     * Return:
 377:Generated_Source\PSoC5/GBCL.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/GBCL.c ****     *
 379:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 380:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/GBCL.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/GBCL.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/GBCL.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/GBCL.c ****     *
 388:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 389:Generated_Source\PSoC5/GBCL.c ****     *  No.
 390:Generated_Source\PSoC5/GBCL.c ****     *
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 13


 391:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_ReadRxData(void) 
 393:Generated_Source\PSoC5/GBCL.c ****     {
 290              		.loc 1 393 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 394:Generated_Source\PSoC5/GBCL.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/GBCL.c **** 
 396:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/GBCL.c **** 
 398:Generated_Source\PSoC5/GBCL.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/GBCL.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/GBCL.c **** 
 401:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableRxInt();
 295              		.loc 1 402 0
 296 0000 0122     		movs	r2, #1
 297 0002 134B     		ldr	r3, .L29
 298 0004 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/GBCL.c **** 
 404:Generated_Source\PSoC5/GBCL.c ****         locRxBufferRead  = GBCL_rxBufferRead;
 299              		.loc 1 404 0
 300 0006 134A     		ldr	r2, .L29+4
 301 0008 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 302 000a DBB2     		uxtb	r3, r3
 303              	.LVL10:
 405:Generated_Source\PSoC5/GBCL.c ****         locRxBufferWrite = GBCL_rxBufferWrite;
 304              		.loc 1 405 0
 305 000c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 306 000e C9B2     		uxtb	r1, r1
 307              	.LVL11:
 406:Generated_Source\PSoC5/GBCL.c **** 
 407:Generated_Source\PSoC5/GBCL.c ****         if( (GBCL_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 308              		.loc 1 407 0
 309 0010 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 310 0012 12F0FF0F 		tst	r2, #255
 311 0016 01D1     		bne	.L24
 312              		.loc 1 407 0 is_stmt 0 discriminator 1
 313 0018 8B42     		cmp	r3, r1
 314 001a 12D0     		beq	.L25
 315              	.L24:
 408:Generated_Source\PSoC5/GBCL.c ****         {
 409:Generated_Source\PSoC5/GBCL.c ****             rxData = GBCL_rxBuffer[locRxBufferRead];
 316              		.loc 1 409 0 is_stmt 1
 317 001c 0E4A     		ldr	r2, .L29+8
 318 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 319 0020 C0B2     		uxtb	r0, r0
 320              	.LVL12:
 410:Generated_Source\PSoC5/GBCL.c ****             locRxBufferRead++;
 321              		.loc 1 410 0
 322 0022 0133     		adds	r3, r3, #1
 323              	.LVL13:
 324 0024 DBB2     		uxtb	r3, r3
 325              	.LVL14:
 411:Generated_Source\PSoC5/GBCL.c **** 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 14


 412:Generated_Source\PSoC5/GBCL.c ****             if(locRxBufferRead >= GBCL_RX_BUFFER_SIZE)
 326              		.loc 1 412 0
 327 0026 13F0800F 		tst	r3, #128
 328 002a 00D0     		beq	.L26
 413:Generated_Source\PSoC5/GBCL.c ****             {
 414:Generated_Source\PSoC5/GBCL.c ****                 locRxBufferRead = 0u;
 329              		.loc 1 414 0
 330 002c 0023     		movs	r3, #0
 331              	.LVL15:
 332              	.L26:
 415:Generated_Source\PSoC5/GBCL.c ****             }
 416:Generated_Source\PSoC5/GBCL.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/GBCL.c ****             GBCL_rxBufferRead = locRxBufferRead;
 333              		.loc 1 417 0
 334 002e 094A     		ldr	r2, .L29+4
 335 0030 9370     		strb	r3, [r2, #2]
 418:Generated_Source\PSoC5/GBCL.c **** 
 419:Generated_Source\PSoC5/GBCL.c ****             if(GBCL_rxBufferLoopDetect != 0u)
 336              		.loc 1 419 0
 337 0032 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 338              	.LVL16:
 339 0034 13F0FF0F 		tst	r3, #255
 340 0038 06D0     		beq	.L27
 420:Generated_Source\PSoC5/GBCL.c ****             {
 421:Generated_Source\PSoC5/GBCL.c ****                 GBCL_rxBufferLoopDetect = 0u;
 341              		.loc 1 421 0
 342 003a 0022     		movs	r2, #0
 343 003c 054B     		ldr	r3, .L29+4
 344 003e 1A71     		strb	r2, [r3, #4]
 345              	.LVL17:
 346 0040 02E0     		b	.L27
 347              	.LVL18:
 348              	.L25:
 422:Generated_Source\PSoC5/GBCL.c ****                 #if ((GBCL_RX_INTERRUPT_ENABLED) && (GBCL_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/GBCL.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/GBCL.c ****                     #if( GBCL_HD_ENABLED )
 425:Generated_Source\PSoC5/GBCL.c ****                         if((GBCL_CONTROL_REG & GBCL_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/GBCL.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/GBCL.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/GBCL.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/GBCL.c ****                             */
 430:Generated_Source\PSoC5/GBCL.c ****                             GBCL_RXSTATUS_MASK_REG  |= GBCL_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/GBCL.c ****                         }
 432:Generated_Source\PSoC5/GBCL.c ****                     #else
 433:Generated_Source\PSoC5/GBCL.c ****                         GBCL_RXSTATUS_MASK_REG  |= GBCL_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/GBCL.c ****                     #endif /* end GBCL_HD_ENABLED */
 435:Generated_Source\PSoC5/GBCL.c ****                 #endif /* ((GBCL_RX_INTERRUPT_ENABLED) && (GBCL_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/GBCL.c ****             }
 437:Generated_Source\PSoC5/GBCL.c ****         }
 438:Generated_Source\PSoC5/GBCL.c ****         else
 439:Generated_Source\PSoC5/GBCL.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/GBCL.c ****             rxData = GBCL_RXDATA_REG;
 349              		.loc 1 440 0
 350 0042 064B     		ldr	r3, .L29+12
 351              	.LVL19:
 352 0044 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 353 0046 C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 15


 354              	.LVL20:
 355              	.L27:
 441:Generated_Source\PSoC5/GBCL.c ****         }
 442:Generated_Source\PSoC5/GBCL.c **** 
 443:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableRxInt();
 356              		.loc 1 443 0
 357 0048 0122     		movs	r2, #1
 358 004a 054B     		ldr	r3, .L29+16
 359 004c 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/GBCL.c **** 
 445:Generated_Source\PSoC5/GBCL.c ****     #else
 446:Generated_Source\PSoC5/GBCL.c **** 
 447:Generated_Source\PSoC5/GBCL.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/GBCL.c ****         rxData = GBCL_RXDATA_REG;
 449:Generated_Source\PSoC5/GBCL.c **** 
 450:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/GBCL.c **** 
 452:Generated_Source\PSoC5/GBCL.c ****         return(rxData);
 453:Generated_Source\PSoC5/GBCL.c ****     }
 360              		.loc 1 453 0
 361 004e 7047     		bx	lr
 362              	.L30:
 363              		.align	2
 364              	.L29:
 365 0050 80E100E0 		.word	-536813184
 366 0054 00000000 		.word	.LANCHOR0
 367 0058 00000000 		.word	GBCL_rxBuffer
 368 005c 4D640040 		.word	1073767501
 369 0060 00E100E0 		.word	-536813312
 370              		.cfi_endproc
 371              	.LFE7:
 372              		.size	GBCL_ReadRxData, .-GBCL_ReadRxData
 373              		.section	.text.GBCL_ReadRxStatus,"ax",%progbits
 374              		.align	2
 375              		.global	GBCL_ReadRxStatus
 376              		.thumb
 377              		.thumb_func
 378              		.type	GBCL_ReadRxStatus, %function
 379              	GBCL_ReadRxStatus:
 380              	.LFB8:
 454:Generated_Source\PSoC5/GBCL.c **** 
 455:Generated_Source\PSoC5/GBCL.c **** 
 456:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_ReadRxStatus
 458:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/GBCL.c ****     *
 460:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 461:Generated_Source\PSoC5/GBCL.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/GBCL.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/GBCL.c ****     *
 464:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 465:Generated_Source\PSoC5/GBCL.c ****     *  None.
 466:Generated_Source\PSoC5/GBCL.c ****     *
 467:Generated_Source\PSoC5/GBCL.c ****     * Return:
 468:Generated_Source\PSoC5/GBCL.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/GBCL.c ****     *
 470:Generated_Source\PSoC5/GBCL.c ****     * Side Effect:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 16


 471:Generated_Source\PSoC5/GBCL.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/GBCL.c ****     *  register read.
 475:Generated_Source\PSoC5/GBCL.c ****     *
 476:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 477:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/GBCL.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/GBCL.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/GBCL.c ****     *   bits.
 483:Generated_Source\PSoC5/GBCL.c ****     *
 484:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/GBCL.c ****     {
 381              		.loc 1 486 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 487:Generated_Source\PSoC5/GBCL.c ****         uint8 status;
 488:Generated_Source\PSoC5/GBCL.c **** 
 489:Generated_Source\PSoC5/GBCL.c ****         status = GBCL_RXSTATUS_REG & GBCL_RX_HW_MASK;
 386              		.loc 1 489 0
 387 0000 074B     		ldr	r3, .L33
 388 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 389 0004 00F07F00 		and	r0, r0, #127
 390              	.LVL21:
 490:Generated_Source\PSoC5/GBCL.c **** 
 491:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_rxBufferOverflow != 0u)
 391              		.loc 1 492 0
 392 0008 064B     		ldr	r3, .L33+4
 393 000a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 394 000c 13F0FF0F 		tst	r3, #255
 395 0010 04D0     		beq	.L32
 493:Generated_Source\PSoC5/GBCL.c ****         {
 494:Generated_Source\PSoC5/GBCL.c ****             status |= GBCL_RX_STS_SOFT_BUFF_OVER;
 396              		.loc 1 494 0
 397 0012 40F08000 		orr	r0, r0, #128
 398              	.LVL22:
 495:Generated_Source\PSoC5/GBCL.c ****             GBCL_rxBufferOverflow = 0u;
 399              		.loc 1 495 0
 400 0016 0022     		movs	r2, #0
 401 0018 024B     		ldr	r3, .L33+4
 402 001a 5A71     		strb	r2, [r3, #5]
 403              	.L32:
 496:Generated_Source\PSoC5/GBCL.c ****         }
 497:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/GBCL.c **** 
 499:Generated_Source\PSoC5/GBCL.c ****         return(status);
 500:Generated_Source\PSoC5/GBCL.c ****     }
 404              		.loc 1 500 0
 405 001c 7047     		bx	lr
 406              	.L34:
 407 001e 00BF     		.align	2
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 17


 408              	.L33:
 409 0020 6F640040 		.word	1073767535
 410 0024 00000000 		.word	.LANCHOR0
 411              		.cfi_endproc
 412              	.LFE8:
 413              		.size	GBCL_ReadRxStatus, .-GBCL_ReadRxStatus
 414              		.section	.text.GBCL_GetChar,"ax",%progbits
 415              		.align	2
 416              		.global	GBCL_GetChar
 417              		.thumb
 418              		.thumb_func
 419              		.type	GBCL_GetChar, %function
 420              	GBCL_GetChar:
 421              	.LFB9:
 501:Generated_Source\PSoC5/GBCL.c **** 
 502:Generated_Source\PSoC5/GBCL.c **** 
 503:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_GetChar
 505:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/GBCL.c ****     *
 507:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 508:Generated_Source\PSoC5/GBCL.c ****     *  Returns the last received byte of data. GBCL_GetChar() is
 509:Generated_Source\PSoC5/GBCL.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/GBCL.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/GBCL.c ****     *
 512:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 513:Generated_Source\PSoC5/GBCL.c ****     *  None.
 514:Generated_Source\PSoC5/GBCL.c ****     *
 515:Generated_Source\PSoC5/GBCL.c ****     * Return:
 516:Generated_Source\PSoC5/GBCL.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/GBCL.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/GBCL.c ****     *
 519:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 520:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/GBCL.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/GBCL.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/GBCL.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/GBCL.c ****     *
 528:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 529:Generated_Source\PSoC5/GBCL.c ****     *  No.
 530:Generated_Source\PSoC5/GBCL.c ****     *
 531:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_GetChar(void) 
 533:Generated_Source\PSoC5/GBCL.c ****     {
 422              		.loc 1 533 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427              	.LVL23:
 534:Generated_Source\PSoC5/GBCL.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/GBCL.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/GBCL.c **** 
 537:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 18


 538:Generated_Source\PSoC5/GBCL.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/GBCL.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/GBCL.c **** 
 541:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableRxInt();
 428              		.loc 1 542 0
 429 0000 0122     		movs	r2, #1
 430 0002 1A4B     		ldr	r3, .L43
 431 0004 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/GBCL.c **** 
 544:Generated_Source\PSoC5/GBCL.c ****         locRxBufferRead  = GBCL_rxBufferRead;
 432              		.loc 1 544 0
 433 0006 1A4A     		ldr	r2, .L43+4
 434 0008 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 435 000a DBB2     		uxtb	r3, r3
 436              	.LVL24:
 545:Generated_Source\PSoC5/GBCL.c ****         locRxBufferWrite = GBCL_rxBufferWrite;
 437              		.loc 1 545 0
 438 000c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 439 000e C9B2     		uxtb	r1, r1
 440              	.LVL25:
 546:Generated_Source\PSoC5/GBCL.c **** 
 547:Generated_Source\PSoC5/GBCL.c ****         if( (GBCL_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 441              		.loc 1 547 0
 442 0010 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 443 0012 12F0FF0F 		tst	r2, #255
 444 0016 01D1     		bne	.L36
 445              		.loc 1 547 0 is_stmt 0 discriminator 1
 446 0018 8B42     		cmp	r3, r1
 447 001a 12D0     		beq	.L37
 448              	.L36:
 548:Generated_Source\PSoC5/GBCL.c ****         {
 549:Generated_Source\PSoC5/GBCL.c ****             rxData = GBCL_rxBuffer[locRxBufferRead];
 449              		.loc 1 549 0 is_stmt 1
 450 001c 154A     		ldr	r2, .L43+8
 451 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 452 0020 C0B2     		uxtb	r0, r0
 453              	.LVL26:
 550:Generated_Source\PSoC5/GBCL.c ****             locRxBufferRead++;
 454              		.loc 1 550 0
 455 0022 0133     		adds	r3, r3, #1
 456              	.LVL27:
 457 0024 DBB2     		uxtb	r3, r3
 458              	.LVL28:
 551:Generated_Source\PSoC5/GBCL.c ****             if(locRxBufferRead >= GBCL_RX_BUFFER_SIZE)
 459              		.loc 1 551 0
 460 0026 13F0800F 		tst	r3, #128
 461 002a 00D0     		beq	.L38
 552:Generated_Source\PSoC5/GBCL.c ****             {
 553:Generated_Source\PSoC5/GBCL.c ****                 locRxBufferRead = 0u;
 462              		.loc 1 553 0
 463 002c 0023     		movs	r3, #0
 464              	.LVL29:
 465              	.L38:
 554:Generated_Source\PSoC5/GBCL.c ****             }
 555:Generated_Source\PSoC5/GBCL.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/GBCL.c ****             GBCL_rxBufferRead = locRxBufferRead;
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 19


 466              		.loc 1 556 0
 467 002e 104A     		ldr	r2, .L43+4
 468 0030 9370     		strb	r3, [r2, #2]
 557:Generated_Source\PSoC5/GBCL.c **** 
 558:Generated_Source\PSoC5/GBCL.c ****             if(GBCL_rxBufferLoopDetect != 0u)
 469              		.loc 1 558 0
 470 0032 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 471              	.LVL30:
 472 0034 13F0FF0F 		tst	r3, #255
 473 0038 13D0     		beq	.L39
 559:Generated_Source\PSoC5/GBCL.c ****             {
 560:Generated_Source\PSoC5/GBCL.c ****                 GBCL_rxBufferLoopDetect = 0u;
 474              		.loc 1 560 0
 475 003a 0022     		movs	r2, #0
 476 003c 0C4B     		ldr	r3, .L43+4
 477 003e 1A71     		strb	r2, [r3, #4]
 478              	.LVL31:
 479 0040 0FE0     		b	.L39
 480              	.LVL32:
 481              	.L37:
 561:Generated_Source\PSoC5/GBCL.c ****                 #if( (GBCL_RX_INTERRUPT_ENABLED) && (GBCL_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/GBCL.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/GBCL.c ****                     #if( GBCL_HD_ENABLED )
 564:Generated_Source\PSoC5/GBCL.c ****                         if((GBCL_CONTROL_REG & GBCL_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/GBCL.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/GBCL.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/GBCL.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/GBCL.c ****                             */
 569:Generated_Source\PSoC5/GBCL.c ****                             GBCL_RXSTATUS_MASK_REG |= GBCL_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/GBCL.c ****                         }
 571:Generated_Source\PSoC5/GBCL.c ****                     #else
 572:Generated_Source\PSoC5/GBCL.c ****                         GBCL_RXSTATUS_MASK_REG |= GBCL_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/GBCL.c ****                     #endif /* end GBCL_HD_ENABLED */
 574:Generated_Source\PSoC5/GBCL.c ****                 #endif /* GBCL_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/GBCL.c ****             }
 576:Generated_Source\PSoC5/GBCL.c **** 
 577:Generated_Source\PSoC5/GBCL.c ****         }
 578:Generated_Source\PSoC5/GBCL.c ****         else
 579:Generated_Source\PSoC5/GBCL.c ****         {   rxStatus = GBCL_RXSTATUS_REG;
 482              		.loc 1 579 0
 483 0042 0D4B     		ldr	r3, .L43+12
 484              	.LVL33:
 485 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 486 0046 DBB2     		uxtb	r3, r3
 487              	.LVL34:
 580:Generated_Source\PSoC5/GBCL.c ****             if((rxStatus & GBCL_RX_STS_FIFO_NOTEMPTY) != 0u)
 488              		.loc 1 580 0
 489 0048 13F0200F 		tst	r3, #32
 490 004c 06D0     		beq	.L41
 581:Generated_Source\PSoC5/GBCL.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/GBCL.c ****                 rxData = GBCL_RXDATA_REG;
 491              		.loc 1 582 0
 492 004e 0B4A     		ldr	r2, .L43+16
 493 0050 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 494 0052 C0B2     		uxtb	r0, r0
 495              	.LVL35:
 583:Generated_Source\PSoC5/GBCL.c ****                 /*Check status on error*/
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 20


 584:Generated_Source\PSoC5/GBCL.c ****                 if((rxStatus & (GBCL_RX_STS_BREAK | GBCL_RX_STS_PAR_ERROR |
 496              		.loc 1 584 0
 497 0054 13F01E0F 		tst	r3, #30
 498 0058 02D1     		bne	.L42
 499 005a 02E0     		b	.L39
 500              	.LVL36:
 501              	.L41:
 534:Generated_Source\PSoC5/GBCL.c ****         uint8 rxStatus;
 502              		.loc 1 534 0
 503 005c 0020     		movs	r0, #0
 504 005e 00E0     		b	.L39
 505              	.LVL37:
 506              	.L42:
 585:Generated_Source\PSoC5/GBCL.c ****                                 GBCL_RX_STS_STOP_ERROR | GBCL_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/GBCL.c ****                 {
 587:Generated_Source\PSoC5/GBCL.c ****                     rxData = 0u;
 507              		.loc 1 587 0
 508 0060 0020     		movs	r0, #0
 509              	.LVL38:
 510              	.L39:
 588:Generated_Source\PSoC5/GBCL.c ****                 }
 589:Generated_Source\PSoC5/GBCL.c ****             }
 590:Generated_Source\PSoC5/GBCL.c ****         }
 591:Generated_Source\PSoC5/GBCL.c **** 
 592:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableRxInt();
 511              		.loc 1 592 0
 512 0062 0122     		movs	r2, #1
 513 0064 064B     		ldr	r3, .L43+20
 514 0066 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/GBCL.c **** 
 594:Generated_Source\PSoC5/GBCL.c ****     #else
 595:Generated_Source\PSoC5/GBCL.c **** 
 596:Generated_Source\PSoC5/GBCL.c ****         rxStatus =GBCL_RXSTATUS_REG;
 597:Generated_Source\PSoC5/GBCL.c ****         if((rxStatus & GBCL_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/GBCL.c ****         {
 599:Generated_Source\PSoC5/GBCL.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/GBCL.c ****             rxData = GBCL_RXDATA_REG;
 601:Generated_Source\PSoC5/GBCL.c **** 
 602:Generated_Source\PSoC5/GBCL.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/GBCL.c ****             if((rxStatus & (GBCL_RX_STS_BREAK | GBCL_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/GBCL.c ****                             GBCL_RX_STS_STOP_ERROR | GBCL_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/GBCL.c ****             {
 606:Generated_Source\PSoC5/GBCL.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/GBCL.c ****             }
 608:Generated_Source\PSoC5/GBCL.c ****         }
 609:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/GBCL.c **** 
 611:Generated_Source\PSoC5/GBCL.c ****         return(rxData);
 612:Generated_Source\PSoC5/GBCL.c ****     }
 515              		.loc 1 612 0
 516 0068 7047     		bx	lr
 517              	.L44:
 518 006a 00BF     		.align	2
 519              	.L43:
 520 006c 80E100E0 		.word	-536813184
 521 0070 00000000 		.word	.LANCHOR0
 522 0074 00000000 		.word	GBCL_rxBuffer
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 21


 523 0078 6F640040 		.word	1073767535
 524 007c 4D640040 		.word	1073767501
 525 0080 00E100E0 		.word	-536813312
 526              		.cfi_endproc
 527              	.LFE9:
 528              		.size	GBCL_GetChar, .-GBCL_GetChar
 529              		.section	.text.GBCL_GetByte,"ax",%progbits
 530              		.align	2
 531              		.global	GBCL_GetByte
 532              		.thumb
 533              		.thumb_func
 534              		.type	GBCL_GetByte, %function
 535              	GBCL_GetByte:
 536              	.LFB10:
 613:Generated_Source\PSoC5/GBCL.c **** 
 614:Generated_Source\PSoC5/GBCL.c **** 
 615:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_GetByte
 617:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/GBCL.c ****     *
 619:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 620:Generated_Source\PSoC5/GBCL.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/GBCL.c ****     *  condition.
 622:Generated_Source\PSoC5/GBCL.c ****     *
 623:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 624:Generated_Source\PSoC5/GBCL.c ****     *  None.
 625:Generated_Source\PSoC5/GBCL.c ****     *
 626:Generated_Source\PSoC5/GBCL.c ****     * Return:
 627:Generated_Source\PSoC5/GBCL.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/GBCL.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/GBCL.c ****     *
 630:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 631:Generated_Source\PSoC5/GBCL.c ****     *  No.
 632:Generated_Source\PSoC5/GBCL.c ****     *
 633:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/GBCL.c ****     uint16 GBCL_GetByte(void) 
 635:Generated_Source\PSoC5/GBCL.c ****     {
 537              		.loc 1 635 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541 0000 10B5     		push	{r4, lr}
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 4, -8
 544              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/GBCL.c ****         
 637:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/GBCL.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableRxInt();
 545              		.loc 1 640 0
 546 0002 0123     		movs	r3, #1
 547 0004 064A     		ldr	r2, .L47
 548 0006 1360     		str	r3, [r2]
 641:Generated_Source\PSoC5/GBCL.c ****         locErrorStatus = (uint16)GBCL_errorStatus;
 549              		.loc 1 641 0
 550 0008 064A     		ldr	r2, .L47+4
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 22


 551 000a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 552              	.LVL39:
 642:Generated_Source\PSoC5/GBCL.c ****         GBCL_errorStatus = 0u;
 553              		.loc 1 642 0
 554 000c 0021     		movs	r1, #0
 555 000e 1170     		strb	r1, [r2]
 643:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableRxInt();
 556              		.loc 1 643 0
 557 0010 054A     		ldr	r2, .L47+8
 558 0012 1360     		str	r3, [r2]
 644:Generated_Source\PSoC5/GBCL.c ****         return ( (uint16)(locErrorStatus << 8u) | GBCL_ReadRxData() );
 559              		.loc 1 644 0
 560 0014 2402     		lsls	r4, r4, #8
 561              	.LVL40:
 562 0016 FFF7FEFF 		bl	GBCL_ReadRxData
 563              	.LVL41:
 564 001a 2043     		orrs	r0, r0, r4
 645:Generated_Source\PSoC5/GBCL.c ****     #else
 646:Generated_Source\PSoC5/GBCL.c ****         return ( ((uint16)GBCL_ReadRxStatus() << 8u) | GBCL_ReadRxData() );
 647:Generated_Source\PSoC5/GBCL.c ****     #endif /* GBCL_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/GBCL.c ****         
 649:Generated_Source\PSoC5/GBCL.c ****     }
 565              		.loc 1 649 0
 566 001c 80B2     		uxth	r0, r0
 567 001e 10BD     		pop	{r4, pc}
 568              	.L48:
 569              		.align	2
 570              	.L47:
 571 0020 80E100E0 		.word	-536813184
 572 0024 00000000 		.word	.LANCHOR0
 573 0028 00E100E0 		.word	-536813312
 574              		.cfi_endproc
 575              	.LFE10:
 576              		.size	GBCL_GetByte, .-GBCL_GetByte
 577              		.section	.text.GBCL_GetRxBufferSize,"ax",%progbits
 578              		.align	2
 579              		.global	GBCL_GetRxBufferSize
 580              		.thumb
 581              		.thumb_func
 582              		.type	GBCL_GetRxBufferSize, %function
 583              	GBCL_GetRxBufferSize:
 584              	.LFB11:
 650:Generated_Source\PSoC5/GBCL.c **** 
 651:Generated_Source\PSoC5/GBCL.c **** 
 652:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_GetRxBufferSize
 654:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/GBCL.c ****     *
 656:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 657:Generated_Source\PSoC5/GBCL.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/GBCL.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/GBCL.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/GBCL.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/GBCL.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/GBCL.c ****     *    account.
 663:Generated_Source\PSoC5/GBCL.c ****     *
 664:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 23


 665:Generated_Source\PSoC5/GBCL.c ****     *  None.
 666:Generated_Source\PSoC5/GBCL.c ****     *
 667:Generated_Source\PSoC5/GBCL.c ****     * Return:
 668:Generated_Source\PSoC5/GBCL.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/GBCL.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/GBCL.c ****     *
 671:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 672:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/GBCL.c ****     *
 676:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 677:Generated_Source\PSoC5/GBCL.c ****     *  No.
 678:Generated_Source\PSoC5/GBCL.c ****     *
 679:Generated_Source\PSoC5/GBCL.c ****     * Theory:
 680:Generated_Source\PSoC5/GBCL.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/GBCL.c ****     *
 682:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/GBCL.c ****                                                             
 685:Generated_Source\PSoC5/GBCL.c ****     {
 585              		.loc 1 685 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 686:Generated_Source\PSoC5/GBCL.c ****         uint8 size;
 687:Generated_Source\PSoC5/GBCL.c **** 
 688:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/GBCL.c **** 
 690:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableRxInt();
 590              		.loc 1 691 0
 591 0000 0122     		movs	r2, #1
 592 0002 144B     		ldr	r3, .L54
 593 0004 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/GBCL.c **** 
 693:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_rxBufferRead == GBCL_rxBufferWrite)
 594              		.loc 1 693 0
 595 0006 144B     		ldr	r3, .L54+4
 596 0008 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 597 000a D2B2     		uxtb	r2, r2
 598 000c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 599 000e DBB2     		uxtb	r3, r3
 600 0010 9A42     		cmp	r2, r3
 601 0012 06D1     		bne	.L50
 694:Generated_Source\PSoC5/GBCL.c ****         {
 695:Generated_Source\PSoC5/GBCL.c ****             if(GBCL_rxBufferLoopDetect != 0u)
 602              		.loc 1 695 0
 603 0014 104B     		ldr	r3, .L54+4
 604 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 605 0018 13F0FF0F 		tst	r3, #255
 606 001c 15D0     		beq	.L53
 696:Generated_Source\PSoC5/GBCL.c ****             {
 697:Generated_Source\PSoC5/GBCL.c ****                 size = GBCL_RX_BUFFER_SIZE;
 607              		.loc 1 697 0
 608 001e 8020     		movs	r0, #128
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 24


 609 0020 14E0     		b	.L51
 610              	.L50:
 698:Generated_Source\PSoC5/GBCL.c ****             }
 699:Generated_Source\PSoC5/GBCL.c ****             else
 700:Generated_Source\PSoC5/GBCL.c ****             {
 701:Generated_Source\PSoC5/GBCL.c ****                 size = 0u;
 702:Generated_Source\PSoC5/GBCL.c ****             }
 703:Generated_Source\PSoC5/GBCL.c ****         }
 704:Generated_Source\PSoC5/GBCL.c ****         else if(GBCL_rxBufferRead < GBCL_rxBufferWrite)
 611              		.loc 1 704 0
 612 0022 0D4B     		ldr	r3, .L54+4
 613 0024 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 614 0026 D2B2     		uxtb	r2, r2
 615 0028 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 616 002a DBB2     		uxtb	r3, r3
 617 002c 9A42     		cmp	r2, r3
 618 002e 05D2     		bcs	.L52
 705:Generated_Source\PSoC5/GBCL.c ****         {
 706:Generated_Source\PSoC5/GBCL.c ****             size = (GBCL_rxBufferWrite - GBCL_rxBufferRead);
 619              		.loc 1 706 0
 620 0030 094A     		ldr	r2, .L54+4
 621 0032 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 622 0034 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 623 0036 181A     		subs	r0, r3, r0
 624 0038 C0B2     		uxtb	r0, r0
 625              	.LVL42:
 626 003a 07E0     		b	.L51
 627              	.LVL43:
 628              	.L52:
 707:Generated_Source\PSoC5/GBCL.c ****         }
 708:Generated_Source\PSoC5/GBCL.c ****         else
 709:Generated_Source\PSoC5/GBCL.c ****         {
 710:Generated_Source\PSoC5/GBCL.c ****             size = (GBCL_RX_BUFFER_SIZE - GBCL_rxBufferRead) + GBCL_rxBufferWrite;
 629              		.loc 1 710 0
 630 003c 064A     		ldr	r2, .L54+4
 631 003e D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 632 0040 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 633 0042 181A     		subs	r0, r3, r0
 634 0044 8038     		subs	r0, r0, #128
 635 0046 C0B2     		uxtb	r0, r0
 636              	.LVL44:
 637 0048 00E0     		b	.L51
 638              	.LVL45:
 639              	.L53:
 701:Generated_Source\PSoC5/GBCL.c ****             }
 640              		.loc 1 701 0
 641 004a 0020     		movs	r0, #0
 642              	.L51:
 643              	.LVL46:
 711:Generated_Source\PSoC5/GBCL.c ****         }
 712:Generated_Source\PSoC5/GBCL.c **** 
 713:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableRxInt();
 644              		.loc 1 713 0
 645 004c 0122     		movs	r2, #1
 646 004e 034B     		ldr	r3, .L54+8
 647 0050 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/GBCL.c **** 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 25


 715:Generated_Source\PSoC5/GBCL.c ****     #else
 716:Generated_Source\PSoC5/GBCL.c **** 
 717:Generated_Source\PSoC5/GBCL.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/GBCL.c ****         size = ((GBCL_RXSTATUS_REG & GBCL_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/GBCL.c **** 
 720:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/GBCL.c **** 
 722:Generated_Source\PSoC5/GBCL.c ****         return(size);
 723:Generated_Source\PSoC5/GBCL.c ****     }
 648              		.loc 1 723 0
 649 0052 7047     		bx	lr
 650              	.L55:
 651              		.align	2
 652              	.L54:
 653 0054 80E100E0 		.word	-536813184
 654 0058 00000000 		.word	.LANCHOR0
 655 005c 00E100E0 		.word	-536813312
 656              		.cfi_endproc
 657              	.LFE11:
 658              		.size	GBCL_GetRxBufferSize, .-GBCL_GetRxBufferSize
 659              		.section	.text.GBCL_ClearRxBuffer,"ax",%progbits
 660              		.align	2
 661              		.global	GBCL_ClearRxBuffer
 662              		.thumb
 663              		.thumb_func
 664              		.type	GBCL_ClearRxBuffer, %function
 665              	GBCL_ClearRxBuffer:
 666              	.LFB12:
 724:Generated_Source\PSoC5/GBCL.c **** 
 725:Generated_Source\PSoC5/GBCL.c **** 
 726:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_ClearRxBuffer
 728:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/GBCL.c ****     *
 730:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 731:Generated_Source\PSoC5/GBCL.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/GBCL.c ****     *
 733:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 734:Generated_Source\PSoC5/GBCL.c ****     *  None.
 735:Generated_Source\PSoC5/GBCL.c ****     *
 736:Generated_Source\PSoC5/GBCL.c ****     * Return:
 737:Generated_Source\PSoC5/GBCL.c ****     *  None.
 738:Generated_Source\PSoC5/GBCL.c ****     *
 739:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 740:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/GBCL.c ****     *
 745:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 746:Generated_Source\PSoC5/GBCL.c ****     *  No.
 747:Generated_Source\PSoC5/GBCL.c ****     *
 748:Generated_Source\PSoC5/GBCL.c ****     * Theory:
 749:Generated_Source\PSoC5/GBCL.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/GBCL.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/GBCL.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/GBCL.c ****     *
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 26


 753:Generated_Source\PSoC5/GBCL.c ****     * Side Effects:
 754:Generated_Source\PSoC5/GBCL.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/GBCL.c ****     *
 756:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/GBCL.c ****     void GBCL_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/GBCL.c ****     {
 667              		.loc 1 758 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671 0000 08B5     		push	{r3, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 3, -8
 674              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/GBCL.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/GBCL.c **** 
 761:Generated_Source\PSoC5/GBCL.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/GBCL.c ****         enableInterrupts = CyEnterCriticalSection();
 675              		.loc 1 762 0
 676 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 677              	.LVL47:
 763:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXDATA_AUX_CTL_REG |= (uint8)  GBCL_RX_FIFO_CLR;
 678              		.loc 1 763 0
 679 0006 0B4B     		ldr	r3, .L58
 680 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 681 000a 42F00102 		orr	r2, r2, #1
 682 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXDATA_AUX_CTL_REG &= (uint8) ~GBCL_RX_FIFO_CLR;
 683              		.loc 1 764 0
 684 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 685 0012 02F0FE02 		and	r2, r2, #254
 686 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/GBCL.c ****         CyExitCriticalSection(enableInterrupts);
 687              		.loc 1 765 0
 688 0018 FFF7FEFF 		bl	CyExitCriticalSection
 689              	.LVL48:
 766:Generated_Source\PSoC5/GBCL.c **** 
 767:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/GBCL.c **** 
 769:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableRxInt();
 690              		.loc 1 770 0
 691 001c 0121     		movs	r1, #1
 692 001e 064B     		ldr	r3, .L58+4
 693 0020 1960     		str	r1, [r3]
 771:Generated_Source\PSoC5/GBCL.c **** 
 772:Generated_Source\PSoC5/GBCL.c ****         GBCL_rxBufferRead = 0u;
 694              		.loc 1 772 0
 695 0022 064B     		ldr	r3, .L58+8
 696 0024 0022     		movs	r2, #0
 697 0026 9A70     		strb	r2, [r3, #2]
 773:Generated_Source\PSoC5/GBCL.c ****         GBCL_rxBufferWrite = 0u;
 698              		.loc 1 773 0
 699 0028 DA70     		strb	r2, [r3, #3]
 774:Generated_Source\PSoC5/GBCL.c ****         GBCL_rxBufferLoopDetect = 0u;
 700              		.loc 1 774 0
 701 002a 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 27


 775:Generated_Source\PSoC5/GBCL.c ****         GBCL_rxBufferOverflow = 0u;
 702              		.loc 1 775 0
 703 002c 5A71     		strb	r2, [r3, #5]
 776:Generated_Source\PSoC5/GBCL.c **** 
 777:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableRxInt();
 704              		.loc 1 777 0
 705 002e 044B     		ldr	r3, .L58+12
 706 0030 1960     		str	r1, [r3]
 707 0032 08BD     		pop	{r3, pc}
 708              	.L59:
 709              		.align	2
 710              	.L58:
 711 0034 9D640040 		.word	1073767581
 712 0038 80E100E0 		.word	-536813184
 713 003c 00000000 		.word	.LANCHOR0
 714 0040 00E100E0 		.word	-536813312
 715              		.cfi_endproc
 716              	.LFE12:
 717              		.size	GBCL_ClearRxBuffer, .-GBCL_ClearRxBuffer
 718              		.section	.text.GBCL_SetRxAddressMode,"ax",%progbits
 719              		.align	2
 720              		.global	GBCL_SetRxAddressMode
 721              		.thumb
 722              		.thumb_func
 723              		.type	GBCL_SetRxAddressMode, %function
 724              	GBCL_SetRxAddressMode:
 725              	.LFB13:
 778:Generated_Source\PSoC5/GBCL.c **** 
 779:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/GBCL.c **** 
 781:Generated_Source\PSoC5/GBCL.c ****     }
 782:Generated_Source\PSoC5/GBCL.c **** 
 783:Generated_Source\PSoC5/GBCL.c **** 
 784:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetRxAddressMode
 786:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/GBCL.c ****     *
 788:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 789:Generated_Source\PSoC5/GBCL.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/GBCL.c ****     *  UART.
 791:Generated_Source\PSoC5/GBCL.c ****     *
 792:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 793:Generated_Source\PSoC5/GBCL.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/GBCL.c ****     *  GBCL__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/GBCL.c ****     *                                               detection
 796:Generated_Source\PSoC5/GBCL.c ****     *  GBCL__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/GBCL.c ****     *                                               address detection
 798:Generated_Source\PSoC5/GBCL.c ****     *  GBCL__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/GBCL.c ****     *                                               detection
 800:Generated_Source\PSoC5/GBCL.c ****     *  GBCL__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/GBCL.c ****     *                                               address detection
 802:Generated_Source\PSoC5/GBCL.c ****     *  GBCL__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/GBCL.c ****     *
 804:Generated_Source\PSoC5/GBCL.c ****     * Return:
 805:Generated_Source\PSoC5/GBCL.c ****     *  None.
 806:Generated_Source\PSoC5/GBCL.c ****     *
 807:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 28


 808:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/GBCL.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/GBCL.c ****     *
 812:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/GBCL.c ****                                                         
 815:Generated_Source\PSoC5/GBCL.c ****     {
 726              		.loc 1 815 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731              	.LVL49:
 732 0000 7047     		bx	lr
 733              		.cfi_endproc
 734              	.LFE13:
 735              		.size	GBCL_SetRxAddressMode, .-GBCL_SetRxAddressMode
 736 0002 00BF     		.section	.text.GBCL_SetRxAddress1,"ax",%progbits
 737              		.align	2
 738              		.global	GBCL_SetRxAddress1
 739              		.thumb
 740              		.thumb_func
 741              		.type	GBCL_SetRxAddress1, %function
 742              	GBCL_SetRxAddress1:
 743              	.LFB14:
 816:Generated_Source\PSoC5/GBCL.c ****         #if(GBCL_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/GBCL.c ****             #if(GBCL_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/GBCL.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/GBCL.c ****                 {
 820:Generated_Source\PSoC5/GBCL.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/GBCL.c ****                 }
 822:Generated_Source\PSoC5/GBCL.c ****             #else /* GBCL_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/GBCL.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/GBCL.c ****                 tmpCtrl = GBCL_CONTROL_REG & (uint8)~GBCL_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/GBCL.c ****                 tmpCtrl |= (uint8)(addressMode << GBCL_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/GBCL.c ****                 GBCL_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/GBCL.c **** 
 828:Generated_Source\PSoC5/GBCL.c ****                 #if(GBCL_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/GBCL.c ****                    (GBCL_RXBUFFERSIZE > GBCL_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/GBCL.c ****                     GBCL_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/GBCL.c ****                     GBCL_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/GBCL.c ****                 #endif /* End GBCL_RXBUFFERSIZE > GBCL_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/GBCL.c ****             #endif /* End GBCL_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/GBCL.c ****         #else /* GBCL_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/GBCL.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/GBCL.c ****             {
 837:Generated_Source\PSoC5/GBCL.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/GBCL.c ****             }
 839:Generated_Source\PSoC5/GBCL.c ****         #endif /* End GBCL_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/GBCL.c ****     }
 841:Generated_Source\PSoC5/GBCL.c **** 
 842:Generated_Source\PSoC5/GBCL.c **** 
 843:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetRxAddress1
 845:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/GBCL.c ****     *
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 29


 847:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 848:Generated_Source\PSoC5/GBCL.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/GBCL.c ****     *
 850:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 851:Generated_Source\PSoC5/GBCL.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/GBCL.c ****     *
 853:Generated_Source\PSoC5/GBCL.c ****     * Return:
 854:Generated_Source\PSoC5/GBCL.c ****     *  None.
 855:Generated_Source\PSoC5/GBCL.c ****     *
 856:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/GBCL.c ****     {
 744              		.loc 1 858 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749              	.LVL50:
 859:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXADDRESS1_REG = address;
 750              		.loc 1 859 0
 751 0000 014B     		ldr	r3, .L62
 752 0002 1870     		strb	r0, [r3]
 753 0004 7047     		bx	lr
 754              	.L63:
 755 0006 00BF     		.align	2
 756              	.L62:
 757 0008 2D640040 		.word	1073767469
 758              		.cfi_endproc
 759              	.LFE14:
 760              		.size	GBCL_SetRxAddress1, .-GBCL_SetRxAddress1
 761              		.section	.text.GBCL_SetRxAddress2,"ax",%progbits
 762              		.align	2
 763              		.global	GBCL_SetRxAddress2
 764              		.thumb
 765              		.thumb_func
 766              		.type	GBCL_SetRxAddress2, %function
 767              	GBCL_SetRxAddress2:
 768              	.LFB15:
 860:Generated_Source\PSoC5/GBCL.c ****     }
 861:Generated_Source\PSoC5/GBCL.c **** 
 862:Generated_Source\PSoC5/GBCL.c **** 
 863:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetRxAddress2
 865:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/GBCL.c ****     *
 867:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 868:Generated_Source\PSoC5/GBCL.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/GBCL.c ****     *
 870:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 871:Generated_Source\PSoC5/GBCL.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/GBCL.c ****     *
 873:Generated_Source\PSoC5/GBCL.c ****     * Return:
 874:Generated_Source\PSoC5/GBCL.c ****     *  None.
 875:Generated_Source\PSoC5/GBCL.c ****     *
 876:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/GBCL.c ****     {
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 30


 769              		.loc 1 878 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 774              	.LVL51:
 879:Generated_Source\PSoC5/GBCL.c ****         GBCL_RXADDRESS2_REG = address;
 775              		.loc 1 879 0
 776 0000 014B     		ldr	r3, .L65
 777 0002 1870     		strb	r0, [r3]
 778 0004 7047     		bx	lr
 779              	.L66:
 780 0006 00BF     		.align	2
 781              	.L65:
 782 0008 3D640040 		.word	1073767485
 783              		.cfi_endproc
 784              	.LFE15:
 785              		.size	GBCL_SetRxAddress2, .-GBCL_SetRxAddress2
 786              		.section	.text.GBCL_SetTxInterruptMode,"ax",%progbits
 787              		.align	2
 788              		.global	GBCL_SetTxInterruptMode
 789              		.thumb
 790              		.thumb_func
 791              		.type	GBCL_SetTxInterruptMode, %function
 792              	GBCL_SetTxInterruptMode:
 793              	.LFB16:
 880:Generated_Source\PSoC5/GBCL.c ****     }
 881:Generated_Source\PSoC5/GBCL.c **** 
 882:Generated_Source\PSoC5/GBCL.c **** #endif  /* GBCL_RX_ENABLED || GBCL_HD_ENABLED*/
 883:Generated_Source\PSoC5/GBCL.c **** 
 884:Generated_Source\PSoC5/GBCL.c **** 
 885:Generated_Source\PSoC5/GBCL.c **** #if( (GBCL_TX_ENABLED) || (GBCL_HD_ENABLED) )
 886:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetTxInterruptMode
 888:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/GBCL.c ****     *
 890:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 891:Generated_Source\PSoC5/GBCL.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/GBCL.c ****     *  interrupt.
 893:Generated_Source\PSoC5/GBCL.c ****     *
 894:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 895:Generated_Source\PSoC5/GBCL.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/GBCL.c ****     *
 901:Generated_Source\PSoC5/GBCL.c ****     * Return:
 902:Generated_Source\PSoC5/GBCL.c ****     *  None.
 903:Generated_Source\PSoC5/GBCL.c ****     *
 904:Generated_Source\PSoC5/GBCL.c ****     * Theory:
 905:Generated_Source\PSoC5/GBCL.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/GBCL.c ****     *
 907:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/GBCL.c ****     {
 794              		.loc 1 909 0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 31


 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799              	.LVL52:
 910:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXSTATUS_MASK_REG = intSrc;
 800              		.loc 1 910 0
 801 0000 014B     		ldr	r3, .L68
 802 0002 1870     		strb	r0, [r3]
 803 0004 7047     		bx	lr
 804              	.L69:
 805 0006 00BF     		.align	2
 806              	.L68:
 807 0008 8C640040 		.word	1073767564
 808              		.cfi_endproc
 809              	.LFE16:
 810              		.size	GBCL_SetTxInterruptMode, .-GBCL_SetTxInterruptMode
 811              		.section	.text.GBCL_WriteTxData,"ax",%progbits
 812              		.align	2
 813              		.global	GBCL_WriteTxData
 814              		.thumb
 815              		.thumb_func
 816              		.type	GBCL_WriteTxData, %function
 817              	GBCL_WriteTxData:
 818              	.LFB17:
 911:Generated_Source\PSoC5/GBCL.c ****     }
 912:Generated_Source\PSoC5/GBCL.c **** 
 913:Generated_Source\PSoC5/GBCL.c **** 
 914:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_WriteTxData
 916:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/GBCL.c ****     *
 918:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 919:Generated_Source\PSoC5/GBCL.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/GBCL.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/GBCL.c ****     *  separately.
 922:Generated_Source\PSoC5/GBCL.c ****     *
 923:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 924:Generated_Source\PSoC5/GBCL.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/GBCL.c ****     *
 926:Generated_Source\PSoC5/GBCL.c ****     * Return:
 927:Generated_Source\PSoC5/GBCL.c ****     * None.
 928:Generated_Source\PSoC5/GBCL.c ****     *
 929:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
 930:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/GBCL.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/GBCL.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/GBCL.c ****     *    initialized.
 937:Generated_Source\PSoC5/GBCL.c ****     *
 938:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
 939:Generated_Source\PSoC5/GBCL.c ****     *  No.
 940:Generated_Source\PSoC5/GBCL.c ****     *
 941:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/GBCL.c ****     void GBCL_WriteTxData(uint8 txDataByte) 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 32


 943:Generated_Source\PSoC5/GBCL.c ****     {
 819              		.loc 1 943 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              		@ link register save eliminated.
 824              	.LVL53:
 944:Generated_Source\PSoC5/GBCL.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_initVar != 0u)
 825              		.loc 1 945 0
 826 0000 024B     		ldr	r3, .L72
 827 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 828 0004 0BB1     		cbz	r3, .L70
 946:Generated_Source\PSoC5/GBCL.c ****         {
 947:Generated_Source\PSoC5/GBCL.c ****         #if (GBCL_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/GBCL.c **** 
 949:Generated_Source\PSoC5/GBCL.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/GBCL.c ****             GBCL_DisableTxInt();
 951:Generated_Source\PSoC5/GBCL.c **** 
 952:Generated_Source\PSoC5/GBCL.c ****             if( (GBCL_txBufferRead == GBCL_txBufferWrite) &&
 953:Generated_Source\PSoC5/GBCL.c ****                 ((GBCL_TXSTATUS_REG & GBCL_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/GBCL.c ****             {
 955:Generated_Source\PSoC5/GBCL.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/GBCL.c ****                 GBCL_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/GBCL.c ****             }
 958:Generated_Source\PSoC5/GBCL.c ****             else
 959:Generated_Source\PSoC5/GBCL.c ****             {
 960:Generated_Source\PSoC5/GBCL.c ****                 if(GBCL_txBufferWrite >= GBCL_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/GBCL.c ****                 {
 962:Generated_Source\PSoC5/GBCL.c ****                     GBCL_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/GBCL.c ****                 }
 964:Generated_Source\PSoC5/GBCL.c **** 
 965:Generated_Source\PSoC5/GBCL.c ****                 GBCL_txBuffer[GBCL_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/GBCL.c **** 
 967:Generated_Source\PSoC5/GBCL.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/GBCL.c ****                 GBCL_txBufferWrite++;
 969:Generated_Source\PSoC5/GBCL.c ****             }
 970:Generated_Source\PSoC5/GBCL.c **** 
 971:Generated_Source\PSoC5/GBCL.c ****             GBCL_EnableTxInt();
 972:Generated_Source\PSoC5/GBCL.c **** 
 973:Generated_Source\PSoC5/GBCL.c ****         #else
 974:Generated_Source\PSoC5/GBCL.c **** 
 975:Generated_Source\PSoC5/GBCL.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXDATA_REG = txDataByte;
 829              		.loc 1 976 0
 830 0006 024B     		ldr	r3, .L72+4
 831 0008 1870     		strb	r0, [r3]
 832              	.L70:
 833 000a 7047     		bx	lr
 834              	.L73:
 835              		.align	2
 836              	.L72:
 837 000c 00000000 		.word	.LANCHOR0
 838 0010 4C640040 		.word	1073767500
 839              		.cfi_endproc
 840              	.LFE17:
 841              		.size	GBCL_WriteTxData, .-GBCL_WriteTxData
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 33


 842              		.section	.text.GBCL_ReadTxStatus,"ax",%progbits
 843              		.align	2
 844              		.global	GBCL_ReadTxStatus
 845              		.thumb
 846              		.thumb_func
 847              		.type	GBCL_ReadTxStatus, %function
 848              	GBCL_ReadTxStatus:
 849              	.LFB18:
 977:Generated_Source\PSoC5/GBCL.c **** 
 978:Generated_Source\PSoC5/GBCL.c ****         #endif /*(GBCL_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/GBCL.c ****         }
 980:Generated_Source\PSoC5/GBCL.c ****     }
 981:Generated_Source\PSoC5/GBCL.c **** 
 982:Generated_Source\PSoC5/GBCL.c **** 
 983:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_ReadTxStatus
 985:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/GBCL.c ****     *
 987:Generated_Source\PSoC5/GBCL.c ****     * Summary:
 988:Generated_Source\PSoC5/GBCL.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/GBCL.c ****     *
 990:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
 991:Generated_Source\PSoC5/GBCL.c ****     *  None.
 992:Generated_Source\PSoC5/GBCL.c ****     *
 993:Generated_Source\PSoC5/GBCL.c ****     * Return:
 994:Generated_Source\PSoC5/GBCL.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/GBCL.c ****     *
 996:Generated_Source\PSoC5/GBCL.c ****     * Theory:
 997:Generated_Source\PSoC5/GBCL.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/GBCL.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/GBCL.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/GBCL.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/GBCL.c ****     *
1002:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/GBCL.c ****     {
 850              		.loc 1 1004 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
1005:Generated_Source\PSoC5/GBCL.c ****         return(GBCL_TXSTATUS_REG);
 855              		.loc 1 1005 0
 856 0000 014B     		ldr	r3, .L75
 857 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/GBCL.c ****     }
 858              		.loc 1 1006 0
 859 0004 7047     		bx	lr
 860              	.L76:
 861 0006 00BF     		.align	2
 862              	.L75:
 863 0008 6C640040 		.word	1073767532
 864              		.cfi_endproc
 865              	.LFE18:
 866              		.size	GBCL_ReadTxStatus, .-GBCL_ReadTxStatus
 867              		.section	.text.GBCL_PutChar,"ax",%progbits
 868              		.align	2
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 34


 869              		.global	GBCL_PutChar
 870              		.thumb
 871              		.thumb_func
 872              		.type	GBCL_PutChar, %function
 873              	GBCL_PutChar:
 874              	.LFB19:
1007:Generated_Source\PSoC5/GBCL.c **** 
1008:Generated_Source\PSoC5/GBCL.c **** 
1009:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_PutChar
1011:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/GBCL.c ****     *
1013:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1014:Generated_Source\PSoC5/GBCL.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/GBCL.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/GBCL.c ****     *  hold the data.
1017:Generated_Source\PSoC5/GBCL.c ****     *
1018:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1019:Generated_Source\PSoC5/GBCL.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/GBCL.c ****     *
1021:Generated_Source\PSoC5/GBCL.c ****     * Return:
1022:Generated_Source\PSoC5/GBCL.c ****     *  None.
1023:Generated_Source\PSoC5/GBCL.c ****     *
1024:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1025:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/GBCL.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/GBCL.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/GBCL.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/GBCL.c ****     *     initialized.
1033:Generated_Source\PSoC5/GBCL.c ****     *
1034:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1035:Generated_Source\PSoC5/GBCL.c ****     *  No.
1036:Generated_Source\PSoC5/GBCL.c ****     *
1037:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1038:Generated_Source\PSoC5/GBCL.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/GBCL.c ****     *
1040:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/GBCL.c ****     void GBCL_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/GBCL.c ****     {
 875              		.loc 1 1042 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880              	.LVL54:
 881              	.L78:
1043:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/GBCL.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/GBCL.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/GBCL.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/GBCL.c ****         */
1048:Generated_Source\PSoC5/GBCL.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/GBCL.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/GBCL.c **** 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 35


1051:Generated_Source\PSoC5/GBCL.c ****         do
1052:Generated_Source\PSoC5/GBCL.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/GBCL.c **** 
1054:Generated_Source\PSoC5/GBCL.c ****         #if ((GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/GBCL.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/GBCL.c ****             GBCL_DisableTxInt();
1057:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/GBCL.c **** 
1059:Generated_Source\PSoC5/GBCL.c ****             locTxBufferWrite = GBCL_txBufferWrite;
1060:Generated_Source\PSoC5/GBCL.c ****             locTxBufferRead  = GBCL_txBufferRead;
1061:Generated_Source\PSoC5/GBCL.c **** 
1062:Generated_Source\PSoC5/GBCL.c ****         #if ((GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/GBCL.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/GBCL.c ****             GBCL_EnableTxInt();
1065:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/GBCL.c ****         }
1067:Generated_Source\PSoC5/GBCL.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/GBCL.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/GBCL.c ****                                 (uint8)(GBCL_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/GBCL.c **** 
1071:Generated_Source\PSoC5/GBCL.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/GBCL.c ****             ((GBCL_TXSTATUS_REG & GBCL_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/GBCL.c ****         {
1074:Generated_Source\PSoC5/GBCL.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/GBCL.c ****             GBCL_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/GBCL.c ****         }
1077:Generated_Source\PSoC5/GBCL.c ****         else
1078:Generated_Source\PSoC5/GBCL.c ****         {
1079:Generated_Source\PSoC5/GBCL.c ****             if(locTxBufferWrite >= GBCL_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/GBCL.c ****             {
1081:Generated_Source\PSoC5/GBCL.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/GBCL.c ****             }
1083:Generated_Source\PSoC5/GBCL.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/GBCL.c ****             GBCL_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/GBCL.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/GBCL.c **** 
1087:Generated_Source\PSoC5/GBCL.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/GBCL.c ****         #if ((GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/GBCL.c ****             GBCL_DisableTxInt();
1090:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/GBCL.c **** 
1092:Generated_Source\PSoC5/GBCL.c ****             GBCL_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/GBCL.c **** 
1094:Generated_Source\PSoC5/GBCL.c ****         #if ((GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/GBCL.c ****             GBCL_EnableTxInt();
1096:Generated_Source\PSoC5/GBCL.c ****         #endif /* (GBCL_TX_BUFFER_SIZE > GBCL_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/GBCL.c **** 
1098:Generated_Source\PSoC5/GBCL.c ****             if(0u != (GBCL_TXSTATUS_REG & GBCL_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/GBCL.c ****             {
1100:Generated_Source\PSoC5/GBCL.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/GBCL.c ****                 GBCL_SetPendingTxInt();
1102:Generated_Source\PSoC5/GBCL.c ****             }
1103:Generated_Source\PSoC5/GBCL.c ****         }
1104:Generated_Source\PSoC5/GBCL.c **** 
1105:Generated_Source\PSoC5/GBCL.c ****     #else
1106:Generated_Source\PSoC5/GBCL.c **** 
1107:Generated_Source\PSoC5/GBCL.c ****         while((GBCL_TXSTATUS_REG & GBCL_TX_STS_FIFO_FULL) != 0u)
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 36


 882              		.loc 1 1107 0 discriminator 1
 883 0000 034B     		ldr	r3, .L79
 884 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 885 0004 13F0040F 		tst	r3, #4
 886 0008 FAD1     		bne	.L78
1108:Generated_Source\PSoC5/GBCL.c ****         {
1109:Generated_Source\PSoC5/GBCL.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/GBCL.c ****         }
1111:Generated_Source\PSoC5/GBCL.c **** 
1112:Generated_Source\PSoC5/GBCL.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXDATA_REG = txDataByte;
 887              		.loc 1 1113 0
 888 000a 024B     		ldr	r3, .L79+4
 889 000c 1870     		strb	r0, [r3]
 890 000e 7047     		bx	lr
 891              	.L80:
 892              		.align	2
 893              	.L79:
 894 0010 6C640040 		.word	1073767532
 895 0014 4C640040 		.word	1073767500
 896              		.cfi_endproc
 897              	.LFE19:
 898              		.size	GBCL_PutChar, .-GBCL_PutChar
 899              		.section	.text.GBCL_PutString,"ax",%progbits
 900              		.align	2
 901              		.global	GBCL_PutString
 902              		.thumb
 903              		.thumb_func
 904              		.type	GBCL_PutString, %function
 905              	GBCL_PutString:
 906              	.LFB20:
1114:Generated_Source\PSoC5/GBCL.c **** 
1115:Generated_Source\PSoC5/GBCL.c ****     #endif /* GBCL_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/GBCL.c ****     }
1117:Generated_Source\PSoC5/GBCL.c **** 
1118:Generated_Source\PSoC5/GBCL.c **** 
1119:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_PutString
1121:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/GBCL.c ****     *
1123:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1124:Generated_Source\PSoC5/GBCL.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/GBCL.c ****     *
1126:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1127:Generated_Source\PSoC5/GBCL.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/GBCL.c ****     *
1129:Generated_Source\PSoC5/GBCL.c ****     * Return:
1130:Generated_Source\PSoC5/GBCL.c ****     *  None.
1131:Generated_Source\PSoC5/GBCL.c ****     *
1132:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1133:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/GBCL.c ****     *     initialized.
1135:Generated_Source\PSoC5/GBCL.c ****     *
1136:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1137:Generated_Source\PSoC5/GBCL.c ****     *  No.
1138:Generated_Source\PSoC5/GBCL.c ****     *
1139:Generated_Source\PSoC5/GBCL.c ****     * Theory:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 37


1140:Generated_Source\PSoC5/GBCL.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/GBCL.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/GBCL.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/GBCL.c ****     *
1144:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/GBCL.c ****     void GBCL_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/GBCL.c ****     {
 907              		.loc 1 1146 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              	.LVL55:
 912 0000 38B5     		push	{r3, r4, r5, lr}
 913              		.cfi_def_cfa_offset 16
 914              		.cfi_offset 3, -16
 915              		.cfi_offset 4, -12
 916              		.cfi_offset 5, -8
 917              		.cfi_offset 14, -4
 918              	.LVL56:
1147:Generated_Source\PSoC5/GBCL.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/GBCL.c **** 
1149:Generated_Source\PSoC5/GBCL.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_initVar != 0u)
 919              		.loc 1 1150 0
 920 0002 074B     		ldr	r3, .L87
 921 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 922 0006 2BB9     		cbnz	r3, .L85
 923 0008 38BD     		pop	{r3, r4, r5, pc}
 924              	.LVL57:
 925              	.L84:
1151:Generated_Source\PSoC5/GBCL.c ****         {
1152:Generated_Source\PSoC5/GBCL.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/GBCL.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/GBCL.c ****             {
1155:Generated_Source\PSoC5/GBCL.c ****                 GBCL_PutChar((uint8)string[bufIndex]);
 926              		.loc 1 1155 0
 927 000a FFF7FEFF 		bl	GBCL_PutChar
 928              	.LVL58:
1156:Generated_Source\PSoC5/GBCL.c ****                 bufIndex++;
 929              		.loc 1 1156 0
 930 000e 0134     		adds	r4, r4, #1
 931              	.LVL59:
 932 0010 A4B2     		uxth	r4, r4
 933              	.LVL60:
 934 0012 01E0     		b	.L82
 935              	.LVL61:
 936              	.L85:
 937 0014 0546     		mov	r5, r0
 938 0016 0024     		movs	r4, #0
 939              	.LVL62:
 940              	.L82:
1153:Generated_Source\PSoC5/GBCL.c ****             {
 941              		.loc 1 1153 0
 942 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 943 001a 0028     		cmp	r0, #0
 944 001c F5D1     		bne	.L84
 945 001e 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 38


 946              	.LVL63:
 947              	.L88:
 948              		.align	2
 949              	.L87:
 950 0020 00000000 		.word	.LANCHOR0
 951              		.cfi_endproc
 952              	.LFE20:
 953              		.size	GBCL_PutString, .-GBCL_PutString
 954              		.section	.text.GBCL_PutArray,"ax",%progbits
 955              		.align	2
 956              		.global	GBCL_PutArray
 957              		.thumb
 958              		.thumb_func
 959              		.type	GBCL_PutArray, %function
 960              	GBCL_PutArray:
 961              	.LFB21:
1157:Generated_Source\PSoC5/GBCL.c ****             }
1158:Generated_Source\PSoC5/GBCL.c ****         }
1159:Generated_Source\PSoC5/GBCL.c ****     }
1160:Generated_Source\PSoC5/GBCL.c **** 
1161:Generated_Source\PSoC5/GBCL.c **** 
1162:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_PutArray
1164:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/GBCL.c ****     *
1166:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1167:Generated_Source\PSoC5/GBCL.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/GBCL.c ****     *  transmission.
1169:Generated_Source\PSoC5/GBCL.c ****     *
1170:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1171:Generated_Source\PSoC5/GBCL.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/GBCL.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/GBCL.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/GBCL.c ****     *
1175:Generated_Source\PSoC5/GBCL.c ****     * Return:
1176:Generated_Source\PSoC5/GBCL.c ****     *  None.
1177:Generated_Source\PSoC5/GBCL.c ****     *
1178:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1179:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/GBCL.c ****     *     initialized.
1181:Generated_Source\PSoC5/GBCL.c ****     *
1182:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1183:Generated_Source\PSoC5/GBCL.c ****     *  No.
1184:Generated_Source\PSoC5/GBCL.c ****     *
1185:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1186:Generated_Source\PSoC5/GBCL.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/GBCL.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/GBCL.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/GBCL.c ****     *
1190:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/GBCL.c ****     void GBCL_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/GBCL.c ****                                                                     
1193:Generated_Source\PSoC5/GBCL.c ****     {
 962              		.loc 1 1193 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 39


 966              	.LVL64:
1194:Generated_Source\PSoC5/GBCL.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/GBCL.c **** 
1196:Generated_Source\PSoC5/GBCL.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_initVar != 0u)
 967              		.loc 1 1197 0
 968 0000 084B     		ldr	r3, .L95
 969 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 970 0004 33B9     		cbnz	r3, .L93
 971 0006 7047     		bx	lr
 972              	.LVL65:
 973              	.L92:
 974              		.cfi_def_cfa_offset 16
 975              		.cfi_offset 4, -16
 976              		.cfi_offset 5, -12
 977              		.cfi_offset 6, -8
 978              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/GBCL.c ****         {
1199:Generated_Source\PSoC5/GBCL.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/GBCL.c ****             {
1201:Generated_Source\PSoC5/GBCL.c ****                 GBCL_PutChar(string[bufIndex]);
 979              		.loc 1 1201 0
 980 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 981 000a FFF7FEFF 		bl	GBCL_PutChar
 982              	.LVL66:
1202:Generated_Source\PSoC5/GBCL.c ****                 bufIndex++;
 983              		.loc 1 1202 0
 984 000e 0134     		adds	r4, r4, #1
 985              	.LVL67:
 986 0010 E4B2     		uxtb	r4, r4
 987              	.LVL68:
 988 0012 03E0     		b	.L90
 989              	.LVL69:
 990              	.L93:
 991              		.cfi_def_cfa_offset 0
 992              		.cfi_restore 4
 993              		.cfi_restore 5
 994              		.cfi_restore 6
 995              		.cfi_restore 14
1193:Generated_Source\PSoC5/GBCL.c ****         uint8 bufIndex = 0u;
 996              		.loc 1 1193 0
 997 0014 70B5     		push	{r4, r5, r6, lr}
 998              		.cfi_def_cfa_offset 16
 999              		.cfi_offset 4, -16
 1000              		.cfi_offset 5, -12
 1001              		.cfi_offset 6, -8
 1002              		.cfi_offset 14, -4
 1003 0016 0D46     		mov	r5, r1
 1004 0018 0646     		mov	r6, r0
 1005 001a 0024     		movs	r4, #0
 1006              	.LVL70:
 1007              	.L90:
1199:Generated_Source\PSoC5/GBCL.c ****             {
 1008              		.loc 1 1199 0
 1009 001c AC42     		cmp	r4, r5
 1010 001e F3D3     		bcc	.L92
 1011 0020 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 40


 1012              	.LVL71:
 1013              	.L96:
 1014 0022 00BF     		.align	2
 1015              	.L95:
 1016 0024 00000000 		.word	.LANCHOR0
 1017              		.cfi_endproc
 1018              	.LFE21:
 1019              		.size	GBCL_PutArray, .-GBCL_PutArray
 1020              		.section	.text.GBCL_PutCRLF,"ax",%progbits
 1021              		.align	2
 1022              		.global	GBCL_PutCRLF
 1023              		.thumb
 1024              		.thumb_func
 1025              		.type	GBCL_PutCRLF, %function
 1026              	GBCL_PutCRLF:
 1027              	.LFB22:
1203:Generated_Source\PSoC5/GBCL.c ****             }
1204:Generated_Source\PSoC5/GBCL.c ****         }
1205:Generated_Source\PSoC5/GBCL.c ****     }
1206:Generated_Source\PSoC5/GBCL.c **** 
1207:Generated_Source\PSoC5/GBCL.c **** 
1208:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_PutCRLF
1210:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/GBCL.c ****     *
1212:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1213:Generated_Source\PSoC5/GBCL.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/GBCL.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/GBCL.c ****     *
1216:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1217:Generated_Source\PSoC5/GBCL.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/GBCL.c ****     *
1219:Generated_Source\PSoC5/GBCL.c ****     * Return:
1220:Generated_Source\PSoC5/GBCL.c ****     *  None.
1221:Generated_Source\PSoC5/GBCL.c ****     *
1222:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1223:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/GBCL.c ****     *     initialized.
1225:Generated_Source\PSoC5/GBCL.c ****     *
1226:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1227:Generated_Source\PSoC5/GBCL.c ****     *  No.
1228:Generated_Source\PSoC5/GBCL.c ****     *
1229:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/GBCL.c ****     void GBCL_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/GBCL.c ****     {
 1028              		.loc 1 1231 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              	.LVL72:
 1033 0000 08B5     		push	{r3, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 3, -8
 1036              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/GBCL.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_initVar != 0u)
 1037              		.loc 1 1233 0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 41


 1038 0002 064B     		ldr	r3, .L100
 1039 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1040 0006 3BB1     		cbz	r3, .L97
1234:Generated_Source\PSoC5/GBCL.c ****         {
1235:Generated_Source\PSoC5/GBCL.c ****             GBCL_PutChar(txDataByte);
 1041              		.loc 1 1235 0
 1042 0008 FFF7FEFF 		bl	GBCL_PutChar
 1043              	.LVL73:
1236:Generated_Source\PSoC5/GBCL.c ****             GBCL_PutChar(0x0Du);
 1044              		.loc 1 1236 0
 1045 000c 0D20     		movs	r0, #13
 1046 000e FFF7FEFF 		bl	GBCL_PutChar
 1047              	.LVL74:
1237:Generated_Source\PSoC5/GBCL.c ****             GBCL_PutChar(0x0Au);
 1048              		.loc 1 1237 0
 1049 0012 0A20     		movs	r0, #10
 1050 0014 FFF7FEFF 		bl	GBCL_PutChar
 1051              	.LVL75:
 1052              	.L97:
 1053 0018 08BD     		pop	{r3, pc}
 1054              	.L101:
 1055 001a 00BF     		.align	2
 1056              	.L100:
 1057 001c 00000000 		.word	.LANCHOR0
 1058              		.cfi_endproc
 1059              	.LFE22:
 1060              		.size	GBCL_PutCRLF, .-GBCL_PutCRLF
 1061              		.section	.text.GBCL_GetTxBufferSize,"ax",%progbits
 1062              		.align	2
 1063              		.global	GBCL_GetTxBufferSize
 1064              		.thumb
 1065              		.thumb_func
 1066              		.type	GBCL_GetTxBufferSize, %function
 1067              	GBCL_GetTxBufferSize:
 1068              	.LFB23:
1238:Generated_Source\PSoC5/GBCL.c ****         }
1239:Generated_Source\PSoC5/GBCL.c ****     }
1240:Generated_Source\PSoC5/GBCL.c **** 
1241:Generated_Source\PSoC5/GBCL.c **** 
1242:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_GetTxBufferSize
1244:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/GBCL.c ****     *
1246:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1247:Generated_Source\PSoC5/GBCL.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/GBCL.c ****     *  transmitted.
1249:Generated_Source\PSoC5/GBCL.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/GBCL.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/GBCL.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/GBCL.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/GBCL.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/GBCL.c ****     *
1255:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1256:Generated_Source\PSoC5/GBCL.c ****     *  None.
1257:Generated_Source\PSoC5/GBCL.c ****     *
1258:Generated_Source\PSoC5/GBCL.c ****     * Return:
1259:Generated_Source\PSoC5/GBCL.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 42


1260:Generated_Source\PSoC5/GBCL.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/GBCL.c ****     *
1262:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1263:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/GBCL.c ****     *
1266:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1267:Generated_Source\PSoC5/GBCL.c ****     *  No.
1268:Generated_Source\PSoC5/GBCL.c ****     *
1269:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1270:Generated_Source\PSoC5/GBCL.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/GBCL.c ****     *
1272:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/GBCL.c ****     uint8 GBCL_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/GBCL.c ****                                                             
1275:Generated_Source\PSoC5/GBCL.c ****     {
 1069              		.loc 1 1275 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
1276:Generated_Source\PSoC5/GBCL.c ****         uint8 size;
1277:Generated_Source\PSoC5/GBCL.c **** 
1278:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/GBCL.c **** 
1280:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableTxInt();
1282:Generated_Source\PSoC5/GBCL.c **** 
1283:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_txBufferRead == GBCL_txBufferWrite)
1284:Generated_Source\PSoC5/GBCL.c ****         {
1285:Generated_Source\PSoC5/GBCL.c ****             size = 0u;
1286:Generated_Source\PSoC5/GBCL.c ****         }
1287:Generated_Source\PSoC5/GBCL.c ****         else if(GBCL_txBufferRead < GBCL_txBufferWrite)
1288:Generated_Source\PSoC5/GBCL.c ****         {
1289:Generated_Source\PSoC5/GBCL.c ****             size = (GBCL_txBufferWrite - GBCL_txBufferRead);
1290:Generated_Source\PSoC5/GBCL.c ****         }
1291:Generated_Source\PSoC5/GBCL.c ****         else
1292:Generated_Source\PSoC5/GBCL.c ****         {
1293:Generated_Source\PSoC5/GBCL.c ****             size = (GBCL_TX_BUFFER_SIZE - GBCL_txBufferRead) +
1294:Generated_Source\PSoC5/GBCL.c ****                     GBCL_txBufferWrite;
1295:Generated_Source\PSoC5/GBCL.c ****         }
1296:Generated_Source\PSoC5/GBCL.c **** 
1297:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableTxInt();
1298:Generated_Source\PSoC5/GBCL.c **** 
1299:Generated_Source\PSoC5/GBCL.c ****     #else
1300:Generated_Source\PSoC5/GBCL.c **** 
1301:Generated_Source\PSoC5/GBCL.c ****         size = GBCL_TXSTATUS_REG;
 1074              		.loc 1 1301 0
 1075 0000 074B     		ldr	r3, .L106
 1076 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1077 0004 DBB2     		uxtb	r3, r3
 1078              	.LVL76:
1302:Generated_Source\PSoC5/GBCL.c **** 
1303:Generated_Source\PSoC5/GBCL.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/GBCL.c ****         if((size & GBCL_TX_STS_FIFO_FULL) != 0u)
 1079              		.loc 1 1304 0
 1080 0006 13F0040F 		tst	r3, #4
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 43


 1081 000a 04D1     		bne	.L104
1305:Generated_Source\PSoC5/GBCL.c ****         {
1306:Generated_Source\PSoC5/GBCL.c ****             size = GBCL_FIFO_LENGTH;
1307:Generated_Source\PSoC5/GBCL.c ****         }
1308:Generated_Source\PSoC5/GBCL.c ****         else if((size & GBCL_TX_STS_FIFO_EMPTY) != 0u)
 1082              		.loc 1 1308 0
 1083 000c 13F0020F 		tst	r3, #2
 1084 0010 03D0     		beq	.L105
1309:Generated_Source\PSoC5/GBCL.c ****         {
1310:Generated_Source\PSoC5/GBCL.c ****             size = 0u;
 1085              		.loc 1 1310 0
 1086 0012 0020     		movs	r0, #0
 1087 0014 7047     		bx	lr
 1088              	.L104:
1306:Generated_Source\PSoC5/GBCL.c ****         }
 1089              		.loc 1 1306 0
 1090 0016 0420     		movs	r0, #4
 1091 0018 7047     		bx	lr
 1092              	.L105:
1311:Generated_Source\PSoC5/GBCL.c ****         }
1312:Generated_Source\PSoC5/GBCL.c ****         else
1313:Generated_Source\PSoC5/GBCL.c ****         {
1314:Generated_Source\PSoC5/GBCL.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/GBCL.c ****             size = 1u;
 1093              		.loc 1 1315 0
 1094 001a 0120     		movs	r0, #1
 1095              	.LVL77:
1316:Generated_Source\PSoC5/GBCL.c ****         }
1317:Generated_Source\PSoC5/GBCL.c **** 
1318:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/GBCL.c **** 
1320:Generated_Source\PSoC5/GBCL.c ****     return(size);
1321:Generated_Source\PSoC5/GBCL.c ****     }
 1096              		.loc 1 1321 0
 1097 001c 7047     		bx	lr
 1098              	.L107:
 1099 001e 00BF     		.align	2
 1100              	.L106:
 1101 0020 6C640040 		.word	1073767532
 1102              		.cfi_endproc
 1103              	.LFE23:
 1104              		.size	GBCL_GetTxBufferSize, .-GBCL_GetTxBufferSize
 1105              		.section	.text.GBCL_ClearTxBuffer,"ax",%progbits
 1106              		.align	2
 1107              		.global	GBCL_ClearTxBuffer
 1108              		.thumb
 1109              		.thumb_func
 1110              		.type	GBCL_ClearTxBuffer, %function
 1111              	GBCL_ClearTxBuffer:
 1112              	.LFB24:
1322:Generated_Source\PSoC5/GBCL.c **** 
1323:Generated_Source\PSoC5/GBCL.c **** 
1324:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_ClearTxBuffer
1326:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/GBCL.c ****     *
1328:Generated_Source\PSoC5/GBCL.c ****     * Summary:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 44


1329:Generated_Source\PSoC5/GBCL.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/GBCL.c ****     *
1331:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1332:Generated_Source\PSoC5/GBCL.c ****     *  None.
1333:Generated_Source\PSoC5/GBCL.c ****     *
1334:Generated_Source\PSoC5/GBCL.c ****     * Return:
1335:Generated_Source\PSoC5/GBCL.c ****     *  None.
1336:Generated_Source\PSoC5/GBCL.c ****     *
1337:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1338:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/GBCL.c ****     *
1341:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1342:Generated_Source\PSoC5/GBCL.c ****     *  No.
1343:Generated_Source\PSoC5/GBCL.c ****     *
1344:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1345:Generated_Source\PSoC5/GBCL.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/GBCL.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/GBCL.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/GBCL.c ****     *
1349:Generated_Source\PSoC5/GBCL.c ****     * Side Effects:
1350:Generated_Source\PSoC5/GBCL.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/GBCL.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/GBCL.c ****     *
1353:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/GBCL.c ****     void GBCL_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/GBCL.c ****     {
 1113              		.loc 1 1355 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 0
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117 0000 08B5     		push	{r3, lr}
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 3, -8
 1120              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/GBCL.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/GBCL.c **** 
1358:Generated_Source\PSoC5/GBCL.c ****         enableInterrupts = CyEnterCriticalSection();
 1121              		.loc 1 1358 0
 1122 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1123              	.LVL78:
1359:Generated_Source\PSoC5/GBCL.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXDATA_AUX_CTL_REG |= (uint8)  GBCL_TX_FIFO_CLR;
 1124              		.loc 1 1360 0
 1125 0006 064B     		ldr	r3, .L110
 1126 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1127 000a 42F00102 		orr	r2, r2, #1
 1128 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/GBCL.c ****         GBCL_TXDATA_AUX_CTL_REG &= (uint8) ~GBCL_TX_FIFO_CLR;
 1129              		.loc 1 1361 0
 1130 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1131 0012 02F0FE02 		and	r2, r2, #254
 1132 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/GBCL.c ****         CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1362 0
 1134 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL79:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 45


 1136 001c 08BD     		pop	{r3, pc}
 1137              	.L111:
 1138 001e 00BF     		.align	2
 1139              	.L110:
 1140 0020 9C640040 		.word	1073767580
 1141              		.cfi_endproc
 1142              	.LFE24:
 1143              		.size	GBCL_ClearTxBuffer, .-GBCL_ClearTxBuffer
 1144              		.section	.text.GBCL_SendBreak,"ax",%progbits
 1145              		.align	2
 1146              		.global	GBCL_SendBreak
 1147              		.thumb
 1148              		.thumb_func
 1149              		.type	GBCL_SendBreak, %function
 1150              	GBCL_SendBreak:
 1151              	.LFB25:
1363:Generated_Source\PSoC5/GBCL.c **** 
1364:Generated_Source\PSoC5/GBCL.c ****     #if (GBCL_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/GBCL.c **** 
1366:Generated_Source\PSoC5/GBCL.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/GBCL.c ****         GBCL_DisableTxInt();
1368:Generated_Source\PSoC5/GBCL.c **** 
1369:Generated_Source\PSoC5/GBCL.c ****         GBCL_txBufferRead = 0u;
1370:Generated_Source\PSoC5/GBCL.c ****         GBCL_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/GBCL.c **** 
1372:Generated_Source\PSoC5/GBCL.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/GBCL.c ****         GBCL_EnableTxInt();
1374:Generated_Source\PSoC5/GBCL.c **** 
1375:Generated_Source\PSoC5/GBCL.c ****     #endif /* (GBCL_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/GBCL.c ****     }
1377:Generated_Source\PSoC5/GBCL.c **** 
1378:Generated_Source\PSoC5/GBCL.c **** 
1379:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SendBreak
1381:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/GBCL.c ****     *
1383:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1384:Generated_Source\PSoC5/GBCL.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/GBCL.c ****     *
1386:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1387:Generated_Source\PSoC5/GBCL.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/GBCL.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/GBCL.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/GBCL.c ****     *       then return.
1394:Generated_Source\PSoC5/GBCL.c ****     *   GBCL_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/GBCL.c ****     *      GBCL_SEND_BREAK and GBCL_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/GBCL.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/GBCL.c ****     *
1398:Generated_Source\PSoC5/GBCL.c ****     * Return:
1399:Generated_Source\PSoC5/GBCL.c ****     *  None.
1400:Generated_Source\PSoC5/GBCL.c ****     *
1401:Generated_Source\PSoC5/GBCL.c ****     * Global Variables:
1402:Generated_Source\PSoC5/GBCL.c ****     *  GBCL_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/GBCL.c ****     *     initialized.
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 46


1404:Generated_Source\PSoC5/GBCL.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/GBCL.c ****     *
1406:Generated_Source\PSoC5/GBCL.c ****     * Reentrant:
1407:Generated_Source\PSoC5/GBCL.c ****     *  No.
1408:Generated_Source\PSoC5/GBCL.c ****     *
1409:Generated_Source\PSoC5/GBCL.c ****     * Theory:
1410:Generated_Source\PSoC5/GBCL.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/GBCL.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/GBCL.c ****     *  operation.
1413:Generated_Source\PSoC5/GBCL.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/GBCL.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/GBCL.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/GBCL.c ****     *     complete.
1417:Generated_Source\PSoC5/GBCL.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/GBCL.c ****     *     operation
1419:Generated_Source\PSoC5/GBCL.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/GBCL.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/GBCL.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/GBCL.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/GBCL.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/GBCL.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/GBCL.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/GBCL.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/GBCL.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/GBCL.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/GBCL.c ****     *     When interrupt appear with GBCL_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/GBCL.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/GBCL.c ****     *
1432:Generated_Source\PSoC5/GBCL.c ****     * Side Effects:
1433:Generated_Source\PSoC5/GBCL.c ****     *  The GBCL_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/GBCL.c ****     *  break signal.
1435:Generated_Source\PSoC5/GBCL.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/GBCL.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/GBCL.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/GBCL.c ****     *
1439:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/GBCL.c ****     {
 1152              		.loc 1 1441 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              		@ link register save eliminated.
 1157              	.LVL80:
1442:Generated_Source\PSoC5/GBCL.c **** 
1443:Generated_Source\PSoC5/GBCL.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/GBCL.c ****         if(GBCL_initVar != 0u)
 1158              		.loc 1 1444 0
 1159 0000 124B     		ldr	r3, .L119
 1160 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1161 0004 0BB3     		cbz	r3, .L112
 1162              	.LBB2:
1445:Generated_Source\PSoC5/GBCL.c ****         {
1446:Generated_Source\PSoC5/GBCL.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/GBCL.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/GBCL.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/GBCL.c **** 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 47


1450:Generated_Source\PSoC5/GBCL.c ****         #if(GBCL_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/GBCL.c **** 
1452:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_SEND_BREAK) ||
1453:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/GBCL.c ****             {
1455:Generated_Source\PSoC5/GBCL.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/GBCL.c ****                 GBCL_WriteControlRegister(GBCL_ReadControlRegister() |
1457:Generated_Source\PSoC5/GBCL.c ****                                                       GBCL_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/GBCL.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/GBCL.c ****                 GBCL_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/GBCL.c **** 
1461:Generated_Source\PSoC5/GBCL.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/GBCL.c ****                 {
1463:Generated_Source\PSoC5/GBCL.c ****                     tmpStat = GBCL_TXSTATUS_REG;
1464:Generated_Source\PSoC5/GBCL.c ****                 }
1465:Generated_Source\PSoC5/GBCL.c ****                 while((tmpStat & GBCL_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/GBCL.c ****             }
1467:Generated_Source\PSoC5/GBCL.c **** 
1468:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/GBCL.c ****             {
1471:Generated_Source\PSoC5/GBCL.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/GBCL.c ****                 {
1473:Generated_Source\PSoC5/GBCL.c ****                     tmpStat = GBCL_TXSTATUS_REG;
1474:Generated_Source\PSoC5/GBCL.c ****                 }
1475:Generated_Source\PSoC5/GBCL.c ****                 while(((uint8)~tmpStat & GBCL_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/GBCL.c ****             }
1477:Generated_Source\PSoC5/GBCL.c **** 
1478:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_REINIT) ||
1480:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/GBCL.c ****             {
1482:Generated_Source\PSoC5/GBCL.c ****                 GBCL_WriteControlRegister(GBCL_ReadControlRegister() &
1483:Generated_Source\PSoC5/GBCL.c ****                                               (uint8)~GBCL_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/GBCL.c ****             }
1485:Generated_Source\PSoC5/GBCL.c **** 
1486:Generated_Source\PSoC5/GBCL.c ****         #else /* GBCL_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/GBCL.c **** 
1488:Generated_Source\PSoC5/GBCL.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/GBCL.c **** 
1490:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_SEND_BREAK) ||
 1163              		.loc 1 1490 0
 1164 0006 08B1     		cbz	r0, .L114
 1165              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1166 0008 0328     		cmp	r0, #3
 1167 000a 0DD1     		bne	.L115
 1168              	.L114:
1491:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/GBCL.c ****             {
1493:Generated_Source\PSoC5/GBCL.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/GBCL.c ****                 #if( (GBCL_PARITY_TYPE != GBCL__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/GBCL.c ****                                     (GBCL_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/GBCL.c ****                     GBCL_WriteControlRegister(GBCL_ReadControlRegister() |
1497:Generated_Source\PSoC5/GBCL.c ****                                                           GBCL_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/GBCL.c ****                 #endif /* End GBCL_PARITY_TYPE != GBCL__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/GBCL.c **** 
1500:Generated_Source\PSoC5/GBCL.c ****                 #if(GBCL_TXCLKGEN_DP)
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 48


1501:Generated_Source\PSoC5/GBCL.c ****                     txPeriod = GBCL_TXBITCLKTX_COMPLETE_REG;
 1169              		.loc 1 1501 0 is_stmt 1
 1170 000c 104B     		ldr	r3, .L119+4
 1171 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1172 0010 0E4A     		ldr	r2, .L119
 1173 0012 9171     		strb	r1, [r2, #6]
1502:Generated_Source\PSoC5/GBCL.c ****                     GBCL_TXBITCLKTX_COMPLETE_REG = GBCL_TXBITCTR_BREAKBITS;
 1174              		.loc 1 1502 0
 1175 0014 6722     		movs	r2, #103
 1176 0016 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/GBCL.c ****                 #else
1504:Generated_Source\PSoC5/GBCL.c ****                     txPeriod = GBCL_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/GBCL.c ****                     GBCL_TXBITCTR_PERIOD_REG = GBCL_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/GBCL.c ****                 #endif /* End GBCL_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/GBCL.c **** 
1508:Generated_Source\PSoC5/GBCL.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/GBCL.c ****                 GBCL_TXDATA_REG = 0u;
 1177              		.loc 1 1509 0
 1178 0018 0022     		movs	r2, #0
 1179 001a 0D33     		adds	r3, r3, #13
 1180 001c 1A70     		strb	r2, [r3]
 1181              	.L116:
1510:Generated_Source\PSoC5/GBCL.c **** 
1511:Generated_Source\PSoC5/GBCL.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/GBCL.c ****                 {
1513:Generated_Source\PSoC5/GBCL.c ****                     tmpStat = GBCL_TXSTATUS_REG;
 1182              		.loc 1 1513 0 discriminator 1
 1183 001e 0D4B     		ldr	r3, .L119+8
 1184 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1185              	.LVL81:
1514:Generated_Source\PSoC5/GBCL.c ****                 }
1515:Generated_Source\PSoC5/GBCL.c ****                 while((tmpStat & GBCL_TX_STS_FIFO_EMPTY) != 0u);
 1186              		.loc 1 1515 0 discriminator 1
 1187 0022 13F0020F 		tst	r3, #2
 1188 0026 FAD1     		bne	.L116
 1189              	.LVL82:
 1190              	.L115:
1516:Generated_Source\PSoC5/GBCL.c ****             }
1517:Generated_Source\PSoC5/GBCL.c **** 
1518:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_WAIT_FOR_COMPLETE_REINIT) ||
 1191              		.loc 1 1518 0
 1192 0028 0128     		cmp	r0, #1
 1193 002a 01D0     		beq	.L117
 1194              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1195 002c 0328     		cmp	r0, #3
 1196 002e 04D1     		bne	.L118
 1197              	.L117:
1519:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/GBCL.c ****             {
1521:Generated_Source\PSoC5/GBCL.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/GBCL.c ****                 {
1523:Generated_Source\PSoC5/GBCL.c ****                     tmpStat = GBCL_TXSTATUS_REG;
 1198              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1199 0030 084B     		ldr	r3, .L119+8
 1200 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1201              	.LVL83:
1524:Generated_Source\PSoC5/GBCL.c ****                 }
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 49


1525:Generated_Source\PSoC5/GBCL.c ****                 while(((uint8)~tmpStat & GBCL_TX_STS_COMPLETE) != 0u);
 1202              		.loc 1 1525 0 discriminator 1
 1203 0034 13F0010F 		tst	r3, #1
 1204 0038 FAD0     		beq	.L117
 1205              	.LVL84:
 1206              	.L118:
1526:Generated_Source\PSoC5/GBCL.c ****             }
1527:Generated_Source\PSoC5/GBCL.c **** 
1528:Generated_Source\PSoC5/GBCL.c ****             if( (retMode == GBCL_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_REINIT) ||
 1207              		.loc 1 1529 0
 1208 003a 0138     		subs	r0, r0, #1
 1209              	.LVL85:
 1210 003c C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_REINIT) ||
 1211              		.loc 1 1528 0
 1212 003e 0228     		cmp	r0, #2
 1213 0040 03D8     		bhi	.L112
1530:Generated_Source\PSoC5/GBCL.c ****                 (retMode == GBCL_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/GBCL.c ****             {
1532:Generated_Source\PSoC5/GBCL.c **** 
1533:Generated_Source\PSoC5/GBCL.c ****             #if(GBCL_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/GBCL.c ****                 GBCL_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1214              		.loc 1 1534 0
 1215 0042 024B     		ldr	r3, .L119
 1216 0044 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1217 0046 024B     		ldr	r3, .L119+4
 1218 0048 1A70     		strb	r2, [r3]
 1219              	.L112:
 1220 004a 7047     		bx	lr
 1221              	.L120:
 1222              		.align	2
 1223              	.L119:
 1224 004c 00000000 		.word	.LANCHOR0
 1225 0050 3F640040 		.word	1073767487
 1226 0054 6C640040 		.word	1073767532
 1227              	.LBE2:
 1228              		.cfi_endproc
 1229              	.LFE25:
 1230              		.size	GBCL_SendBreak, .-GBCL_SendBreak
 1231              		.section	.text.GBCL_SetTxAddressMode,"ax",%progbits
 1232              		.align	2
 1233              		.global	GBCL_SetTxAddressMode
 1234              		.thumb
 1235              		.thumb_func
 1236              		.type	GBCL_SetTxAddressMode, %function
 1237              	GBCL_SetTxAddressMode:
 1238              	.LFB26:
1535:Generated_Source\PSoC5/GBCL.c ****             #else
1536:Generated_Source\PSoC5/GBCL.c ****                 GBCL_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/GBCL.c ****             #endif /* End GBCL_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/GBCL.c **** 
1539:Generated_Source\PSoC5/GBCL.c ****             #if( (GBCL_PARITY_TYPE != GBCL__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/GBCL.c ****                  (GBCL_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/GBCL.c ****                 GBCL_WriteControlRegister(GBCL_ReadControlRegister() &
1542:Generated_Source\PSoC5/GBCL.c ****                                                       (uint8) ~GBCL_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/GBCL.c ****             #endif /* End GBCL_PARITY_TYPE != NONE */
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 50


1544:Generated_Source\PSoC5/GBCL.c ****             }
1545:Generated_Source\PSoC5/GBCL.c ****         #endif    /* End GBCL_HD_ENABLED */
1546:Generated_Source\PSoC5/GBCL.c ****         }
1547:Generated_Source\PSoC5/GBCL.c ****     }
1548:Generated_Source\PSoC5/GBCL.c **** 
1549:Generated_Source\PSoC5/GBCL.c **** 
1550:Generated_Source\PSoC5/GBCL.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/GBCL.c ****     * Function Name: GBCL_SetTxAddressMode
1552:Generated_Source\PSoC5/GBCL.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/GBCL.c ****     *
1554:Generated_Source\PSoC5/GBCL.c ****     * Summary:
1555:Generated_Source\PSoC5/GBCL.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/GBCL.c ****     *
1557:Generated_Source\PSoC5/GBCL.c ****     * Parameters:
1558:Generated_Source\PSoC5/GBCL.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/GBCL.c ****     *       GBCL_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/GBCL.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/GBCL.c ****     *       GBCL_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/GBCL.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/GBCL.c ****     *
1564:Generated_Source\PSoC5/GBCL.c ****     * Return:
1565:Generated_Source\PSoC5/GBCL.c ****     *  None.
1566:Generated_Source\PSoC5/GBCL.c ****     *
1567:Generated_Source\PSoC5/GBCL.c ****     * Side Effects:
1568:Generated_Source\PSoC5/GBCL.c ****     *  This function sets and clears GBCL_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/GBCL.c ****     *  register.
1570:Generated_Source\PSoC5/GBCL.c ****     *
1571:Generated_Source\PSoC5/GBCL.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/GBCL.c ****     void GBCL_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/GBCL.c ****     {
 1239              		.loc 1 1573 0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              		@ link register save eliminated.
 1244              	.LVL86:
 1245 0000 7047     		bx	lr
 1246              		.cfi_endproc
 1247              	.LFE26:
 1248              		.size	GBCL_SetTxAddressMode, .-GBCL_SetTxAddressMode
 1249              		.global	GBCL_rxBufferOverflow
 1250              		.global	GBCL_rxBufferLoopDetect
 1251              		.global	GBCL_rxBufferWrite
 1252              		.global	GBCL_rxBufferRead
 1253              		.comm	GBCL_rxBuffer,128,4
 1254              		.global	GBCL_errorStatus
 1255              		.global	GBCL_initVar
 1256 0002 00BF     		.bss
 1257              		.set	.LANCHOR0,. + 0
 1258              		.type	GBCL_errorStatus, %object
 1259              		.size	GBCL_errorStatus, 1
 1260              	GBCL_errorStatus:
 1261 0000 00       		.space	1
 1262              		.type	GBCL_initVar, %object
 1263              		.size	GBCL_initVar, 1
 1264              	GBCL_initVar:
 1265 0001 00       		.space	1
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 51


 1266              		.type	GBCL_rxBufferRead, %object
 1267              		.size	GBCL_rxBufferRead, 1
 1268              	GBCL_rxBufferRead:
 1269 0002 00       		.space	1
 1270              		.type	GBCL_rxBufferWrite, %object
 1271              		.size	GBCL_rxBufferWrite, 1
 1272              	GBCL_rxBufferWrite:
 1273 0003 00       		.space	1
 1274              		.type	GBCL_rxBufferLoopDetect, %object
 1275              		.size	GBCL_rxBufferLoopDetect, 1
 1276              	GBCL_rxBufferLoopDetect:
 1277 0004 00       		.space	1
 1278              		.type	GBCL_rxBufferOverflow, %object
 1279              		.size	GBCL_rxBufferOverflow, 1
 1280              	GBCL_rxBufferOverflow:
 1281 0005 00       		.space	1
 1282              		.type	txPeriod.5118, %object
 1283              		.size	txPeriod.5118, 1
 1284              	txPeriod.5118:
 1285 0006 00       		.space	1
 1286              		.text
 1287              	.Letext0:
 1288              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1289              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1290              		.section	.debug_info,"",%progbits
 1291              	.Ldebug_info0:
 1292 0000 F3060000 		.4byte	0x6f3
 1293 0004 0400     		.2byte	0x4
 1294 0006 00000000 		.4byte	.Ldebug_abbrev0
 1295 000a 04       		.byte	0x4
 1296 000b 01       		.uleb128 0x1
 1297 000c 80030000 		.4byte	.LASF77
 1298 0010 0C       		.byte	0xc
 1299 0011 C9000000 		.4byte	.LASF78
 1300 0015 2F000000 		.4byte	.LASF79
 1301 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1302 001d 00000000 		.4byte	0
 1303 0021 00000000 		.4byte	.Ldebug_line0
 1304 0025 02       		.uleb128 0x2
 1305 0026 01       		.byte	0x1
 1306 0027 06       		.byte	0x6
 1307 0028 F5000000 		.4byte	.LASF0
 1308 002c 02       		.uleb128 0x2
 1309 002d 01       		.byte	0x1
 1310 002e 08       		.byte	0x8
 1311 002f 68030000 		.4byte	.LASF1
 1312 0033 02       		.uleb128 0x2
 1313 0034 02       		.byte	0x2
 1314 0035 05       		.byte	0x5
 1315 0036 76030000 		.4byte	.LASF2
 1316 003a 02       		.uleb128 0x2
 1317 003b 02       		.byte	0x2
 1318 003c 07       		.byte	0x7
 1319 003d 06020000 		.4byte	.LASF3
 1320 0041 02       		.uleb128 0x2
 1321 0042 04       		.byte	0x4
 1322 0043 05       		.byte	0x5
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 52


 1323 0044 1D010000 		.4byte	.LASF4
 1324 0048 02       		.uleb128 0x2
 1325 0049 04       		.byte	0x4
 1326 004a 07       		.byte	0x7
 1327 004b C6010000 		.4byte	.LASF5
 1328 004f 02       		.uleb128 0x2
 1329 0050 08       		.byte	0x8
 1330 0051 05       		.byte	0x5
 1331 0052 E7000000 		.4byte	.LASF6
 1332 0056 02       		.uleb128 0x2
 1333 0057 08       		.byte	0x8
 1334 0058 07       		.byte	0x7
 1335 0059 B2000000 		.4byte	.LASF7
 1336 005d 03       		.uleb128 0x3
 1337 005e 04       		.byte	0x4
 1338 005f 05       		.byte	0x5
 1339 0060 696E7400 		.ascii	"int\000"
 1340 0064 02       		.uleb128 0x2
 1341 0065 04       		.byte	0x4
 1342 0066 07       		.byte	0x7
 1343 0067 AA010000 		.4byte	.LASF8
 1344 006b 04       		.uleb128 0x4
 1345 006c 26010000 		.4byte	.LASF9
 1346 0070 02       		.byte	0x2
 1347 0071 E401     		.2byte	0x1e4
 1348 0073 2C000000 		.4byte	0x2c
 1349 0077 04       		.uleb128 0x4
 1350 0078 12000000 		.4byte	.LASF10
 1351 007c 02       		.byte	0x2
 1352 007d E501     		.2byte	0x1e5
 1353 007f 3A000000 		.4byte	0x3a
 1354 0083 04       		.uleb128 0x4
 1355 0084 4E010000 		.4byte	.LASF11
 1356 0088 02       		.byte	0x2
 1357 0089 E601     		.2byte	0x1e6
 1358 008b 48000000 		.4byte	0x48
 1359 008f 02       		.uleb128 0x2
 1360 0090 04       		.byte	0x4
 1361 0091 04       		.byte	0x4
 1362 0092 38030000 		.4byte	.LASF12
 1363 0096 02       		.uleb128 0x2
 1364 0097 08       		.byte	0x8
 1365 0098 04       		.byte	0x4
 1366 0099 3B010000 		.4byte	.LASF13
 1367 009d 04       		.uleb128 0x4
 1368 009e 6D040000 		.4byte	.LASF14
 1369 00a2 02       		.byte	0x2
 1370 00a3 F501     		.2byte	0x1f5
 1371 00a5 A9000000 		.4byte	0xa9
 1372 00a9 02       		.uleb128 0x2
 1373 00aa 01       		.byte	0x1
 1374 00ab 08       		.byte	0x8
 1375 00ac 44040000 		.4byte	.LASF15
 1376 00b0 04       		.uleb128 0x4
 1377 00b1 4B030000 		.4byte	.LASF16
 1378 00b5 02       		.byte	0x2
 1379 00b6 8E02     		.2byte	0x28e
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 53


 1380 00b8 BC000000 		.4byte	0xbc
 1381 00bc 05       		.uleb128 0x5
 1382 00bd 6B000000 		.4byte	0x6b
 1383 00c1 04       		.uleb128 0x4
 1384 00c2 9D020000 		.4byte	.LASF17
 1385 00c6 02       		.byte	0x2
 1386 00c7 9002     		.2byte	0x290
 1387 00c9 CD000000 		.4byte	0xcd
 1388 00cd 05       		.uleb128 0x5
 1389 00ce 83000000 		.4byte	0x83
 1390 00d2 02       		.uleb128 0x2
 1391 00d3 08       		.byte	0x8
 1392 00d4 04       		.byte	0x4
 1393 00d5 ED020000 		.4byte	.LASF18
 1394 00d9 02       		.uleb128 0x2
 1395 00da 04       		.byte	0x4
 1396 00db 07       		.byte	0x7
 1397 00dc E4020000 		.4byte	.LASF19
 1398 00e0 06       		.uleb128 0x6
 1399 00e1 16050000 		.4byte	.LASF20
 1400 00e5 01       		.byte	0x1
 1401 00e6 6A       		.byte	0x6a
 1402 00e7 00000000 		.4byte	.LFB1
 1403 00eb 44000000 		.4byte	.LFE1-.LFB1
 1404 00ef 01       		.uleb128 0x1
 1405 00f0 9C       		.byte	0x9c
 1406 00f1 1D010000 		.4byte	0x11d
 1407 00f5 07       		.uleb128 0x7
 1408 00f6 0A000000 		.4byte	.LVL0
 1409 00fa CA060000 		.4byte	0x6ca
 1410 00fe 08010000 		.4byte	0x108
 1411 0102 08       		.uleb128 0x8
 1412 0103 01       		.uleb128 0x1
 1413 0104 50       		.byte	0x50
 1414 0105 01       		.uleb128 0x1
 1415 0106 30       		.byte	0x30
 1416 0107 00       		.byte	0
 1417 0108 09       		.uleb128 0x9
 1418 0109 12000000 		.4byte	.LVL1
 1419 010d D5060000 		.4byte	0x6d5
 1420 0111 08       		.uleb128 0x8
 1421 0112 01       		.uleb128 0x1
 1422 0113 50       		.byte	0x50
 1423 0114 01       		.uleb128 0x1
 1424 0115 30       		.byte	0x30
 1425 0116 08       		.uleb128 0x8
 1426 0117 01       		.uleb128 0x1
 1427 0118 51       		.byte	0x51
 1428 0119 01       		.uleb128 0x1
 1429 011a 37       		.byte	0x37
 1430 011b 00       		.byte	0
 1431 011c 00       		.byte	0
 1432 011d 06       		.uleb128 0x6
 1433 011e 98040000 		.4byte	.LASF21
 1434 0122 01       		.byte	0x1
 1435 0123 B7       		.byte	0xb7
 1436 0124 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 54


 1437 0128 3C000000 		.4byte	.LFE2-.LFB2
 1438 012c 01       		.uleb128 0x1
 1439 012d 9C       		.byte	0x9c
 1440 012e 54010000 		.4byte	0x154
 1441 0132 0A       		.uleb128 0xa
 1442 0133 B4040000 		.4byte	.LASF24
 1443 0137 01       		.byte	0x1
 1444 0138 B9       		.byte	0xb9
 1445 0139 6B000000 		.4byte	0x6b
 1446 013d 00000000 		.4byte	.LLST0
 1447 0141 0B       		.uleb128 0xb
 1448 0142 06000000 		.4byte	.LVL2
 1449 0146 E0060000 		.4byte	0x6e0
 1450 014a 0B       		.uleb128 0xb
 1451 014b 2E000000 		.4byte	.LVL3
 1452 014f EB060000 		.4byte	0x6eb
 1453 0153 00       		.byte	0
 1454 0154 06       		.uleb128 0x6
 1455 0155 89010000 		.4byte	.LASF22
 1456 0159 01       		.byte	0x1
 1457 015a 4C       		.byte	0x4c
 1458 015b 00000000 		.4byte	.LFB0
 1459 015f 1C000000 		.4byte	.LFE0-.LFB0
 1460 0163 01       		.uleb128 0x1
 1461 0164 9C       		.byte	0x9c
 1462 0165 7C010000 		.4byte	0x17c
 1463 0169 0B       		.uleb128 0xb
 1464 016a 0C000000 		.4byte	.LVL4
 1465 016e E0000000 		.4byte	0xe0
 1466 0172 0B       		.uleb128 0xb
 1467 0173 16000000 		.4byte	.LVL5
 1468 0177 1D010000 		.4byte	0x11d
 1469 017b 00       		.byte	0
 1470 017c 06       		.uleb128 0x6
 1471 017d 2E030000 		.4byte	.LASF23
 1472 0181 01       		.byte	0x1
 1473 0182 F0       		.byte	0xf0
 1474 0183 00000000 		.4byte	.LFB3
 1475 0187 3C000000 		.4byte	.LFE3-.LFB3
 1476 018b 01       		.uleb128 0x1
 1477 018c 9C       		.byte	0x9c
 1478 018d B3010000 		.4byte	0x1b3
 1479 0191 0A       		.uleb128 0xa
 1480 0192 B4040000 		.4byte	.LASF24
 1481 0196 01       		.byte	0x1
 1482 0197 F2       		.byte	0xf2
 1483 0198 6B000000 		.4byte	0x6b
 1484 019c 13000000 		.4byte	.LLST1
 1485 01a0 0B       		.uleb128 0xb
 1486 01a1 06000000 		.4byte	.LVL6
 1487 01a5 E0060000 		.4byte	0x6e0
 1488 01a9 0B       		.uleb128 0xb
 1489 01aa 2E000000 		.4byte	.LVL7
 1490 01ae EB060000 		.4byte	0x6eb
 1491 01b2 00       		.byte	0
 1492 01b3 0C       		.uleb128 0xc
 1493 01b4 57020000 		.4byte	.LASF50
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 55


 1494 01b8 01       		.byte	0x1
 1495 01b9 2701     		.2byte	0x127
 1496 01bb 6B000000 		.4byte	0x6b
 1497 01bf 00000000 		.4byte	.LFB4
 1498 01c3 04000000 		.4byte	.LFE4-.LFB4
 1499 01c7 01       		.uleb128 0x1
 1500 01c8 9C       		.byte	0x9c
 1501 01c9 0D       		.uleb128 0xd
 1502 01ca 73040000 		.4byte	.LASF25
 1503 01ce 01       		.byte	0x1
 1504 01cf 3F01     		.2byte	0x13f
 1505 01d1 00000000 		.4byte	.LFB5
 1506 01d5 02000000 		.4byte	.LFE5-.LFB5
 1507 01d9 01       		.uleb128 0x1
 1508 01da 9C       		.byte	0x9c
 1509 01db EE010000 		.4byte	0x1ee
 1510 01df 0E       		.uleb128 0xe
 1511 01e0 55010000 		.4byte	.LASF27
 1512 01e4 01       		.byte	0x1
 1513 01e5 3F01     		.2byte	0x13f
 1514 01e7 6B000000 		.4byte	0x6b
 1515 01eb 01       		.uleb128 0x1
 1516 01ec 50       		.byte	0x50
 1517 01ed 00       		.byte	0
 1518 01ee 0D       		.uleb128 0xd
 1519 01ef 50030000 		.4byte	.LASF26
 1520 01f3 01       		.byte	0x1
 1521 01f4 6701     		.2byte	0x167
 1522 01f6 00000000 		.4byte	.LFB6
 1523 01fa 0C000000 		.4byte	.LFE6-.LFB6
 1524 01fe 01       		.uleb128 0x1
 1525 01ff 9C       		.byte	0x9c
 1526 0200 13020000 		.4byte	0x213
 1527 0204 0E       		.uleb128 0xe
 1528 0205 50020000 		.4byte	.LASF28
 1529 0209 01       		.byte	0x1
 1530 020a 6701     		.2byte	0x167
 1531 020c 6B000000 		.4byte	0x6b
 1532 0210 01       		.uleb128 0x1
 1533 0211 50       		.byte	0x50
 1534 0212 00       		.byte	0
 1535 0213 0F       		.uleb128 0xf
 1536 0214 1F040000 		.4byte	.LASF32
 1537 0218 01       		.byte	0x1
 1538 0219 8801     		.2byte	0x188
 1539 021b 6B000000 		.4byte	0x6b
 1540 021f 00000000 		.4byte	.LFB7
 1541 0223 64000000 		.4byte	.LFE7-.LFB7
 1542 0227 01       		.uleb128 0x1
 1543 0228 9C       		.byte	0x9c
 1544 0229 5C020000 		.4byte	0x25c
 1545 022d 10       		.uleb128 0x10
 1546 022e 18040000 		.4byte	.LASF29
 1547 0232 01       		.byte	0x1
 1548 0233 8A01     		.2byte	0x18a
 1549 0235 6B000000 		.4byte	0x6b
 1550 0239 26000000 		.4byte	.LLST2
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 56


 1551 023d 10       		.uleb128 0x10
 1552 023e A4040000 		.4byte	.LASF30
 1553 0242 01       		.byte	0x1
 1554 0243 8E01     		.2byte	0x18e
 1555 0245 6B000000 		.4byte	0x6b
 1556 0249 44000000 		.4byte	.LLST3
 1557 024d 11       		.uleb128 0x11
 1558 024e 01030000 		.4byte	.LASF31
 1559 0252 01       		.byte	0x1
 1560 0253 8F01     		.2byte	0x18f
 1561 0255 6B000000 		.4byte	0x6b
 1562 0259 01       		.uleb128 0x1
 1563 025a 51       		.byte	0x51
 1564 025b 00       		.byte	0
 1565 025c 0F       		.uleb128 0xf
 1566 025d 00000000 		.4byte	.LASF33
 1567 0261 01       		.byte	0x1
 1568 0262 E501     		.2byte	0x1e5
 1569 0264 6B000000 		.4byte	0x6b
 1570 0268 00000000 		.4byte	.LFB8
 1571 026c 28000000 		.4byte	.LFE8-.LFB8
 1572 0270 01       		.uleb128 0x1
 1573 0271 9C       		.byte	0x9c
 1574 0272 85020000 		.4byte	0x285
 1575 0276 11       		.uleb128 0x11
 1576 0277 C5040000 		.4byte	.LASF34
 1577 027b 01       		.byte	0x1
 1578 027c E701     		.2byte	0x1e7
 1579 027e 6B000000 		.4byte	0x6b
 1580 0282 01       		.uleb128 0x1
 1581 0283 50       		.byte	0x50
 1582 0284 00       		.byte	0
 1583 0285 0F       		.uleb128 0xf
 1584 0286 2B020000 		.4byte	.LASF35
 1585 028a 01       		.byte	0x1
 1586 028b 1402     		.2byte	0x214
 1587 028d 6B000000 		.4byte	0x6b
 1588 0291 00000000 		.4byte	.LFB9
 1589 0295 84000000 		.4byte	.LFE9-.LFB9
 1590 0299 01       		.uleb128 0x1
 1591 029a 9C       		.byte	0x9c
 1592 029b DE020000 		.4byte	0x2de
 1593 029f 10       		.uleb128 0x10
 1594 02a0 18040000 		.4byte	.LASF29
 1595 02a4 01       		.byte	0x1
 1596 02a5 1602     		.2byte	0x216
 1597 02a7 6B000000 		.4byte	0x6b
 1598 02ab 89000000 		.4byte	.LLST4
 1599 02af 10       		.uleb128 0x10
 1600 02b0 12030000 		.4byte	.LASF36
 1601 02b4 01       		.byte	0x1
 1602 02b5 1702     		.2byte	0x217
 1603 02b7 6B000000 		.4byte	0x6b
 1604 02bb D6000000 		.4byte	.LLST5
 1605 02bf 10       		.uleb128 0x10
 1606 02c0 A4040000 		.4byte	.LASF30
 1607 02c4 01       		.byte	0x1
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 57


 1608 02c5 1A02     		.2byte	0x21a
 1609 02c7 6B000000 		.4byte	0x6b
 1610 02cb E9000000 		.4byte	.LLST6
 1611 02cf 11       		.uleb128 0x11
 1612 02d0 01030000 		.4byte	.LASF31
 1613 02d4 01       		.byte	0x1
 1614 02d5 1B02     		.2byte	0x21b
 1615 02d7 6B000000 		.4byte	0x6b
 1616 02db 01       		.uleb128 0x1
 1617 02dc 51       		.byte	0x51
 1618 02dd 00       		.byte	0
 1619 02de 0F       		.uleb128 0xf
 1620 02df E4040000 		.4byte	.LASF37
 1621 02e3 01       		.byte	0x1
 1622 02e4 7A02     		.2byte	0x27a
 1623 02e6 77000000 		.4byte	0x77
 1624 02ea 00000000 		.4byte	.LFB10
 1625 02ee 2C000000 		.4byte	.LFE10-.LFB10
 1626 02f2 01       		.uleb128 0x1
 1627 02f3 9C       		.byte	0x9c
 1628 02f4 12030000 		.4byte	0x312
 1629 02f8 10       		.uleb128 0x10
 1630 02f9 B7010000 		.4byte	.LASF38
 1631 02fd 01       		.byte	0x1
 1632 02fe 7E02     		.2byte	0x27e
 1633 0300 77000000 		.4byte	0x77
 1634 0304 2E010000 		.4byte	.LLST7
 1635 0308 0B       		.uleb128 0xb
 1636 0309 1A000000 		.4byte	.LVL41
 1637 030d 13020000 		.4byte	0x213
 1638 0311 00       		.byte	0
 1639 0312 0F       		.uleb128 0xf
 1640 0313 2F040000 		.4byte	.LASF39
 1641 0317 01       		.byte	0x1
 1642 0318 AB02     		.2byte	0x2ab
 1643 031a 6B000000 		.4byte	0x6b
 1644 031e 00000000 		.4byte	.LFB11
 1645 0322 60000000 		.4byte	.LFE11-.LFB11
 1646 0326 01       		.uleb128 0x1
 1647 0327 9C       		.byte	0x9c
 1648 0328 3D030000 		.4byte	0x33d
 1649 032c 10       		.uleb128 0x10
 1650 032d 01020000 		.4byte	.LASF40
 1651 0331 01       		.byte	0x1
 1652 0332 AE02     		.2byte	0x2ae
 1653 0334 6B000000 		.4byte	0x6b
 1654 0338 41010000 		.4byte	.LLST8
 1655 033c 00       		.byte	0
 1656 033d 0D       		.uleb128 0xd
 1657 033e 0A010000 		.4byte	.LASF41
 1658 0342 01       		.byte	0x1
 1659 0343 F502     		.2byte	0x2f5
 1660 0345 00000000 		.4byte	.LFB12
 1661 0349 44000000 		.4byte	.LFE12-.LFB12
 1662 034d 01       		.uleb128 0x1
 1663 034e 9C       		.byte	0x9c
 1664 034f 76030000 		.4byte	0x376
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 58


 1665 0353 10       		.uleb128 0x10
 1666 0354 B4040000 		.4byte	.LASF24
 1667 0358 01       		.byte	0x1
 1668 0359 F702     		.2byte	0x2f7
 1669 035b 6B000000 		.4byte	0x6b
 1670 035f 6A010000 		.4byte	.LLST9
 1671 0363 0B       		.uleb128 0xb
 1672 0364 06000000 		.4byte	.LVL47
 1673 0368 E0060000 		.4byte	0x6e0
 1674 036c 0B       		.uleb128 0xb
 1675 036d 1C000000 		.4byte	.LVL48
 1676 0371 EB060000 		.4byte	0x6eb
 1677 0375 00       		.byte	0
 1678 0376 0D       		.uleb128 0xd
 1679 0377 57040000 		.4byte	.LASF42
 1680 037b 01       		.byte	0x1
 1681 037c 2D03     		.2byte	0x32d
 1682 037e 00000000 		.4byte	.LFB13
 1683 0382 02000000 		.4byte	.LFE13-.LFB13
 1684 0386 01       		.uleb128 0x1
 1685 0387 9C       		.byte	0x9c
 1686 0388 9B030000 		.4byte	0x39b
 1687 038c 0E       		.uleb128 0xe
 1688 038d 42010000 		.4byte	.LASF43
 1689 0391 01       		.byte	0x1
 1690 0392 2D03     		.2byte	0x32d
 1691 0394 6B000000 		.4byte	0x6b
 1692 0398 01       		.uleb128 0x1
 1693 0399 50       		.byte	0x50
 1694 039a 00       		.byte	0
 1695 039b 0D       		.uleb128 0xd
 1696 039c 8C000000 		.4byte	.LASF44
 1697 03a0 01       		.byte	0x1
 1698 03a1 5903     		.2byte	0x359
 1699 03a3 00000000 		.4byte	.LFB14
 1700 03a7 0C000000 		.4byte	.LFE14-.LFB14
 1701 03ab 01       		.uleb128 0x1
 1702 03ac 9C       		.byte	0x9c
 1703 03ad C0030000 		.4byte	0x3c0
 1704 03b1 0E       		.uleb128 0xe
 1705 03b2 F9020000 		.4byte	.LASF45
 1706 03b6 01       		.byte	0x1
 1707 03b7 5903     		.2byte	0x359
 1708 03b9 6B000000 		.4byte	0x6b
 1709 03bd 01       		.uleb128 0x1
 1710 03be 50       		.byte	0x50
 1711 03bf 00       		.byte	0
 1712 03c0 0D       		.uleb128 0xd
 1713 03c1 9F000000 		.4byte	.LASF46
 1714 03c5 01       		.byte	0x1
 1715 03c6 6D03     		.2byte	0x36d
 1716 03c8 00000000 		.4byte	.LFB15
 1717 03cc 0C000000 		.4byte	.LFE15-.LFB15
 1718 03d0 01       		.uleb128 0x1
 1719 03d1 9C       		.byte	0x9c
 1720 03d2 E5030000 		.4byte	0x3e5
 1721 03d6 0E       		.uleb128 0xe
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 59


 1722 03d7 F9020000 		.4byte	.LASF45
 1723 03db 01       		.byte	0x1
 1724 03dc 6D03     		.2byte	0x36d
 1725 03de 6B000000 		.4byte	0x6b
 1726 03e2 01       		.uleb128 0x1
 1727 03e3 50       		.byte	0x50
 1728 03e4 00       		.byte	0
 1729 03e5 0D       		.uleb128 0xd
 1730 03e6 FE040000 		.4byte	.LASF47
 1731 03ea 01       		.byte	0x1
 1732 03eb 8C03     		.2byte	0x38c
 1733 03ed 00000000 		.4byte	.LFB16
 1734 03f1 0C000000 		.4byte	.LFE16-.LFB16
 1735 03f5 01       		.uleb128 0x1
 1736 03f6 9C       		.byte	0x9c
 1737 03f7 0A040000 		.4byte	0x40a
 1738 03fb 0E       		.uleb128 0xe
 1739 03fc 50020000 		.4byte	.LASF28
 1740 0400 01       		.byte	0x1
 1741 0401 8C03     		.2byte	0x38c
 1742 0403 6B000000 		.4byte	0x6b
 1743 0407 01       		.uleb128 0x1
 1744 0408 50       		.byte	0x50
 1745 0409 00       		.byte	0
 1746 040a 0D       		.uleb128 0xd
 1747 040b 7B000000 		.4byte	.LASF48
 1748 040f 01       		.byte	0x1
 1749 0410 AE03     		.2byte	0x3ae
 1750 0412 00000000 		.4byte	.LFB17
 1751 0416 14000000 		.4byte	.LFE17-.LFB17
 1752 041a 01       		.uleb128 0x1
 1753 041b 9C       		.byte	0x9c
 1754 041c 2F040000 		.4byte	0x42f
 1755 0420 0E       		.uleb128 0xe
 1756 0421 8D040000 		.4byte	.LASF49
 1757 0425 01       		.byte	0x1
 1758 0426 AE03     		.2byte	0x3ae
 1759 0428 6B000000 		.4byte	0x6b
 1760 042c 01       		.uleb128 0x1
 1761 042d 50       		.byte	0x50
 1762 042e 00       		.byte	0
 1763 042f 0C       		.uleb128 0xc
 1764 0430 19020000 		.4byte	.LASF51
 1765 0434 01       		.byte	0x1
 1766 0435 EB03     		.2byte	0x3eb
 1767 0437 6B000000 		.4byte	0x6b
 1768 043b 00000000 		.4byte	.LFB18
 1769 043f 0C000000 		.4byte	.LFE18-.LFB18
 1770 0443 01       		.uleb128 0x1
 1771 0444 9C       		.byte	0x9c
 1772 0445 0D       		.uleb128 0xd
 1773 0446 3E030000 		.4byte	.LASF52
 1774 044a 01       		.byte	0x1
 1775 044b 1104     		.2byte	0x411
 1776 044d 00000000 		.4byte	.LFB19
 1777 0451 18000000 		.4byte	.LFE19-.LFB19
 1778 0455 01       		.uleb128 0x1
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 60


 1779 0456 9C       		.byte	0x9c
 1780 0457 6A040000 		.4byte	0x46a
 1781 045b 0E       		.uleb128 0xe
 1782 045c 8D040000 		.4byte	.LASF49
 1783 0460 01       		.byte	0x1
 1784 0461 1104     		.2byte	0x411
 1785 0463 6B000000 		.4byte	0x6b
 1786 0467 01       		.uleb128 0x1
 1787 0468 50       		.byte	0x50
 1788 0469 00       		.byte	0
 1789 046a 0D       		.uleb128 0xd
 1790 046b 8E020000 		.4byte	.LASF53
 1791 046f 01       		.byte	0x1
 1792 0470 7904     		.2byte	0x479
 1793 0472 00000000 		.4byte	.LFB20
 1794 0476 24000000 		.4byte	.LFE20-.LFB20
 1795 047a 01       		.uleb128 0x1
 1796 047b 9C       		.byte	0x9c
 1797 047c AA040000 		.4byte	0x4aa
 1798 0480 12       		.uleb128 0x12
 1799 0481 74000000 		.4byte	.LASF54
 1800 0485 01       		.byte	0x1
 1801 0486 7904     		.2byte	0x479
 1802 0488 AA040000 		.4byte	0x4aa
 1803 048c 7D010000 		.4byte	.LLST10
 1804 0490 10       		.uleb128 0x10
 1805 0491 47020000 		.4byte	.LASF55
 1806 0495 01       		.byte	0x1
 1807 0496 7B04     		.2byte	0x47b
 1808 0498 77000000 		.4byte	0x77
 1809 049c BF010000 		.4byte	.LLST11
 1810 04a0 0B       		.uleb128 0xb
 1811 04a1 0E000000 		.4byte	.LVL58
 1812 04a5 45040000 		.4byte	0x445
 1813 04a9 00       		.byte	0
 1814 04aa 13       		.uleb128 0x13
 1815 04ab 04       		.byte	0x4
 1816 04ac B0040000 		.4byte	0x4b0
 1817 04b0 14       		.uleb128 0x14
 1818 04b1 9D000000 		.4byte	0x9d
 1819 04b5 0D       		.uleb128 0xd
 1820 04b6 49040000 		.4byte	.LASF56
 1821 04ba 01       		.byte	0x1
 1822 04bb A704     		.2byte	0x4a7
 1823 04bd 00000000 		.4byte	.LFB21
 1824 04c1 28000000 		.4byte	.LFE21-.LFB21
 1825 04c5 01       		.uleb128 0x1
 1826 04c6 9C       		.byte	0x9c
 1827 04c7 05050000 		.4byte	0x505
 1828 04cb 12       		.uleb128 0x12
 1829 04cc 74000000 		.4byte	.LASF54
 1830 04d0 01       		.byte	0x1
 1831 04d1 A704     		.2byte	0x4a7
 1832 04d3 05050000 		.4byte	0x505
 1833 04d7 00020000 		.4byte	.LLST12
 1834 04db 12       		.uleb128 0x12
 1835 04dc 0E040000 		.4byte	.LASF57
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 61


 1836 04e0 01       		.byte	0x1
 1837 04e1 A704     		.2byte	0x4a7
 1838 04e3 6B000000 		.4byte	0x6b
 1839 04e7 42020000 		.4byte	.LLST13
 1840 04eb 10       		.uleb128 0x10
 1841 04ec 47020000 		.4byte	.LASF55
 1842 04f0 01       		.byte	0x1
 1843 04f1 AA04     		.2byte	0x4aa
 1844 04f3 6B000000 		.4byte	0x6b
 1845 04f7 7C020000 		.4byte	.LLST14
 1846 04fb 0B       		.uleb128 0xb
 1847 04fc 0E000000 		.4byte	.LVL66
 1848 0500 45040000 		.4byte	0x445
 1849 0504 00       		.byte	0
 1850 0505 13       		.uleb128 0x13
 1851 0506 04       		.byte	0x4
 1852 0507 0B050000 		.4byte	0x50b
 1853 050b 14       		.uleb128 0x14
 1854 050c 6B000000 		.4byte	0x6b
 1855 0510 0D       		.uleb128 0xd
 1856 0511 F1040000 		.4byte	.LASF58
 1857 0515 01       		.byte	0x1
 1858 0516 CE04     		.2byte	0x4ce
 1859 0518 00000000 		.4byte	.LFB22
 1860 051c 20000000 		.4byte	.LFE22-.LFB22
 1861 0520 01       		.uleb128 0x1
 1862 0521 9C       		.byte	0x9c
 1863 0522 62050000 		.4byte	0x562
 1864 0526 12       		.uleb128 0x12
 1865 0527 8D040000 		.4byte	.LASF49
 1866 052b 01       		.byte	0x1
 1867 052c CE04     		.2byte	0x4ce
 1868 052e 6B000000 		.4byte	0x6b
 1869 0532 BD020000 		.4byte	.LLST15
 1870 0536 0B       		.uleb128 0xb
 1871 0537 0C000000 		.4byte	.LVL73
 1872 053b 45040000 		.4byte	0x445
 1873 053f 07       		.uleb128 0x7
 1874 0540 12000000 		.4byte	.LVL74
 1875 0544 45040000 		.4byte	0x445
 1876 0548 52050000 		.4byte	0x552
 1877 054c 08       		.uleb128 0x8
 1878 054d 01       		.uleb128 0x1
 1879 054e 50       		.byte	0x50
 1880 054f 01       		.uleb128 0x1
 1881 0550 3D       		.byte	0x3d
 1882 0551 00       		.byte	0
 1883 0552 09       		.uleb128 0x9
 1884 0553 18000000 		.4byte	.LVL75
 1885 0557 45040000 		.4byte	0x445
 1886 055b 08       		.uleb128 0x8
 1887 055c 01       		.uleb128 0x1
 1888 055d 50       		.byte	0x50
 1889 055e 01       		.uleb128 0x1
 1890 055f 3A       		.byte	0x3a
 1891 0560 00       		.byte	0
 1892 0561 00       		.byte	0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 62


 1893 0562 0F       		.uleb128 0xf
 1894 0563 BC020000 		.4byte	.LASF59
 1895 0567 01       		.byte	0x1
 1896 0568 F904     		.2byte	0x4f9
 1897 056a 6B000000 		.4byte	0x6b
 1898 056e 00000000 		.4byte	.LFB23
 1899 0572 24000000 		.4byte	.LFE23-.LFB23
 1900 0576 01       		.uleb128 0x1
 1901 0577 9C       		.byte	0x9c
 1902 0578 8D050000 		.4byte	0x58d
 1903 057c 10       		.uleb128 0x10
 1904 057d 01020000 		.4byte	.LASF40
 1905 0581 01       		.byte	0x1
 1906 0582 FC04     		.2byte	0x4fc
 1907 0584 6B000000 		.4byte	0x6b
 1908 0588 DE020000 		.4byte	.LLST16
 1909 058c 00       		.byte	0
 1910 058d 0D       		.uleb128 0xd
 1911 058e 1B030000 		.4byte	.LASF60
 1912 0592 01       		.byte	0x1
 1913 0593 4A05     		.2byte	0x54a
 1914 0595 00000000 		.4byte	.LFB24
 1915 0599 24000000 		.4byte	.LFE24-.LFB24
 1916 059d 01       		.uleb128 0x1
 1917 059e 9C       		.byte	0x9c
 1918 059f C6050000 		.4byte	0x5c6
 1919 05a3 10       		.uleb128 0x10
 1920 05a4 B4040000 		.4byte	.LASF24
 1921 05a8 01       		.byte	0x1
 1922 05a9 4C05     		.2byte	0x54c
 1923 05ab 6B000000 		.4byte	0x6b
 1924 05af FC020000 		.4byte	.LLST17
 1925 05b3 0B       		.uleb128 0xb
 1926 05b4 06000000 		.4byte	.LVL78
 1927 05b8 E0060000 		.4byte	0x6e0
 1928 05bc 0B       		.uleb128 0xb
 1929 05bd 1C000000 		.4byte	.LVL79
 1930 05c1 EB060000 		.4byte	0x6eb
 1931 05c5 00       		.byte	0
 1932 05c6 0D       		.uleb128 0xd
 1933 05c7 2C010000 		.4byte	.LASF61
 1934 05cb 01       		.byte	0x1
 1935 05cc A005     		.2byte	0x5a0
 1936 05ce 00000000 		.4byte	.LFB25
 1937 05d2 58000000 		.4byte	.LFE25-.LFB25
 1938 05d6 01       		.uleb128 0x1
 1939 05d7 9C       		.byte	0x9c
 1940 05d8 19060000 		.4byte	0x619
 1941 05dc 12       		.uleb128 0x12
 1942 05dd 94010000 		.4byte	.LASF62
 1943 05e1 01       		.byte	0x1
 1944 05e2 A005     		.2byte	0x5a0
 1945 05e4 6B000000 		.4byte	0x6b
 1946 05e8 0F030000 		.4byte	.LLST18
 1947 05ec 15       		.uleb128 0x15
 1948 05ed 06000000 		.4byte	.LBB2
 1949 05f1 52000000 		.4byte	.LBE2-.LBB2
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 63


 1950 05f5 10       		.uleb128 0x10
 1951 05f6 B4020000 		.4byte	.LASF63
 1952 05fa 01       		.byte	0x1
 1953 05fb A805     		.2byte	0x5a8
 1954 05fd 6B000000 		.4byte	0x6b
 1955 0601 30030000 		.4byte	.LLST19
 1956 0605 11       		.uleb128 0x11
 1957 0606 01010000 		.4byte	.LASF64
 1958 060a 01       		.byte	0x1
 1959 060b D005     		.2byte	0x5d0
 1960 060d 6B000000 		.4byte	0x6b
 1961 0611 05       		.uleb128 0x5
 1962 0612 03       		.byte	0x3
 1963 0613 06000000 		.4byte	txPeriod.5118
 1964 0617 00       		.byte	0
 1965 0618 00       		.byte	0
 1966 0619 0D       		.uleb128 0xd
 1967 061a 73010000 		.4byte	.LASF65
 1968 061e 01       		.byte	0x1
 1969 061f 2406     		.2byte	0x624
 1970 0621 00000000 		.4byte	.LFB26
 1971 0625 02000000 		.4byte	.LFE26-.LFB26
 1972 0629 01       		.uleb128 0x1
 1973 062a 9C       		.byte	0x9c
 1974 062b 3E060000 		.4byte	0x63e
 1975 062f 0E       		.uleb128 0xe
 1976 0630 42010000 		.4byte	.LASF43
 1977 0634 01       		.byte	0x1
 1978 0635 2406     		.2byte	0x624
 1979 0637 6B000000 		.4byte	0x6b
 1980 063b 01       		.uleb128 0x1
 1981 063c 50       		.byte	0x50
 1982 063d 00       		.byte	0
 1983 063e 16       		.uleb128 0x16
 1984 063f 81020000 		.4byte	.LASF66
 1985 0643 01       		.byte	0x1
 1986 0644 1B       		.byte	0x1b
 1987 0645 6B000000 		.4byte	0x6b
 1988 0649 05       		.uleb128 0x5
 1989 064a 03       		.byte	0x3
 1990 064b 00000000 		.4byte	GBCL_initVar
 1991 064f 16       		.uleb128 0x16
 1992 0650 A3020000 		.4byte	.LASF67
 1993 0654 01       		.byte	0x1
 1994 0655 24       		.byte	0x24
 1995 0656 6B000000 		.4byte	0x6b
 1996 065a 05       		.uleb128 0x5
 1997 065b 03       		.byte	0x3
 1998 065c 00000000 		.4byte	GBCL_errorStatus
 1999 0660 17       		.uleb128 0x17
 2000 0661 BC000000 		.4byte	0xbc
 2001 0665 70060000 		.4byte	0x670
 2002 0669 18       		.uleb128 0x18
 2003 066a D9000000 		.4byte	0xd9
 2004 066e 7F       		.byte	0x7f
 2005 066f 00       		.byte	0
 2006 0670 16       		.uleb128 0x16
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 64


 2007 0671 9C010000 		.4byte	.LASF68
 2008 0675 01       		.byte	0x1
 2009 0676 25       		.byte	0x25
 2010 0677 81060000 		.4byte	0x681
 2011 067b 05       		.uleb128 0x5
 2012 067c 03       		.byte	0x3
 2013 067d 00000000 		.4byte	GBCL_rxBuffer
 2014 0681 05       		.uleb128 0x5
 2015 0682 60060000 		.4byte	0x660
 2016 0686 16       		.uleb128 0x16
 2017 0687 D8010000 		.4byte	.LASF69
 2018 068b 01       		.byte	0x1
 2019 068c 26       		.byte	0x26
 2020 068d BC000000 		.4byte	0xbc
 2021 0691 05       		.uleb128 0x5
 2022 0692 03       		.byte	0x3
 2023 0693 00000000 		.4byte	GBCL_rxBufferRead
 2024 0697 16       		.uleb128 0x16
 2025 0698 D1020000 		.4byte	.LASF70
 2026 069c 01       		.byte	0x1
 2027 069d 27       		.byte	0x27
 2028 069e BC000000 		.4byte	0xbc
 2029 06a2 05       		.uleb128 0x5
 2030 06a3 03       		.byte	0x3
 2031 06a4 00000000 		.4byte	GBCL_rxBufferWrite
 2032 06a8 16       		.uleb128 0x16
 2033 06a9 CC040000 		.4byte	.LASF71
 2034 06ad 01       		.byte	0x1
 2035 06ae 28       		.byte	0x28
 2036 06af BC000000 		.4byte	0xbc
 2037 06b3 05       		.uleb128 0x5
 2038 06b4 03       		.byte	0x3
 2039 06b5 00000000 		.4byte	GBCL_rxBufferLoopDetect
 2040 06b9 16       		.uleb128 0x16
 2041 06ba 5D010000 		.4byte	.LASF72
 2042 06be 01       		.byte	0x1
 2043 06bf 29       		.byte	0x29
 2044 06c0 BC000000 		.4byte	0xbc
 2045 06c4 05       		.uleb128 0x5
 2046 06c5 03       		.byte	0x3
 2047 06c6 00000000 		.4byte	GBCL_rxBufferOverflow
 2048 06ca 19       		.uleb128 0x19
 2049 06cb 38020000 		.4byte	.LASF73
 2050 06cf 38020000 		.4byte	.LASF73
 2051 06d3 03       		.byte	0x3
 2052 06d4 88       		.byte	0x88
 2053 06d5 19       		.uleb128 0x19
 2054 06d6 70020000 		.4byte	.LASF74
 2055 06da 70020000 		.4byte	.LASF74
 2056 06de 03       		.byte	0x3
 2057 06df 8B       		.byte	0x8b
 2058 06e0 19       		.uleb128 0x19
 2059 06e1 EA010000 		.4byte	.LASF75
 2060 06e5 EA010000 		.4byte	.LASF75
 2061 06e9 03       		.byte	0x3
 2062 06ea 7D       		.byte	0x7d
 2063 06eb 19       		.uleb128 0x19
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 65


 2064 06ec 19000000 		.4byte	.LASF76
 2065 06f0 19000000 		.4byte	.LASF76
 2066 06f4 03       		.byte	0x3
 2067 06f5 7E       		.byte	0x7e
 2068 06f6 00       		.byte	0
 2069              		.section	.debug_abbrev,"",%progbits
 2070              	.Ldebug_abbrev0:
 2071 0000 01       		.uleb128 0x1
 2072 0001 11       		.uleb128 0x11
 2073 0002 01       		.byte	0x1
 2074 0003 25       		.uleb128 0x25
 2075 0004 0E       		.uleb128 0xe
 2076 0005 13       		.uleb128 0x13
 2077 0006 0B       		.uleb128 0xb
 2078 0007 03       		.uleb128 0x3
 2079 0008 0E       		.uleb128 0xe
 2080 0009 1B       		.uleb128 0x1b
 2081 000a 0E       		.uleb128 0xe
 2082 000b 55       		.uleb128 0x55
 2083 000c 17       		.uleb128 0x17
 2084 000d 11       		.uleb128 0x11
 2085 000e 01       		.uleb128 0x1
 2086 000f 10       		.uleb128 0x10
 2087 0010 17       		.uleb128 0x17
 2088 0011 00       		.byte	0
 2089 0012 00       		.byte	0
 2090 0013 02       		.uleb128 0x2
 2091 0014 24       		.uleb128 0x24
 2092 0015 00       		.byte	0
 2093 0016 0B       		.uleb128 0xb
 2094 0017 0B       		.uleb128 0xb
 2095 0018 3E       		.uleb128 0x3e
 2096 0019 0B       		.uleb128 0xb
 2097 001a 03       		.uleb128 0x3
 2098 001b 0E       		.uleb128 0xe
 2099 001c 00       		.byte	0
 2100 001d 00       		.byte	0
 2101 001e 03       		.uleb128 0x3
 2102 001f 24       		.uleb128 0x24
 2103 0020 00       		.byte	0
 2104 0021 0B       		.uleb128 0xb
 2105 0022 0B       		.uleb128 0xb
 2106 0023 3E       		.uleb128 0x3e
 2107 0024 0B       		.uleb128 0xb
 2108 0025 03       		.uleb128 0x3
 2109 0026 08       		.uleb128 0x8
 2110 0027 00       		.byte	0
 2111 0028 00       		.byte	0
 2112 0029 04       		.uleb128 0x4
 2113 002a 16       		.uleb128 0x16
 2114 002b 00       		.byte	0
 2115 002c 03       		.uleb128 0x3
 2116 002d 0E       		.uleb128 0xe
 2117 002e 3A       		.uleb128 0x3a
 2118 002f 0B       		.uleb128 0xb
 2119 0030 3B       		.uleb128 0x3b
 2120 0031 05       		.uleb128 0x5
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 66


 2121 0032 49       		.uleb128 0x49
 2122 0033 13       		.uleb128 0x13
 2123 0034 00       		.byte	0
 2124 0035 00       		.byte	0
 2125 0036 05       		.uleb128 0x5
 2126 0037 35       		.uleb128 0x35
 2127 0038 00       		.byte	0
 2128 0039 49       		.uleb128 0x49
 2129 003a 13       		.uleb128 0x13
 2130 003b 00       		.byte	0
 2131 003c 00       		.byte	0
 2132 003d 06       		.uleb128 0x6
 2133 003e 2E       		.uleb128 0x2e
 2134 003f 01       		.byte	0x1
 2135 0040 3F       		.uleb128 0x3f
 2136 0041 19       		.uleb128 0x19
 2137 0042 03       		.uleb128 0x3
 2138 0043 0E       		.uleb128 0xe
 2139 0044 3A       		.uleb128 0x3a
 2140 0045 0B       		.uleb128 0xb
 2141 0046 3B       		.uleb128 0x3b
 2142 0047 0B       		.uleb128 0xb
 2143 0048 27       		.uleb128 0x27
 2144 0049 19       		.uleb128 0x19
 2145 004a 11       		.uleb128 0x11
 2146 004b 01       		.uleb128 0x1
 2147 004c 12       		.uleb128 0x12
 2148 004d 06       		.uleb128 0x6
 2149 004e 40       		.uleb128 0x40
 2150 004f 18       		.uleb128 0x18
 2151 0050 9742     		.uleb128 0x2117
 2152 0052 19       		.uleb128 0x19
 2153 0053 01       		.uleb128 0x1
 2154 0054 13       		.uleb128 0x13
 2155 0055 00       		.byte	0
 2156 0056 00       		.byte	0
 2157 0057 07       		.uleb128 0x7
 2158 0058 898201   		.uleb128 0x4109
 2159 005b 01       		.byte	0x1
 2160 005c 11       		.uleb128 0x11
 2161 005d 01       		.uleb128 0x1
 2162 005e 31       		.uleb128 0x31
 2163 005f 13       		.uleb128 0x13
 2164 0060 01       		.uleb128 0x1
 2165 0061 13       		.uleb128 0x13
 2166 0062 00       		.byte	0
 2167 0063 00       		.byte	0
 2168 0064 08       		.uleb128 0x8
 2169 0065 8A8201   		.uleb128 0x410a
 2170 0068 00       		.byte	0
 2171 0069 02       		.uleb128 0x2
 2172 006a 18       		.uleb128 0x18
 2173 006b 9142     		.uleb128 0x2111
 2174 006d 18       		.uleb128 0x18
 2175 006e 00       		.byte	0
 2176 006f 00       		.byte	0
 2177 0070 09       		.uleb128 0x9
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 67


 2178 0071 898201   		.uleb128 0x4109
 2179 0074 01       		.byte	0x1
 2180 0075 11       		.uleb128 0x11
 2181 0076 01       		.uleb128 0x1
 2182 0077 31       		.uleb128 0x31
 2183 0078 13       		.uleb128 0x13
 2184 0079 00       		.byte	0
 2185 007a 00       		.byte	0
 2186 007b 0A       		.uleb128 0xa
 2187 007c 34       		.uleb128 0x34
 2188 007d 00       		.byte	0
 2189 007e 03       		.uleb128 0x3
 2190 007f 0E       		.uleb128 0xe
 2191 0080 3A       		.uleb128 0x3a
 2192 0081 0B       		.uleb128 0xb
 2193 0082 3B       		.uleb128 0x3b
 2194 0083 0B       		.uleb128 0xb
 2195 0084 49       		.uleb128 0x49
 2196 0085 13       		.uleb128 0x13
 2197 0086 02       		.uleb128 0x2
 2198 0087 17       		.uleb128 0x17
 2199 0088 00       		.byte	0
 2200 0089 00       		.byte	0
 2201 008a 0B       		.uleb128 0xb
 2202 008b 898201   		.uleb128 0x4109
 2203 008e 00       		.byte	0
 2204 008f 11       		.uleb128 0x11
 2205 0090 01       		.uleb128 0x1
 2206 0091 31       		.uleb128 0x31
 2207 0092 13       		.uleb128 0x13
 2208 0093 00       		.byte	0
 2209 0094 00       		.byte	0
 2210 0095 0C       		.uleb128 0xc
 2211 0096 2E       		.uleb128 0x2e
 2212 0097 00       		.byte	0
 2213 0098 3F       		.uleb128 0x3f
 2214 0099 19       		.uleb128 0x19
 2215 009a 03       		.uleb128 0x3
 2216 009b 0E       		.uleb128 0xe
 2217 009c 3A       		.uleb128 0x3a
 2218 009d 0B       		.uleb128 0xb
 2219 009e 3B       		.uleb128 0x3b
 2220 009f 05       		.uleb128 0x5
 2221 00a0 27       		.uleb128 0x27
 2222 00a1 19       		.uleb128 0x19
 2223 00a2 49       		.uleb128 0x49
 2224 00a3 13       		.uleb128 0x13
 2225 00a4 11       		.uleb128 0x11
 2226 00a5 01       		.uleb128 0x1
 2227 00a6 12       		.uleb128 0x12
 2228 00a7 06       		.uleb128 0x6
 2229 00a8 40       		.uleb128 0x40
 2230 00a9 18       		.uleb128 0x18
 2231 00aa 9742     		.uleb128 0x2117
 2232 00ac 19       		.uleb128 0x19
 2233 00ad 00       		.byte	0
 2234 00ae 00       		.byte	0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 68


 2235 00af 0D       		.uleb128 0xd
 2236 00b0 2E       		.uleb128 0x2e
 2237 00b1 01       		.byte	0x1
 2238 00b2 3F       		.uleb128 0x3f
 2239 00b3 19       		.uleb128 0x19
 2240 00b4 03       		.uleb128 0x3
 2241 00b5 0E       		.uleb128 0xe
 2242 00b6 3A       		.uleb128 0x3a
 2243 00b7 0B       		.uleb128 0xb
 2244 00b8 3B       		.uleb128 0x3b
 2245 00b9 05       		.uleb128 0x5
 2246 00ba 27       		.uleb128 0x27
 2247 00bb 19       		.uleb128 0x19
 2248 00bc 11       		.uleb128 0x11
 2249 00bd 01       		.uleb128 0x1
 2250 00be 12       		.uleb128 0x12
 2251 00bf 06       		.uleb128 0x6
 2252 00c0 40       		.uleb128 0x40
 2253 00c1 18       		.uleb128 0x18
 2254 00c2 9742     		.uleb128 0x2117
 2255 00c4 19       		.uleb128 0x19
 2256 00c5 01       		.uleb128 0x1
 2257 00c6 13       		.uleb128 0x13
 2258 00c7 00       		.byte	0
 2259 00c8 00       		.byte	0
 2260 00c9 0E       		.uleb128 0xe
 2261 00ca 05       		.uleb128 0x5
 2262 00cb 00       		.byte	0
 2263 00cc 03       		.uleb128 0x3
 2264 00cd 0E       		.uleb128 0xe
 2265 00ce 3A       		.uleb128 0x3a
 2266 00cf 0B       		.uleb128 0xb
 2267 00d0 3B       		.uleb128 0x3b
 2268 00d1 05       		.uleb128 0x5
 2269 00d2 49       		.uleb128 0x49
 2270 00d3 13       		.uleb128 0x13
 2271 00d4 02       		.uleb128 0x2
 2272 00d5 18       		.uleb128 0x18
 2273 00d6 00       		.byte	0
 2274 00d7 00       		.byte	0
 2275 00d8 0F       		.uleb128 0xf
 2276 00d9 2E       		.uleb128 0x2e
 2277 00da 01       		.byte	0x1
 2278 00db 3F       		.uleb128 0x3f
 2279 00dc 19       		.uleb128 0x19
 2280 00dd 03       		.uleb128 0x3
 2281 00de 0E       		.uleb128 0xe
 2282 00df 3A       		.uleb128 0x3a
 2283 00e0 0B       		.uleb128 0xb
 2284 00e1 3B       		.uleb128 0x3b
 2285 00e2 05       		.uleb128 0x5
 2286 00e3 27       		.uleb128 0x27
 2287 00e4 19       		.uleb128 0x19
 2288 00e5 49       		.uleb128 0x49
 2289 00e6 13       		.uleb128 0x13
 2290 00e7 11       		.uleb128 0x11
 2291 00e8 01       		.uleb128 0x1
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 69


 2292 00e9 12       		.uleb128 0x12
 2293 00ea 06       		.uleb128 0x6
 2294 00eb 40       		.uleb128 0x40
 2295 00ec 18       		.uleb128 0x18
 2296 00ed 9742     		.uleb128 0x2117
 2297 00ef 19       		.uleb128 0x19
 2298 00f0 01       		.uleb128 0x1
 2299 00f1 13       		.uleb128 0x13
 2300 00f2 00       		.byte	0
 2301 00f3 00       		.byte	0
 2302 00f4 10       		.uleb128 0x10
 2303 00f5 34       		.uleb128 0x34
 2304 00f6 00       		.byte	0
 2305 00f7 03       		.uleb128 0x3
 2306 00f8 0E       		.uleb128 0xe
 2307 00f9 3A       		.uleb128 0x3a
 2308 00fa 0B       		.uleb128 0xb
 2309 00fb 3B       		.uleb128 0x3b
 2310 00fc 05       		.uleb128 0x5
 2311 00fd 49       		.uleb128 0x49
 2312 00fe 13       		.uleb128 0x13
 2313 00ff 02       		.uleb128 0x2
 2314 0100 17       		.uleb128 0x17
 2315 0101 00       		.byte	0
 2316 0102 00       		.byte	0
 2317 0103 11       		.uleb128 0x11
 2318 0104 34       		.uleb128 0x34
 2319 0105 00       		.byte	0
 2320 0106 03       		.uleb128 0x3
 2321 0107 0E       		.uleb128 0xe
 2322 0108 3A       		.uleb128 0x3a
 2323 0109 0B       		.uleb128 0xb
 2324 010a 3B       		.uleb128 0x3b
 2325 010b 05       		.uleb128 0x5
 2326 010c 49       		.uleb128 0x49
 2327 010d 13       		.uleb128 0x13
 2328 010e 02       		.uleb128 0x2
 2329 010f 18       		.uleb128 0x18
 2330 0110 00       		.byte	0
 2331 0111 00       		.byte	0
 2332 0112 12       		.uleb128 0x12
 2333 0113 05       		.uleb128 0x5
 2334 0114 00       		.byte	0
 2335 0115 03       		.uleb128 0x3
 2336 0116 0E       		.uleb128 0xe
 2337 0117 3A       		.uleb128 0x3a
 2338 0118 0B       		.uleb128 0xb
 2339 0119 3B       		.uleb128 0x3b
 2340 011a 05       		.uleb128 0x5
 2341 011b 49       		.uleb128 0x49
 2342 011c 13       		.uleb128 0x13
 2343 011d 02       		.uleb128 0x2
 2344 011e 17       		.uleb128 0x17
 2345 011f 00       		.byte	0
 2346 0120 00       		.byte	0
 2347 0121 13       		.uleb128 0x13
 2348 0122 0F       		.uleb128 0xf
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 70


 2349 0123 00       		.byte	0
 2350 0124 0B       		.uleb128 0xb
 2351 0125 0B       		.uleb128 0xb
 2352 0126 49       		.uleb128 0x49
 2353 0127 13       		.uleb128 0x13
 2354 0128 00       		.byte	0
 2355 0129 00       		.byte	0
 2356 012a 14       		.uleb128 0x14
 2357 012b 26       		.uleb128 0x26
 2358 012c 00       		.byte	0
 2359 012d 49       		.uleb128 0x49
 2360 012e 13       		.uleb128 0x13
 2361 012f 00       		.byte	0
 2362 0130 00       		.byte	0
 2363 0131 15       		.uleb128 0x15
 2364 0132 0B       		.uleb128 0xb
 2365 0133 01       		.byte	0x1
 2366 0134 11       		.uleb128 0x11
 2367 0135 01       		.uleb128 0x1
 2368 0136 12       		.uleb128 0x12
 2369 0137 06       		.uleb128 0x6
 2370 0138 00       		.byte	0
 2371 0139 00       		.byte	0
 2372 013a 16       		.uleb128 0x16
 2373 013b 34       		.uleb128 0x34
 2374 013c 00       		.byte	0
 2375 013d 03       		.uleb128 0x3
 2376 013e 0E       		.uleb128 0xe
 2377 013f 3A       		.uleb128 0x3a
 2378 0140 0B       		.uleb128 0xb
 2379 0141 3B       		.uleb128 0x3b
 2380 0142 0B       		.uleb128 0xb
 2381 0143 49       		.uleb128 0x49
 2382 0144 13       		.uleb128 0x13
 2383 0145 3F       		.uleb128 0x3f
 2384 0146 19       		.uleb128 0x19
 2385 0147 02       		.uleb128 0x2
 2386 0148 18       		.uleb128 0x18
 2387 0149 00       		.byte	0
 2388 014a 00       		.byte	0
 2389 014b 17       		.uleb128 0x17
 2390 014c 01       		.uleb128 0x1
 2391 014d 01       		.byte	0x1
 2392 014e 49       		.uleb128 0x49
 2393 014f 13       		.uleb128 0x13
 2394 0150 01       		.uleb128 0x1
 2395 0151 13       		.uleb128 0x13
 2396 0152 00       		.byte	0
 2397 0153 00       		.byte	0
 2398 0154 18       		.uleb128 0x18
 2399 0155 21       		.uleb128 0x21
 2400 0156 00       		.byte	0
 2401 0157 49       		.uleb128 0x49
 2402 0158 13       		.uleb128 0x13
 2403 0159 2F       		.uleb128 0x2f
 2404 015a 0B       		.uleb128 0xb
 2405 015b 00       		.byte	0
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 71


 2406 015c 00       		.byte	0
 2407 015d 19       		.uleb128 0x19
 2408 015e 2E       		.uleb128 0x2e
 2409 015f 00       		.byte	0
 2410 0160 3F       		.uleb128 0x3f
 2411 0161 19       		.uleb128 0x19
 2412 0162 3C       		.uleb128 0x3c
 2413 0163 19       		.uleb128 0x19
 2414 0164 6E       		.uleb128 0x6e
 2415 0165 0E       		.uleb128 0xe
 2416 0166 03       		.uleb128 0x3
 2417 0167 0E       		.uleb128 0xe
 2418 0168 3A       		.uleb128 0x3a
 2419 0169 0B       		.uleb128 0xb
 2420 016a 3B       		.uleb128 0x3b
 2421 016b 0B       		.uleb128 0xb
 2422 016c 00       		.byte	0
 2423 016d 00       		.byte	0
 2424 016e 00       		.byte	0
 2425              		.section	.debug_loc,"",%progbits
 2426              	.Ldebug_loc0:
 2427              	.LLST0:
 2428 0000 06000000 		.4byte	.LVL2
 2429 0004 2D000000 		.4byte	.LVL3-1
 2430 0008 0100     		.2byte	0x1
 2431 000a 50       		.byte	0x50
 2432 000b 00000000 		.4byte	0
 2433 000f 00000000 		.4byte	0
 2434              	.LLST1:
 2435 0013 06000000 		.4byte	.LVL6
 2436 0017 2D000000 		.4byte	.LVL7-1
 2437 001b 0100     		.2byte	0x1
 2438 001d 50       		.byte	0x50
 2439 001e 00000000 		.4byte	0
 2440 0022 00000000 		.4byte	0
 2441              	.LLST2:
 2442 0026 22000000 		.4byte	.LVL12
 2443 002a 42000000 		.4byte	.LVL18
 2444 002e 0100     		.2byte	0x1
 2445 0030 50       		.byte	0x50
 2446 0031 48000000 		.4byte	.LVL20
 2447 0035 64000000 		.4byte	.LFE7
 2448 0039 0100     		.2byte	0x1
 2449 003b 50       		.byte	0x50
 2450 003c 00000000 		.4byte	0
 2451 0040 00000000 		.4byte	0
 2452              	.LLST3:
 2453 0044 0C000000 		.4byte	.LVL10
 2454 0048 24000000 		.4byte	.LVL13
 2455 004c 0100     		.2byte	0x1
 2456 004e 53       		.byte	0x53
 2457 004f 24000000 		.4byte	.LVL13
 2458 0053 26000000 		.4byte	.LVL14
 2459 0057 0300     		.2byte	0x3
 2460 0059 73       		.byte	0x73
 2461 005a 7F       		.sleb128 -1
 2462 005b 9F       		.byte	0x9f
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 72


 2463 005c 26000000 		.4byte	.LVL14
 2464 0060 34000000 		.4byte	.LVL16
 2465 0064 0100     		.2byte	0x1
 2466 0066 53       		.byte	0x53
 2467 0067 34000000 		.4byte	.LVL16
 2468 006b 40000000 		.4byte	.LVL17
 2469 006f 0500     		.2byte	0x5
 2470 0071 03       		.byte	0x3
 2471 0072 00000000 		.4byte	GBCL_rxBufferRead
 2472 0076 42000000 		.4byte	.LVL18
 2473 007a 44000000 		.4byte	.LVL19
 2474 007e 0100     		.2byte	0x1
 2475 0080 53       		.byte	0x53
 2476 0081 00000000 		.4byte	0
 2477 0085 00000000 		.4byte	0
 2478              	.LLST4:
 2479 0089 00000000 		.4byte	.LVL23
 2480 008d 22000000 		.4byte	.LVL26
 2481 0091 0200     		.2byte	0x2
 2482 0093 30       		.byte	0x30
 2483 0094 9F       		.byte	0x9f
 2484 0095 22000000 		.4byte	.LVL26
 2485 0099 42000000 		.4byte	.LVL32
 2486 009d 0100     		.2byte	0x1
 2487 009f 50       		.byte	0x50
 2488 00a0 42000000 		.4byte	.LVL32
 2489 00a4 54000000 		.4byte	.LVL35
 2490 00a8 0200     		.2byte	0x2
 2491 00aa 30       		.byte	0x30
 2492 00ab 9F       		.byte	0x9f
 2493 00ac 54000000 		.4byte	.LVL35
 2494 00b0 5C000000 		.4byte	.LVL36
 2495 00b4 0100     		.2byte	0x1
 2496 00b6 50       		.byte	0x50
 2497 00b7 5C000000 		.4byte	.LVL36
 2498 00bb 60000000 		.4byte	.LVL37
 2499 00bf 0200     		.2byte	0x2
 2500 00c1 30       		.byte	0x30
 2501 00c2 9F       		.byte	0x9f
 2502 00c3 60000000 		.4byte	.LVL37
 2503 00c7 84000000 		.4byte	.LFE9
 2504 00cb 0100     		.2byte	0x1
 2505 00cd 50       		.byte	0x50
 2506 00ce 00000000 		.4byte	0
 2507 00d2 00000000 		.4byte	0
 2508              	.LLST5:
 2509 00d6 48000000 		.4byte	.LVL34
 2510 00da 62000000 		.4byte	.LVL38
 2511 00de 0100     		.2byte	0x1
 2512 00e0 53       		.byte	0x53
 2513 00e1 00000000 		.4byte	0
 2514 00e5 00000000 		.4byte	0
 2515              	.LLST6:
 2516 00e9 0C000000 		.4byte	.LVL24
 2517 00ed 24000000 		.4byte	.LVL27
 2518 00f1 0100     		.2byte	0x1
 2519 00f3 53       		.byte	0x53
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 73


 2520 00f4 24000000 		.4byte	.LVL27
 2521 00f8 26000000 		.4byte	.LVL28
 2522 00fc 0300     		.2byte	0x3
 2523 00fe 73       		.byte	0x73
 2524 00ff 7F       		.sleb128 -1
 2525 0100 9F       		.byte	0x9f
 2526 0101 26000000 		.4byte	.LVL28
 2527 0105 34000000 		.4byte	.LVL30
 2528 0109 0100     		.2byte	0x1
 2529 010b 53       		.byte	0x53
 2530 010c 34000000 		.4byte	.LVL30
 2531 0110 40000000 		.4byte	.LVL31
 2532 0114 0500     		.2byte	0x5
 2533 0116 03       		.byte	0x3
 2534 0117 00000000 		.4byte	GBCL_rxBufferRead
 2535 011b 42000000 		.4byte	.LVL32
 2536 011f 44000000 		.4byte	.LVL33
 2537 0123 0100     		.2byte	0x1
 2538 0125 53       		.byte	0x53
 2539 0126 00000000 		.4byte	0
 2540 012a 00000000 		.4byte	0
 2541              	.LLST7:
 2542 012e 0C000000 		.4byte	.LVL39
 2543 0132 16000000 		.4byte	.LVL40
 2544 0136 0100     		.2byte	0x1
 2545 0138 54       		.byte	0x54
 2546 0139 00000000 		.4byte	0
 2547 013d 00000000 		.4byte	0
 2548              	.LLST8:
 2549 0141 3A000000 		.4byte	.LVL42
 2550 0145 3C000000 		.4byte	.LVL43
 2551 0149 0100     		.2byte	0x1
 2552 014b 50       		.byte	0x50
 2553 014c 48000000 		.4byte	.LVL44
 2554 0150 4A000000 		.4byte	.LVL45
 2555 0154 0100     		.2byte	0x1
 2556 0156 50       		.byte	0x50
 2557 0157 4C000000 		.4byte	.LVL46
 2558 015b 60000000 		.4byte	.LFE11
 2559 015f 0100     		.2byte	0x1
 2560 0161 50       		.byte	0x50
 2561 0162 00000000 		.4byte	0
 2562 0166 00000000 		.4byte	0
 2563              	.LLST9:
 2564 016a 06000000 		.4byte	.LVL47
 2565 016e 1B000000 		.4byte	.LVL48-1
 2566 0172 0100     		.2byte	0x1
 2567 0174 50       		.byte	0x50
 2568 0175 00000000 		.4byte	0
 2569 0179 00000000 		.4byte	0
 2570              	.LLST10:
 2571 017d 00000000 		.4byte	.LVL55
 2572 0181 0A000000 		.4byte	.LVL57
 2573 0185 0100     		.2byte	0x1
 2574 0187 50       		.byte	0x50
 2575 0188 0A000000 		.4byte	.LVL57
 2576 018c 14000000 		.4byte	.LVL61
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 74


 2577 0190 0100     		.2byte	0x1
 2578 0192 55       		.byte	0x55
 2579 0193 14000000 		.4byte	.LVL61
 2580 0197 18000000 		.4byte	.LVL62
 2581 019b 0100     		.2byte	0x1
 2582 019d 50       		.byte	0x50
 2583 019e 18000000 		.4byte	.LVL62
 2584 01a2 20000000 		.4byte	.LVL63
 2585 01a6 0100     		.2byte	0x1
 2586 01a8 55       		.byte	0x55
 2587 01a9 20000000 		.4byte	.LVL63
 2588 01ad 24000000 		.4byte	.LFE20
 2589 01b1 0400     		.2byte	0x4
 2590 01b3 F3       		.byte	0xf3
 2591 01b4 01       		.uleb128 0x1
 2592 01b5 50       		.byte	0x50
 2593 01b6 9F       		.byte	0x9f
 2594 01b7 00000000 		.4byte	0
 2595 01bb 00000000 		.4byte	0
 2596              	.LLST11:
 2597 01bf 02000000 		.4byte	.LVL56
 2598 01c3 0A000000 		.4byte	.LVL57
 2599 01c7 0200     		.2byte	0x2
 2600 01c9 30       		.byte	0x30
 2601 01ca 9F       		.byte	0x9f
 2602 01cb 0A000000 		.4byte	.LVL57
 2603 01cf 10000000 		.4byte	.LVL59
 2604 01d3 0100     		.2byte	0x1
 2605 01d5 54       		.byte	0x54
 2606 01d6 12000000 		.4byte	.LVL60
 2607 01da 14000000 		.4byte	.LVL61
 2608 01de 0100     		.2byte	0x1
 2609 01e0 54       		.byte	0x54
 2610 01e1 14000000 		.4byte	.LVL61
 2611 01e5 18000000 		.4byte	.LVL62
 2612 01e9 0200     		.2byte	0x2
 2613 01eb 30       		.byte	0x30
 2614 01ec 9F       		.byte	0x9f
 2615 01ed 18000000 		.4byte	.LVL62
 2616 01f1 20000000 		.4byte	.LVL63
 2617 01f5 0100     		.2byte	0x1
 2618 01f7 54       		.byte	0x54
 2619 01f8 00000000 		.4byte	0
 2620 01fc 00000000 		.4byte	0
 2621              	.LLST12:
 2622 0200 00000000 		.4byte	.LVL64
 2623 0204 08000000 		.4byte	.LVL65
 2624 0208 0100     		.2byte	0x1
 2625 020a 50       		.byte	0x50
 2626 020b 08000000 		.4byte	.LVL65
 2627 020f 14000000 		.4byte	.LVL69
 2628 0213 0100     		.2byte	0x1
 2629 0215 56       		.byte	0x56
 2630 0216 14000000 		.4byte	.LVL69
 2631 021a 1C000000 		.4byte	.LVL70
 2632 021e 0100     		.2byte	0x1
 2633 0220 50       		.byte	0x50
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 75


 2634 0221 1C000000 		.4byte	.LVL70
 2635 0225 22000000 		.4byte	.LVL71
 2636 0229 0100     		.2byte	0x1
 2637 022b 56       		.byte	0x56
 2638 022c 22000000 		.4byte	.LVL71
 2639 0230 28000000 		.4byte	.LFE21
 2640 0234 0400     		.2byte	0x4
 2641 0236 F3       		.byte	0xf3
 2642 0237 01       		.uleb128 0x1
 2643 0238 50       		.byte	0x50
 2644 0239 9F       		.byte	0x9f
 2645 023a 00000000 		.4byte	0
 2646 023e 00000000 		.4byte	0
 2647              	.LLST13:
 2648 0242 00000000 		.4byte	.LVL64
 2649 0246 08000000 		.4byte	.LVL65
 2650 024a 0100     		.2byte	0x1
 2651 024c 51       		.byte	0x51
 2652 024d 08000000 		.4byte	.LVL65
 2653 0251 14000000 		.4byte	.LVL69
 2654 0255 0400     		.2byte	0x4
 2655 0257 F3       		.byte	0xf3
 2656 0258 01       		.uleb128 0x1
 2657 0259 51       		.byte	0x51
 2658 025a 9F       		.byte	0x9f
 2659 025b 14000000 		.4byte	.LVL69
 2660 025f 1C000000 		.4byte	.LVL70
 2661 0263 0100     		.2byte	0x1
 2662 0265 51       		.byte	0x51
 2663 0266 1C000000 		.4byte	.LVL70
 2664 026a 28000000 		.4byte	.LFE21
 2665 026e 0400     		.2byte	0x4
 2666 0270 F3       		.byte	0xf3
 2667 0271 01       		.uleb128 0x1
 2668 0272 51       		.byte	0x51
 2669 0273 9F       		.byte	0x9f
 2670 0274 00000000 		.4byte	0
 2671 0278 00000000 		.4byte	0
 2672              	.LLST14:
 2673 027c 00000000 		.4byte	.LVL64
 2674 0280 08000000 		.4byte	.LVL65
 2675 0284 0200     		.2byte	0x2
 2676 0286 30       		.byte	0x30
 2677 0287 9F       		.byte	0x9f
 2678 0288 08000000 		.4byte	.LVL65
 2679 028c 10000000 		.4byte	.LVL67
 2680 0290 0100     		.2byte	0x1
 2681 0292 54       		.byte	0x54
 2682 0293 12000000 		.4byte	.LVL68
 2683 0297 14000000 		.4byte	.LVL69
 2684 029b 0100     		.2byte	0x1
 2685 029d 54       		.byte	0x54
 2686 029e 14000000 		.4byte	.LVL69
 2687 02a2 1C000000 		.4byte	.LVL70
 2688 02a6 0200     		.2byte	0x2
 2689 02a8 30       		.byte	0x30
 2690 02a9 9F       		.byte	0x9f
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 76


 2691 02aa 1C000000 		.4byte	.LVL70
 2692 02ae 22000000 		.4byte	.LVL71
 2693 02b2 0100     		.2byte	0x1
 2694 02b4 54       		.byte	0x54
 2695 02b5 00000000 		.4byte	0
 2696 02b9 00000000 		.4byte	0
 2697              	.LLST15:
 2698 02bd 00000000 		.4byte	.LVL72
 2699 02c1 0B000000 		.4byte	.LVL73-1
 2700 02c5 0100     		.2byte	0x1
 2701 02c7 50       		.byte	0x50
 2702 02c8 0B000000 		.4byte	.LVL73-1
 2703 02cc 20000000 		.4byte	.LFE22
 2704 02d0 0400     		.2byte	0x4
 2705 02d2 F3       		.byte	0xf3
 2706 02d3 01       		.uleb128 0x1
 2707 02d4 50       		.byte	0x50
 2708 02d5 9F       		.byte	0x9f
 2709 02d6 00000000 		.4byte	0
 2710 02da 00000000 		.4byte	0
 2711              	.LLST16:
 2712 02de 06000000 		.4byte	.LVL76
 2713 02e2 1C000000 		.4byte	.LVL77
 2714 02e6 0100     		.2byte	0x1
 2715 02e8 53       		.byte	0x53
 2716 02e9 1C000000 		.4byte	.LVL77
 2717 02ed 24000000 		.4byte	.LFE23
 2718 02f1 0100     		.2byte	0x1
 2719 02f3 50       		.byte	0x50
 2720 02f4 00000000 		.4byte	0
 2721 02f8 00000000 		.4byte	0
 2722              	.LLST17:
 2723 02fc 06000000 		.4byte	.LVL78
 2724 0300 1B000000 		.4byte	.LVL79-1
 2725 0304 0100     		.2byte	0x1
 2726 0306 50       		.byte	0x50
 2727 0307 00000000 		.4byte	0
 2728 030b 00000000 		.4byte	0
 2729              	.LLST18:
 2730 030f 00000000 		.4byte	.LVL80
 2731 0313 3C000000 		.4byte	.LVL85
 2732 0317 0100     		.2byte	0x1
 2733 0319 50       		.byte	0x50
 2734 031a 3C000000 		.4byte	.LVL85
 2735 031e 58000000 		.4byte	.LFE25
 2736 0322 0400     		.2byte	0x4
 2737 0324 F3       		.byte	0xf3
 2738 0325 01       		.uleb128 0x1
 2739 0326 50       		.byte	0x50
 2740 0327 9F       		.byte	0x9f
 2741 0328 00000000 		.4byte	0
 2742 032c 00000000 		.4byte	0
 2743              	.LLST19:
 2744 0330 22000000 		.4byte	.LVL81
 2745 0334 28000000 		.4byte	.LVL82
 2746 0338 0100     		.2byte	0x1
 2747 033a 53       		.byte	0x53
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 77


 2748 033b 34000000 		.4byte	.LVL83
 2749 033f 3A000000 		.4byte	.LVL84
 2750 0343 0100     		.2byte	0x1
 2751 0345 53       		.byte	0x53
 2752 0346 00000000 		.4byte	0
 2753 034a 00000000 		.4byte	0
 2754              		.section	.debug_aranges,"",%progbits
 2755 0000 EC000000 		.4byte	0xec
 2756 0004 0200     		.2byte	0x2
 2757 0006 00000000 		.4byte	.Ldebug_info0
 2758 000a 04       		.byte	0x4
 2759 000b 00       		.byte	0
 2760 000c 0000     		.2byte	0
 2761 000e 0000     		.2byte	0
 2762 0010 00000000 		.4byte	.LFB1
 2763 0014 44000000 		.4byte	.LFE1-.LFB1
 2764 0018 00000000 		.4byte	.LFB2
 2765 001c 3C000000 		.4byte	.LFE2-.LFB2
 2766 0020 00000000 		.4byte	.LFB0
 2767 0024 1C000000 		.4byte	.LFE0-.LFB0
 2768 0028 00000000 		.4byte	.LFB3
 2769 002c 3C000000 		.4byte	.LFE3-.LFB3
 2770 0030 00000000 		.4byte	.LFB4
 2771 0034 04000000 		.4byte	.LFE4-.LFB4
 2772 0038 00000000 		.4byte	.LFB5
 2773 003c 02000000 		.4byte	.LFE5-.LFB5
 2774 0040 00000000 		.4byte	.LFB6
 2775 0044 0C000000 		.4byte	.LFE6-.LFB6
 2776 0048 00000000 		.4byte	.LFB7
 2777 004c 64000000 		.4byte	.LFE7-.LFB7
 2778 0050 00000000 		.4byte	.LFB8
 2779 0054 28000000 		.4byte	.LFE8-.LFB8
 2780 0058 00000000 		.4byte	.LFB9
 2781 005c 84000000 		.4byte	.LFE9-.LFB9
 2782 0060 00000000 		.4byte	.LFB10
 2783 0064 2C000000 		.4byte	.LFE10-.LFB10
 2784 0068 00000000 		.4byte	.LFB11
 2785 006c 60000000 		.4byte	.LFE11-.LFB11
 2786 0070 00000000 		.4byte	.LFB12
 2787 0074 44000000 		.4byte	.LFE12-.LFB12
 2788 0078 00000000 		.4byte	.LFB13
 2789 007c 02000000 		.4byte	.LFE13-.LFB13
 2790 0080 00000000 		.4byte	.LFB14
 2791 0084 0C000000 		.4byte	.LFE14-.LFB14
 2792 0088 00000000 		.4byte	.LFB15
 2793 008c 0C000000 		.4byte	.LFE15-.LFB15
 2794 0090 00000000 		.4byte	.LFB16
 2795 0094 0C000000 		.4byte	.LFE16-.LFB16
 2796 0098 00000000 		.4byte	.LFB17
 2797 009c 14000000 		.4byte	.LFE17-.LFB17
 2798 00a0 00000000 		.4byte	.LFB18
 2799 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2800 00a8 00000000 		.4byte	.LFB19
 2801 00ac 18000000 		.4byte	.LFE19-.LFB19
 2802 00b0 00000000 		.4byte	.LFB20
 2803 00b4 24000000 		.4byte	.LFE20-.LFB20
 2804 00b8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 78


 2805 00bc 28000000 		.4byte	.LFE21-.LFB21
 2806 00c0 00000000 		.4byte	.LFB22
 2807 00c4 20000000 		.4byte	.LFE22-.LFB22
 2808 00c8 00000000 		.4byte	.LFB23
 2809 00cc 24000000 		.4byte	.LFE23-.LFB23
 2810 00d0 00000000 		.4byte	.LFB24
 2811 00d4 24000000 		.4byte	.LFE24-.LFB24
 2812 00d8 00000000 		.4byte	.LFB25
 2813 00dc 58000000 		.4byte	.LFE25-.LFB25
 2814 00e0 00000000 		.4byte	.LFB26
 2815 00e4 02000000 		.4byte	.LFE26-.LFB26
 2816 00e8 00000000 		.4byte	0
 2817 00ec 00000000 		.4byte	0
 2818              		.section	.debug_ranges,"",%progbits
 2819              	.Ldebug_ranges0:
 2820 0000 00000000 		.4byte	.LFB1
 2821 0004 44000000 		.4byte	.LFE1
 2822 0008 00000000 		.4byte	.LFB2
 2823 000c 3C000000 		.4byte	.LFE2
 2824 0010 00000000 		.4byte	.LFB0
 2825 0014 1C000000 		.4byte	.LFE0
 2826 0018 00000000 		.4byte	.LFB3
 2827 001c 3C000000 		.4byte	.LFE3
 2828 0020 00000000 		.4byte	.LFB4
 2829 0024 04000000 		.4byte	.LFE4
 2830 0028 00000000 		.4byte	.LFB5
 2831 002c 02000000 		.4byte	.LFE5
 2832 0030 00000000 		.4byte	.LFB6
 2833 0034 0C000000 		.4byte	.LFE6
 2834 0038 00000000 		.4byte	.LFB7
 2835 003c 64000000 		.4byte	.LFE7
 2836 0040 00000000 		.4byte	.LFB8
 2837 0044 28000000 		.4byte	.LFE8
 2838 0048 00000000 		.4byte	.LFB9
 2839 004c 84000000 		.4byte	.LFE9
 2840 0050 00000000 		.4byte	.LFB10
 2841 0054 2C000000 		.4byte	.LFE10
 2842 0058 00000000 		.4byte	.LFB11
 2843 005c 60000000 		.4byte	.LFE11
 2844 0060 00000000 		.4byte	.LFB12
 2845 0064 44000000 		.4byte	.LFE12
 2846 0068 00000000 		.4byte	.LFB13
 2847 006c 02000000 		.4byte	.LFE13
 2848 0070 00000000 		.4byte	.LFB14
 2849 0074 0C000000 		.4byte	.LFE14
 2850 0078 00000000 		.4byte	.LFB15
 2851 007c 0C000000 		.4byte	.LFE15
 2852 0080 00000000 		.4byte	.LFB16
 2853 0084 0C000000 		.4byte	.LFE16
 2854 0088 00000000 		.4byte	.LFB17
 2855 008c 14000000 		.4byte	.LFE17
 2856 0090 00000000 		.4byte	.LFB18
 2857 0094 0C000000 		.4byte	.LFE18
 2858 0098 00000000 		.4byte	.LFB19
 2859 009c 18000000 		.4byte	.LFE19
 2860 00a0 00000000 		.4byte	.LFB20
 2861 00a4 24000000 		.4byte	.LFE20
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 79


 2862 00a8 00000000 		.4byte	.LFB21
 2863 00ac 28000000 		.4byte	.LFE21
 2864 00b0 00000000 		.4byte	.LFB22
 2865 00b4 20000000 		.4byte	.LFE22
 2866 00b8 00000000 		.4byte	.LFB23
 2867 00bc 24000000 		.4byte	.LFE23
 2868 00c0 00000000 		.4byte	.LFB24
 2869 00c4 24000000 		.4byte	.LFE24
 2870 00c8 00000000 		.4byte	.LFB25
 2871 00cc 58000000 		.4byte	.LFE25
 2872 00d0 00000000 		.4byte	.LFB26
 2873 00d4 02000000 		.4byte	.LFE26
 2874 00d8 00000000 		.4byte	0
 2875 00dc 00000000 		.4byte	0
 2876              		.section	.debug_line,"",%progbits
 2877              	.Ldebug_line0:
 2878 0000 EB020000 		.section	.debug_str,"MS",%progbits,1
 2878      02004C00 
 2878      00000201 
 2878      FB0E0D00 
 2878      01010101 
 2879              	.LASF33:
 2880 0000 4742434C 		.ascii	"GBCL_ReadRxStatus\000"
 2880      5F526561 
 2880      64527853 
 2880      74617475 
 2880      7300
 2881              	.LASF10:
 2882 0012 75696E74 		.ascii	"uint16\000"
 2882      313600
 2883              	.LASF76:
 2884 0019 43794578 		.ascii	"CyExitCriticalSection\000"
 2884      69744372 
 2884      69746963 
 2884      616C5365 
 2884      6374696F 
 2885              	.LASF79:
 2886 002f 433A5C55 		.ascii	"C:\\Users\\Thermaltake\\Documents\\GitHub\\Mepsan\\"
 2886      73657273 
 2886      5C546865 
 2886      726D616C 
 2886      74616B65 
 2887 005c 456D756C 		.ascii	"Emulador\\Emulador.cydsn\000"
 2887      61646F72 
 2887      5C456D75 
 2887      6C61646F 
 2887      722E6379 
 2888              	.LASF54:
 2889 0074 73747269 		.ascii	"string\000"
 2889      6E6700
 2890              	.LASF48:
 2891 007b 4742434C 		.ascii	"GBCL_WriteTxData\000"
 2891      5F577269 
 2891      74655478 
 2891      44617461 
 2891      00
 2892              	.LASF44:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 80


 2893 008c 4742434C 		.ascii	"GBCL_SetRxAddress1\000"
 2893      5F536574 
 2893      52784164 
 2893      64726573 
 2893      733100
 2894              	.LASF46:
 2895 009f 4742434C 		.ascii	"GBCL_SetRxAddress2\000"
 2895      5F536574 
 2895      52784164 
 2895      64726573 
 2895      733200
 2896              	.LASF7:
 2897 00b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 2897      206C6F6E 
 2897      6720756E 
 2897      7369676E 
 2897      65642069 
 2898              	.LASF78:
 2899 00c9 47656E65 		.ascii	"Generated_Source\\PSoC5\\GBCL.c\000"
 2899      72617465 
 2899      645F536F 
 2899      75726365 
 2899      5C50536F 
 2900              	.LASF6:
 2901 00e7 6C6F6E67 		.ascii	"long long int\000"
 2901      206C6F6E 
 2901      6720696E 
 2901      7400
 2902              	.LASF0:
 2903 00f5 7369676E 		.ascii	"signed char\000"
 2903      65642063 
 2903      68617200 
 2904              	.LASF64:
 2905 0101 74785065 		.ascii	"txPeriod\000"
 2905      72696F64 
 2905      00
 2906              	.LASF41:
 2907 010a 4742434C 		.ascii	"GBCL_ClearRxBuffer\000"
 2907      5F436C65 
 2907      61725278 
 2907      42756666 
 2907      657200
 2908              	.LASF4:
 2909 011d 6C6F6E67 		.ascii	"long int\000"
 2909      20696E74 
 2909      00
 2910              	.LASF9:
 2911 0126 75696E74 		.ascii	"uint8\000"
 2911      3800
 2912              	.LASF61:
 2913 012c 4742434C 		.ascii	"GBCL_SendBreak\000"
 2913      5F53656E 
 2913      64427265 
 2913      616B00
 2914              	.LASF13:
 2915 013b 646F7562 		.ascii	"double\000"
 2915      6C6500
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 81


 2916              	.LASF43:
 2917 0142 61646472 		.ascii	"addressMode\000"
 2917      6573734D 
 2917      6F646500 
 2918              	.LASF11:
 2919 014e 75696E74 		.ascii	"uint32\000"
 2919      333200
 2920              	.LASF27:
 2921 0155 636F6E74 		.ascii	"control\000"
 2921      726F6C00 
 2922              	.LASF72:
 2923 015d 4742434C 		.ascii	"GBCL_rxBufferOverflow\000"
 2923      5F727842 
 2923      75666665 
 2923      724F7665 
 2923      72666C6F 
 2924              	.LASF65:
 2925 0173 4742434C 		.ascii	"GBCL_SetTxAddressMode\000"
 2925      5F536574 
 2925      54784164 
 2925      64726573 
 2925      734D6F64 
 2926              	.LASF22:
 2927 0189 4742434C 		.ascii	"GBCL_Start\000"
 2927      5F537461 
 2927      727400
 2928              	.LASF62:
 2929 0194 7265744D 		.ascii	"retMode\000"
 2929      6F646500 
 2930              	.LASF68:
 2931 019c 4742434C 		.ascii	"GBCL_rxBuffer\000"
 2931      5F727842 
 2931      75666665 
 2931      7200
 2932              	.LASF8:
 2933 01aa 756E7369 		.ascii	"unsigned int\000"
 2933      676E6564 
 2933      20696E74 
 2933      00
 2934              	.LASF38:
 2935 01b7 6C6F6345 		.ascii	"locErrorStatus\000"
 2935      72726F72 
 2935      53746174 
 2935      757300
 2936              	.LASF5:
 2937 01c6 6C6F6E67 		.ascii	"long unsigned int\000"
 2937      20756E73 
 2937      69676E65 
 2937      6420696E 
 2937      7400
 2938              	.LASF69:
 2939 01d8 4742434C 		.ascii	"GBCL_rxBufferRead\000"
 2939      5F727842 
 2939      75666665 
 2939      72526561 
 2939      6400
 2940              	.LASF75:
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 82


 2941 01ea 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2941      74657243 
 2941      72697469 
 2941      63616C53 
 2941      65637469 
 2942              	.LASF40:
 2943 0201 73697A65 		.ascii	"size\000"
 2943      00
 2944              	.LASF3:
 2945 0206 73686F72 		.ascii	"short unsigned int\000"
 2945      7420756E 
 2945      7369676E 
 2945      65642069 
 2945      6E7400
 2946              	.LASF51:
 2947 0219 4742434C 		.ascii	"GBCL_ReadTxStatus\000"
 2947      5F526561 
 2947      64547853 
 2947      74617475 
 2947      7300
 2948              	.LASF35:
 2949 022b 4742434C 		.ascii	"GBCL_GetChar\000"
 2949      5F476574 
 2949      43686172 
 2949      00
 2950              	.LASF73:
 2951 0238 4379496E 		.ascii	"CyIntSetVector\000"
 2951      74536574 
 2951      56656374 
 2951      6F7200
 2952              	.LASF55:
 2953 0247 62756649 		.ascii	"bufIndex\000"
 2953      6E646578 
 2953      00
 2954              	.LASF28:
 2955 0250 696E7453 		.ascii	"intSrc\000"
 2955      726300
 2956              	.LASF50:
 2957 0257 4742434C 		.ascii	"GBCL_ReadControlRegister\000"
 2957      5F526561 
 2957      64436F6E 
 2957      74726F6C 
 2957      52656769 
 2958              	.LASF74:
 2959 0270 4379496E 		.ascii	"CyIntSetPriority\000"
 2959      74536574 
 2959      5072696F 
 2959      72697479 
 2959      00
 2960              	.LASF66:
 2961 0281 4742434C 		.ascii	"GBCL_initVar\000"
 2961      5F696E69 
 2961      74566172 
 2961      00
 2962              	.LASF53:
 2963 028e 4742434C 		.ascii	"GBCL_PutString\000"
 2963      5F507574 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 83


 2963      53747269 
 2963      6E6700
 2964              	.LASF17:
 2965 029d 72656733 		.ascii	"reg32\000"
 2965      3200
 2966              	.LASF67:
 2967 02a3 4742434C 		.ascii	"GBCL_errorStatus\000"
 2967      5F657272 
 2967      6F725374 
 2967      61747573 
 2967      00
 2968              	.LASF63:
 2969 02b4 746D7053 		.ascii	"tmpStat\000"
 2969      74617400 
 2970              	.LASF59:
 2971 02bc 4742434C 		.ascii	"GBCL_GetTxBufferSize\000"
 2971      5F476574 
 2971      54784275 
 2971      66666572 
 2971      53697A65 
 2972              	.LASF70:
 2973 02d1 4742434C 		.ascii	"GBCL_rxBufferWrite\000"
 2973      5F727842 
 2973      75666665 
 2973      72577269 
 2973      746500
 2974              	.LASF19:
 2975 02e4 73697A65 		.ascii	"sizetype\000"
 2975      74797065 
 2975      00
 2976              	.LASF18:
 2977 02ed 6C6F6E67 		.ascii	"long double\000"
 2977      20646F75 
 2977      626C6500 
 2978              	.LASF45:
 2979 02f9 61646472 		.ascii	"address\000"
 2979      65737300 
 2980              	.LASF31:
 2981 0301 6C6F6352 		.ascii	"locRxBufferWrite\000"
 2981      78427566 
 2981      66657257 
 2981      72697465 
 2981      00
 2982              	.LASF36:
 2983 0312 72785374 		.ascii	"rxStatus\000"
 2983      61747573 
 2983      00
 2984              	.LASF60:
 2985 031b 4742434C 		.ascii	"GBCL_ClearTxBuffer\000"
 2985      5F436C65 
 2985      61725478 
 2985      42756666 
 2985      657200
 2986              	.LASF23:
 2987 032e 4742434C 		.ascii	"GBCL_Stop\000"
 2987      5F53746F 
 2987      7000
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 84


 2988              	.LASF12:
 2989 0338 666C6F61 		.ascii	"float\000"
 2989      7400
 2990              	.LASF52:
 2991 033e 4742434C 		.ascii	"GBCL_PutChar\000"
 2991      5F507574 
 2991      43686172 
 2991      00
 2992              	.LASF16:
 2993 034b 72656738 		.ascii	"reg8\000"
 2993      00
 2994              	.LASF26:
 2995 0350 4742434C 		.ascii	"GBCL_SetRxInterruptMode\000"
 2995      5F536574 
 2995      5278496E 
 2995      74657272 
 2995      7570744D 
 2996              	.LASF1:
 2997 0368 756E7369 		.ascii	"unsigned char\000"
 2997      676E6564 
 2997      20636861 
 2997      7200
 2998              	.LASF2:
 2999 0376 73686F72 		.ascii	"short int\000"
 2999      7420696E 
 2999      7400
 3000              	.LASF77:
 3001 0380 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3001      43313120 
 3001      352E342E 
 3001      31203230 
 3001      31363036 
 3002 03b3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3002      20726576 
 3002      6973696F 
 3002      6E203233 
 3002      37373135 
 3003 03e6 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3003      66756E63 
 3003      74696F6E 
 3003      2D736563 
 3003      74696F6E 
 3004              	.LASF57:
 3005 040e 62797465 		.ascii	"byteCount\000"
 3005      436F756E 
 3005      7400
 3006              	.LASF29:
 3007 0418 72784461 		.ascii	"rxData\000"
 3007      746100
 3008              	.LASF32:
 3009 041f 4742434C 		.ascii	"GBCL_ReadRxData\000"
 3009      5F526561 
 3009      64527844 
 3009      61746100 
 3010              	.LASF39:
 3011 042f 4742434C 		.ascii	"GBCL_GetRxBufferSize\000"
 3011      5F476574 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 85


 3011      52784275 
 3011      66666572 
 3011      53697A65 
 3012              	.LASF15:
 3013 0444 63686172 		.ascii	"char\000"
 3013      00
 3014              	.LASF56:
 3015 0449 4742434C 		.ascii	"GBCL_PutArray\000"
 3015      5F507574 
 3015      41727261 
 3015      7900
 3016              	.LASF42:
 3017 0457 4742434C 		.ascii	"GBCL_SetRxAddressMode\000"
 3017      5F536574 
 3017      52784164 
 3017      64726573 
 3017      734D6F64 
 3018              	.LASF14:
 3019 046d 63686172 		.ascii	"char8\000"
 3019      3800
 3020              	.LASF25:
 3021 0473 4742434C 		.ascii	"GBCL_WriteControlRegister\000"
 3021      5F577269 
 3021      7465436F 
 3021      6E74726F 
 3021      6C526567 
 3022              	.LASF49:
 3023 048d 74784461 		.ascii	"txDataByte\000"
 3023      74614279 
 3023      746500
 3024              	.LASF21:
 3025 0498 4742434C 		.ascii	"GBCL_Enable\000"
 3025      5F456E61 
 3025      626C6500 
 3026              	.LASF30:
 3027 04a4 6C6F6352 		.ascii	"locRxBufferRead\000"
 3027      78427566 
 3027      66657252 
 3027      65616400 
 3028              	.LASF24:
 3029 04b4 656E6162 		.ascii	"enableInterrupts\000"
 3029      6C65496E 
 3029      74657272 
 3029      75707473 
 3029      00
 3030              	.LASF34:
 3031 04c5 73746174 		.ascii	"status\000"
 3031      757300
 3032              	.LASF71:
 3033 04cc 4742434C 		.ascii	"GBCL_rxBufferLoopDetect\000"
 3033      5F727842 
 3033      75666665 
 3033      724C6F6F 
 3033      70446574 
 3034              	.LASF37:
 3035 04e4 4742434C 		.ascii	"GBCL_GetByte\000"
 3035      5F476574 
ARM GAS  C:\Users\THERMA~1\AppData\Local\Temp\ccQ3Sx9h.s 			page 86


 3035      42797465 
 3035      00
 3036              	.LASF58:
 3037 04f1 4742434C 		.ascii	"GBCL_PutCRLF\000"
 3037      5F507574 
 3037      43524C46 
 3037      00
 3038              	.LASF47:
 3039 04fe 4742434C 		.ascii	"GBCL_SetTxInterruptMode\000"
 3039      5F536574 
 3039      5478496E 
 3039      74657272 
 3039      7570744D 
 3040              	.LASF20:
 3041 0516 4742434C 		.ascii	"GBCL_Init\000"
 3041      5F496E69 
 3041      7400
 3042              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
